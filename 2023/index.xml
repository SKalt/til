<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2023s on Today I Learned</title><link>https://skalt.github.io/til/2023/</link><description>Recent content in 2023s on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/2023/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2023/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/01/</guid><description>The difference between triggers and event triggers in postgres:
Unlike regular triggers, which are attached to a single table and capture only DML events, event triggers are global to a particular database and are capable of capturing DDL events. Like regular triggers, event triggers can be written in any procedural language that includes event trigger support, or in C, but not in plain SQL.
&amp;ndash; https://www.postgresql.org/docs/current/event-triggers.html</description></item><item><title/><link>https://skalt.github.io/til/2023/01/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/09/</guid><description>That a directory service doesn&amp;rsquo;t necessarily provide authentication: https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/what-is-a-directory-service describes a directory service as a document database optimized for searches of a hierarchical (directory) tree.
[Directory] entries are arranged hierarchically in a tree that is structured geographically and organizationally. Global entries, such as countries/regions, reside at the top of the tree, followed by state or national organizations, then organizational units, people, devices, or anything else that might be represented in a directory.</description></item><item><title/><link>https://skalt.github.io/til/2023/01/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/17/</guid><description>that you can set PYTHONDONTWRITEBYTECODE=1 to prevent python from writing pycs (see https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE)
Also: that AWS SSO does SCIM actions using the sso-directory:* IAM prefix rather than the sso:* prefix.</description></item><item><title/><link>https://skalt.github.io/til/2023/01/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/28/</guid><description>That you need ato git add a flake.nix for the flake&amp;rsquo;s contents to start to work with nix develop
This is needed because Nix flakes respects gitignores. If you don&amp;rsquo;t add things to the git staging area, git doesn&amp;rsquo;t know about the files at all, and Nix flakes can&amp;rsquo;t know if it should ignore them. &amp;ndash; https://xeiaso.net/blog/nix-flakes-go-programs
that &amp;ldquo;truecolor&amp;rdquo; support in shells is detected with the $COLORTERM env var</description></item><item><title/><link>https://skalt.github.io/til/2023/01/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/29/</guid><description>how to setup passwordless SSH login:
ssh-copy-id $(whoami)@${other_host} https://linuxize.com/post/how-to-setup-passwordless-ssh-login/
how to change a ubuntu machine&amp;rsquo;s computer&amp;rsquo;s hostname:
echo &amp;#34;new-hostname&amp;#34; &amp;gt; sudo tee /etc/hostname; sudo sed -i &amp;#39;s/old-hostname/new-hostname/1&amp;#39; /etc/hosts; sudo hosname &amp;#39;new-hostname&amp;#39;; # &amp;lt;- for changes to take effect prior to reboot h/t https://www.howtogeek.com/197934/how-to-change-your-hostname-computer-name-on-ubuntu-linux/</description></item><item><title/><link>https://skalt.github.io/til/2023/01/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/30/</guid><description>That psql et al. support colors:
export PG_COLOR=auto # only colorize output to ttys learned from https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html See also:
https://www.postgresql.org/docs/current/color-when.html https://www.postgresql.org/docs/current/color-which.html</description></item><item><title/><link>https://skalt.github.io/til/2023/02/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/01/</guid><description>git restore exists, and works like a more destructive git stash
See https://git-scm.com/docs/git-restore</description></item><item><title/><link>https://skalt.github.io/til/2023/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/08/</guid><description>That in Rust, assert! runs in both debug and release builds. For debug-only assertions, use debug_assert!. See https://doc.rust-lang.org/stable/std/macro.debug_assert.html.
That in Python, you can call isinstance(thing, (tuple, OfMany, DifferentClasses)) to check if a variable is an instance of many possible classes. See https://docs.python.org/3/library/functions.html?highlight=isinstance#isinstance.</description></item><item><title/><link>https://skalt.github.io/til/2023/02/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/21/</guid><description>That properties of a NamedTuple can have docstrings:
class FooBar(NamedTuple): foo: str &amp;#34;&amp;#34;&amp;#34;Foo&amp;#34;&amp;#34;&amp;#34; bar: int &amp;#34;&amp;#34;&amp;#34;Bar&amp;#34;&amp;#34;&amp;#34; As seen in https://github.com/sqlalchemy/sqlalchemy/blob/main/lib/sqlalchemy/sql/compiler.py#L348</description></item><item><title/><link>https://skalt.github.io/til/2023/02/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/22/</guid><description>How to make a self-signed TLS certificate:
#!/usr/bin/env bash # stolen from https://stackoverflow.com/questions/10175812/how-to-generate-a-self-signed-ssl-certificate-using-openssl openssl \ req -x509 \ -newkey rsa:4096 \ -keyout key.pem \ -out cert.pem \ -sha256 -days 365 -nodes -subj &amp;#39;/CN=localhost&amp;#39;</description></item><item><title/><link>https://skalt.github.io/til/2023/03/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/02/</guid><description>that there&amp;rsquo;s a git commit --trailer &amp;lt;token&amp;gt;:&amp;lt;value&amp;gt; flag.
https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---trailerlttokengtltvaluegt</description></item><item><title/><link>https://skalt.github.io/til/2023/03/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/04/</guid><description>The string &amp;ldquo;0.1.12&amp;rdquo; is a version requirement. Although it looks like a specific version of the time crate, it actually specifies a range of versions and allows SemVer compatible updates.
&amp;ndash; https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html
Instead, in order to lock to a specific version of a crate, you need to write = 0.1.2.</description></item><item><title/><link>https://skalt.github.io/til/2023/03/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/09/</guid><description>This was a bit of a rollercoaster morning: (1) I tried git worktree add $branch, and it was pretty convenient! (2) until I got a pre-commit error, then I got error: unable to read $HASH on git status (3) which led me to discover git fsck --full --name-objects, which is currently yelling about error: $HASH: invalid sha1 pointer in cache-tree</description></item><item><title/><link>https://skalt.github.io/til/2023/03/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/19/</guid><description>That you can use a .gitattributes file to prevent files from appearing in GitHub diffs like so:
generated/**/* linguist-generated=true See https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github</description></item><item><title/><link>https://skalt.github.io/til/2023/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/09/</guid><description>About the precedent for deriving serde from serialize/deserialize:
A codec is a device or computer program that encodes or decodes a data stream or signal. Codec is a portmanteau of coder/decoder. In electronic communications, an endec is a device that acts as both an encoder and a decoder on a signal or data stream, and hence is a type of codec. Endec is a portmanteau of encoder/decoder. &amp;ndash; https://en.wikipedia.org/wiki/Codec</description></item><item><title/><link>https://skalt.github.io/til/2023/05/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/15/</guid><description>That powerline networking kits exist: they send signals over home electrical wiring to extend your home network. Similarly, MoCA (Multimedia over Coaxial Alliance) sends signals over coax cable.</description></item></channel></rss>