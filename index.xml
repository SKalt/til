<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Today I Learned</title><link>https://skalt.github.io/til/</link><description>Recent content on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2021/07/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/12/</guid><description>&lt;p&gt;TIL that terminals attached to interactive docker containers don&amp;rsquo;t necesarily respect ANSI escape codes.
I&amp;rsquo;m still not 100% sure what causes the terminal to respect ANSI escape codes or not, but &lt;code&gt;test -t 1&lt;/code&gt; didn&amp;rsquo;t seem to correctly discriminate.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/07/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/13/</guid><description>&lt;p&gt;That &lt;code&gt;pickle.loads(pickle.dumps(obj))&lt;/code&gt; is faster than &lt;code&gt;copy.deepcopy(obj)&lt;/code&gt;
Learned from &lt;a href="https://twitter.com/simonw/status/1413635105755570177"&gt;Simon Willison&amp;rsquo;s twitter&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/07/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/14/</guid><description>&lt;p&gt;that &lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt;+&lt;!-- raw HTML omitted --&gt;D&lt;!-- raw HTML omitted --&gt; selects the next occurence of the currently-highlighted text in VS Code!
Thanks to Mark Brewer for teaching me this!&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/07/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/22/</guid><description>&lt;p&gt;about &lt;code&gt;const enum&lt;/code&gt;s in typescript, which get compiled to their values rather than getting represented as a mapping object.
See &lt;a href="https://www.typescriptlang.org/docs/handbook/enums.html#const-enums"&gt;https://www.typescriptlang.org/docs/handbook/enums.html#const-enums&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/07/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/24/</guid><description>&lt;p&gt;&lt;a href="https://web.dev/fetch-upload-streaming/#previously-on-the-exciting-adventures-of-fetch-streams"&gt;How to stream large responses using the Javascript &lt;code&gt;Fetch&lt;/code&gt; API:&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Received&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Response fully received&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also: &lt;a href="https://linuxhandbook.com/login-shell/"&gt;the circumstances under which ~/.*profile files are run: only if you log in.&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/07/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/25/</guid><description>&lt;p&gt;You can create new google docs/spreadsheets/presentations, office365 docs/sheets/presentations, and github repos/gists/codespaces by accessing specific URLs in the browser:&lt;/p&gt;
&lt;h2 id="g-suite"&gt;G Suite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;docs: &lt;a href="https://doc.new"&gt;https://doc.new&lt;/a&gt;, &lt;a href="https://docs.new"&gt;https://docs.new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;sheets: &lt;a href="https://sheet.new"&gt;https://sheet.new&lt;/a&gt;, &lt;a href="https://sheets.new"&gt;https://sheets.new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;slides: &lt;a href="http://slide.new"&gt;http://slide.new&lt;/a&gt;, &lt;a href="http://slides.new"&gt;http://slides.new&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="office-365"&gt;Office 365&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;docs: &lt;a href="https://word.new"&gt;https://word.new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;sheets: &lt;a href="https://excel.new"&gt;https://excel.new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;slides: &lt;a href="https://ppt.new"&gt;https://ppt.new&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="github"&gt;github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://repo.new"&gt;https://repo.new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.new"&gt;https://gist.new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codespace.new"&gt;https://codespace.new&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;source: &lt;a href="https://twitter.com/rothgar/status/1419339782258184192"&gt;https://twitter.com/rothgar/status/1419339782258184192&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/07/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/31/</guid><description>&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-grep"&gt;That you can use &lt;code&gt;git grep&lt;/code&gt;&lt;/a&gt; to search for a string in a git repo.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/08/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/08/05/</guid><description>&lt;p&gt;that running python with the &lt;a href="https://docs.python.org/3/using/cmdline.html#cmdoption-o"&gt;&lt;code&gt;-O&lt;/code&gt; flag disables &lt;code&gt;assert&lt;/code&gt; statements&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/08/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/08/12/</guid><description>&lt;p&gt;about a new source of standard-ish python functionality: &lt;a href="https://github.com/mahmoud/boltons"&gt;https://github.com/mahmoud/boltons&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/09/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/05/</guid><description>&lt;p&gt;about &lt;a href="https://pkg.go.dev/cmd/go#hdr-Build_constraints"&gt;go build constraints&lt;/a&gt;. Add&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;//go:build (booleanExprUsingTagNames)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to the top of the conditionally-included file. The boolean expression can be composed of tags (passed via &lt;code&gt;go build -tag &amp;lt;tag&amp;gt;...&lt;/code&gt;) or expressions referencing the host or target os and arch.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/09/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/06/</guid><description>&lt;p&gt;about &lt;code&gt;PATH_MAX&lt;/code&gt;: the part of the POSIX standard which determines the maximum number of bytes allowed in an absolute path. In Linux, &lt;code&gt;PATH_MAX&lt;/code&gt; is 4096 &lt;a href="https://stackoverflow.com/a/9449307/6571327"&gt;[src]&lt;/a&gt;, but it&amp;rsquo;s possible to construct longer paths if you don&amp;rsquo;t care about some (most) utilities that use the current working directory to fail due to buffer overflow.&lt;/p&gt;
&lt;p&gt;Also, I learned that &lt;a href="https://en.wikipedia.org/wiki/Comparison_of_file_systems#Limits"&gt;most filesystems restrict file names to 255 bytes&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/09/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/15/</guid><description>&lt;p&gt;That you &lt;em&gt;can&lt;/em&gt;, technically, write inline comments in bash. Specifically, you have to put the comments in a subshell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; abc &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="c1"&gt;#put your comment here` \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; def &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="c1"&gt;#another chance for a comment` \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; xyz etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;^ from &lt;a href="https://stackoverflow.com/a/23872003/6571327"&gt;https://stackoverflow.com/a/23872003/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/09/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/21/</guid><description>&lt;p&gt;That the &lt;!-- raw HTML omitted --&gt;IANA&lt;!-- raw HTML omitted --&gt; suggests 49152–65535 (215 + 214 to 216 − 1) for dynamic or private ports.
source: &lt;a href="https://en.wikipedia.org/wiki/Ephemeral_port#Range"&gt;https://en.wikipedia.org/wiki/Ephemeral_port#Range&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/09/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/24/</guid><description>&lt;p&gt;that you can find the version of debian used by your current ubuntu version by running &lt;code&gt;cat /etc/debian_version&lt;/code&gt;. Even better, you can &lt;code&gt;source /etc/os-release&lt;/code&gt; and get &lt;code&gt;$ID&lt;/code&gt; and &lt;code&gt;$VERSION_ID&lt;/code&gt; variables.
Here&amp;rsquo;s what&amp;rsquo;s in the os-release for Ubuntu 20.04:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;Ubuntu&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;20.04.3 LTS (Focal Fossa)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ubuntu
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;ID_LIKE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debian
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;PRETTY_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;Ubuntu 20.04.3 LTS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;VERSION_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;20.04&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;HOME_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;https://www.ubuntu.com/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;SUPPORT_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;https://help.ubuntu.com/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;BUG_REPORT_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;https://bugs.launchpad.net/ubuntu/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;PRIVACY_POLICY_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;VERSION_CODENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;focal
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;UBUNTU_CODENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;focal
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sources: &lt;a href="https://askubuntu.com/a/445496/505362"&gt;https://askubuntu.com/a/445496/505362&lt;/a&gt; and the source code at &lt;a href="https://dot.net/v1/dotnet-installer.sh"&gt;https://dot.net/v1/dotnet-installer.sh&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/01/</guid><description>&lt;p&gt;That there&amp;rsquo;s a postgres keyword &lt;code&gt;DEALLOCATE&lt;/code&gt; to remove prepared statements from memory: &lt;a href="https://www.postgresql.org/docs/current/sql-deallocate.html"&gt;https://www.postgresql.org/docs/current/sql-deallocate.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/02/</guid><description>&lt;p&gt;that you can hold &lt;!-- raw HTML omitted --&gt;shift+alt&lt;!-- raw HTML omitted --&gt; (linux) or &lt;!-- raw HTML omitted --&gt;shift+opt&lt;!-- raw HTML omitted --&gt; (mac) and click to select box of rows and columns in VS Code.
See &lt;a href="https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_column-box-selection"&gt;https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_column-box-selection&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/04/</guid><description>&lt;p&gt;that different versions of &lt;code&gt;sort(1)&lt;/code&gt; have different sorting presets.
For example, on ubuntu 20.04 vs debian buster, &lt;code&gt;sort&lt;/code&gt; will swap the order of how it sorts &lt;code&gt;_&lt;/code&gt;s.
These differences can be resolved by passing &lt;code&gt;--unique --dictionary-order --stable&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Bonus: &lt;code&gt;-h/--human-numeric-sort&lt;/code&gt; can sort SI suffixes.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/07/</guid><description>&lt;p&gt;That GNU awk has a networking stack: &lt;a href="https://www.gnu.org/software/gawk/manual/gawkinet/gawkinet.html"&gt;https://www.gnu.org/software/gawk/manual/gawkinet/gawkinet.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/09/</guid><description>&lt;p&gt;That &lt;code&gt;cgo&lt;/code&gt; will automagically ship a &lt;code&gt;C.sizeof_YourStruct&lt;/code&gt; for every C struct that you can reference as &lt;code&gt;C.YourStruct&lt;/code&gt;.
This is useful for pointer arithmetic via &lt;code&gt;unsafe.Pointer(uintptr(something) + uintptr(intIndex * C.sizeof_YourStruct))&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/12/</guid><description>&lt;p&gt;about the shell &lt;code&gt;until&lt;/code&gt; keyword, which is equivalent to &lt;code&gt;while !&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/13/</guid><description>&lt;p&gt;about &lt;a href="https://linux.die.net/man/1/reset"&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, which resets your terminal after a series of undesired ANSI escape codes.
I also learned about &lt;a href="https://linux.die.net/man/1/echo"&gt;&lt;code&gt;echo -e &amp;quot;\e&amp;quot;&lt;/code&gt;&lt;/a&gt; meaning &amp;ldquo;interpret backslash escape codes&amp;rdquo; (&lt;code&gt;-e&lt;/code&gt;) and &lt;code&gt;&amp;quot;\e&amp;quot; == &amp;quot;\033&amp;quot;&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/19/</guid><description>&lt;p&gt;that you can write multiple lines to a file using a &lt;code&gt;cat &amp;gt; path/to/file&lt;/code&gt; with argument, like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat &amp;gt; /tmp/file
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;subsequent typed input
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;is still stdin, which is being &lt;span class="nb"&gt;read&lt;/span&gt; by &lt;span class="sb"&gt;`&lt;/span&gt;cat&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;and so will be written to the file
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;^C &lt;span class="c1"&gt;# cancels `cat` writing to the file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/22/</guid><description>&lt;p&gt;That there are special CSS classes for theme colors in MSFT PowerPoint: &lt;a href="https://www.brightcarbon.com/blog/responsive-svgs-and-smart-icons-in-powerpoint/"&gt;https://www.brightcarbon.com/blog/responsive-svgs-and-smart-icons-in-powerpoint/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/27/</guid><description>&lt;p&gt;About the svg &lt;code&gt;view&lt;/code&gt; element: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view"&gt;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&lt;/a&gt;
It can be used to create views referable like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-html" data-lang="html"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;view&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;view-1&amp;#34;&lt;/span&gt; &lt;span class="na"&gt;viewBox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;circle&lt;/span&gt; &lt;span class="na"&gt;cx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class="na"&gt;cy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;#view-1&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/28/</guid><description>&lt;p&gt;That you can detect the terminal you&amp;rsquo;re running in (including vscode) by checking the value of &lt;code&gt;&amp;quot;${TERM_PROGRAM:-}&amp;quot;&lt;/code&gt;.
The VS Code integrated termial always has a &lt;code&gt;$TERM_PROGRAM&lt;/code&gt; of &lt;code&gt;vscode&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://stackoverflow.com/a/59231654/6571327"&gt;https://stackoverflow.com/a/59231654/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/10/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/30/</guid><description>&lt;p&gt;about &lt;code&gt;terminfo&lt;/code&gt;, the terminal information database: it can be queried to find all kinds of fun facts about your current terminal.
For instance,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tput cols&lt;/code&gt; =&amp;gt; number of columns in the current terminal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tput colors&lt;/code&gt; =&amp;gt; number of colors the terminal supports&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tput setaf&lt;/code&gt; =&amp;gt; generate ansi codes to set the foregrount color in the terminal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, &lt;code&gt;infocmp screen&lt;/code&gt; dumps a bunch of other related information drawn from &lt;code&gt;terminfo&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/11/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/03/</guid><description>&lt;p&gt;That&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two accepted formats for these strings: plain keyword/value strings and URIs.
URIs generally follow RFC 3986, except that multi-host connection strings are allowed.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING"&gt;https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;you can pass a &lt;code&gt;application_name&lt;/code&gt; parameter to a connection string &amp;ndash; &lt;a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-APPLICATION-NAME"&gt;https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-APPLICATION-NAME&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/11/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/05/</guid><description>&lt;p&gt;That &lt;code&gt;sudo&lt;/code&gt; has a webpage and an unfortunate mascot: &lt;a href="https://www.sudo.ws/"&gt;https://www.sudo.ws/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/11/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/23/</guid><description>&lt;p&gt;&lt;code&gt;locate&lt;/code&gt; searches all filenames for a keyword using a database which you can update &lt;code&gt;updatedb&lt;/code&gt;.
&lt;code&gt;whereis&lt;/code&gt; searches for binaries using the same mechanism.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.madebygps.com/an-intro-to-finding-things-in-linux/"&gt;https://www.madebygps.com/an-intro-to-finding-things-in-linux/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/11/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/29/</guid><description>&lt;p&gt;that there&amp;rsquo;s a &lt;code&gt;pg_sleep(seconds)&lt;/code&gt; function: see &lt;a href="https://til.hashrocket.com/posts/8a6f68519d-sleeping-in-postgresql"&gt;https://til.hashrocket.com/posts/8a6f68519d-sleeping-in-postgresql&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2021/12/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/12/01/</guid><description>&lt;p&gt;that you can write any file in your git history using &lt;code&gt;git show &amp;lt;ref&amp;gt;:&amp;lt;path&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://juplo.de/cat-any-file-in-any-commit-with-git/"&gt;https://juplo.de/cat-any-file-in-any-commit-with-git/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/04/</guid><description>&lt;p&gt;about the css &lt;code&gt;:target&lt;/code&gt; selector (matches the element with the id specified by the url document-fragment)
and the svg &lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt; element, which specifies a &lt;code&gt;viewBox&lt;/code&gt; and can have an id.&lt;/p&gt;
&lt;p&gt;see &lt;a href="https://css-tricks.com/svg-fragment-identifiers-work/"&gt;https://css-tricks.com/svg-fragment-identifiers-work/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/09/</guid><description>&lt;p&gt;1: That you can set statement timeouts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;DATABASE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mydatabase&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;statement_timeout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;60s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Source: &lt;a href="https://blog.crunchydata.com/blog/five-tips-for-a-healthier-postgres-database-in-the-new-year"&gt;https://blog.crunchydata.com/blog/five-tips-for-a-healthier-postgres-database-in-the-new-year&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2: that you can query your cache and index hit metrics (&lt;a href="https://blog.crunchydata.com/blog/cleaning-up-your-postgres-database"&gt;src&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;3: writes to indexed columns don&amp;rsquo;t necessarily update indices:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If an indexed column has to have new values inserted, or existing values updated or deleted, the corresponding index does get updated as well. Ironically, that might make queries take more time to evaluate. If write operations are frequently run against a particular column then you may need to more carefully evaluate creating an index here.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/10/</guid><description>&lt;p&gt;Of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption"&gt;html table &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; element&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/11/</guid><description>&lt;p&gt;that you can pass default values to css variable references, e.g. &lt;code&gt;var(--button-color, pink)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the SVG fragment identifier addresses a time segment (e.g., MyDrawing.svg#t=10),then the initial view into the SVG document is established as if no fragment identifier was provided. The rendering of the SVG Document shall be as if the setCurrentTime method on the SVG Document element had been called with the begin time value from the fragment identifier. Additionally, if an end time value is provided in the fragment identifier, the effect is equivalent to calling the pauseAnimations method on the SVG Document when the document time reaches the end time of the fragment identifier.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/13/</guid><description>&lt;p&gt;In sqlite, all rows have a 64-bit ROWID (with some exceptions). Putting those aside, if you have a single-column integer primary key and use the magic words &lt;code&gt;PRIMARY KEY INTEGER&lt;/code&gt; then the pkey becomes an alias for rowid, greatly speeding up lookups. I&amp;rsquo;m not sure how this affects insertions, though.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key"&gt;https://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/26/</guid><description>&lt;p&gt;That you can extract sensitive output values from terraform, you can &lt;code&gt;terraform output $output_name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;ndash; see &lt;a href="https://learn.hashicorp.com/tutorials/terraform/outputs#redact-sensitive-outputs"&gt;https://learn.hashicorp.com/tutorials/terraform/outputs#redact-sensitive-outputs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, &lt;code&gt;sqlite&lt;/code&gt; provides a &lt;code&gt;PRAGMA user_version=&amp;lt;number&amp;gt;&lt;/code&gt; to let applications store
and retrieve a versioning number.
See &lt;a href="https://sqlite.org/pragma.html#pragma_user_version"&gt;https://sqlite.org/pragma.html#pragma_user_version&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/31/</guid><description>&lt;p&gt;that the &lt;code&gt;fmt&lt;/code&gt; utility exists. It seems to fold or center text according to a target width.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/08/</guid><description>&lt;p&gt;In &lt;code&gt;zsh&lt;/code&gt;, &lt;code&gt;ls *(n)&lt;/code&gt; will &amp;ldquo;human-sort&amp;rdquo; mostly-numeric filenames.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers"&gt;https://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/nedbat/status/1491032300800421892"&gt;https://twitter.com/nedbat/status/1491032300800421892&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/14/</guid><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;that adding a &lt;code&gt;!&lt;/code&gt; suffix tells &lt;code&gt;tsc&lt;/code&gt; that the expression to the left doesn&amp;rsquo;t evaluate to &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mariusschulz.com/blog/assertion-functions-in-typescript#using-the-non-null-assertion-operator"&gt;https://mariusschulz.com/blog/assertion-functions-in-typescript#using-the-non-null-assertion-operator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;that going to &lt;code&gt;about:profile&lt;/code&gt; in firefox lets you create separate firefox profiles.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/18/</guid><description>&lt;p&gt;you can import from a parent-module using &lt;code&gt;from ... import &lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/25/</guid><description>&lt;p&gt;that you can use variables in make targets, e.g.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-make" data-lang="make"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;path/${TO}/file&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;/${&lt;span class="n"&gt;TO&lt;/span&gt;}/&lt;span class="n"&gt;other&lt;/span&gt;/&lt;span class="n"&gt;file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/28/</guid><description>&lt;p&gt;If you want to get a list of &lt;code&gt;aws:principalTags/*&lt;/code&gt; values that can be used in your IAM conditions, search CloudTrail events for &lt;code&gt;Event Name: AssumeRoleWithSaml&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/06/</guid><description>&lt;p&gt;About &lt;code&gt;git-sparse-checkout&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linuxhint.com/what-is-git-sparse-checkout/"&gt;https://linuxhint.com/what-is-git-sparse-checkout/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-sparse-checkout"&gt;https://git-scm.com/docs/git-sparse-checkout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The general script for doing a sparse checkout is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;span class="nv"&gt;git_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;git_url&lt;/span&gt;&lt;span class="p"&gt;:?required&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;target_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_dir&lt;/span&gt;&lt;span class="p"&gt;:?required&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;is_git_dir&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; git rev-parse&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;init&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; mkdir -p &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; ! is_git_dir&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git init &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git remote add -f origin &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$git_url&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git config core.sparseCheckout &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git sparse-checkout init &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git sparse-checkout &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git pull origin master
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see also: &lt;a href="https://about.gitlab.com/blog/2020/03/13/partial-clone-for-massive-repositories/"&gt;https://about.gitlab.com/blog/2020/03/13/partial-clone-for-massive-repositories/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/08/</guid><description>&lt;p&gt;random: turns out HTML comments are valid line-comments in JS: &lt;a href="https://smitop.com/post/js-html-comments/"&gt;https://smitop.com/post/js-html-comments/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/17/</guid><description>&lt;p&gt;About the terraform &lt;code&gt;count&lt;/code&gt; meta-argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can pass a &lt;code&gt;count = n&lt;/code&gt; to any resource-block to create n copies of the resource&lt;/li&gt;
&lt;li&gt;you can differentiate each of the resources using &lt;code&gt;${count.index}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/18/</guid><description>&lt;p&gt;How to check if a debian package is installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;deb_pkg_is_installed&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; sudo dpkg --get-selections &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/19/</guid><description>&lt;p&gt;How to pass a multi-character field separator to &lt;code&gt;awk&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk -F &lt;span class="s1"&gt;&amp;#39;[ :]+&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $1, $3}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# character set: [ :]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# repetition: +&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/22/</guid><description>&lt;p&gt;You can replace the &lt;code&gt;nth&lt;/code&gt; instance of a pattern on a line with sed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;a\tb\tc\n&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/\t/\t~/2&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a b ~c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/04/</guid><description>&lt;p&gt;to run &lt;code&gt;terraform output $output_name&lt;/code&gt; to print a named output&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/06/</guid><description>&lt;p&gt;That python f-strings can do&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;date and time formatting: &lt;code&gt;f&amp;quot;{today:%Y-%m-%d}&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;have a variable-debugging format: &lt;code&gt;f&amp;quot;{x = }, {y = }&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can use &lt;code&gt;__repr__&lt;/code&gt; rather than &lt;code&gt;__str__&lt;/code&gt;: &lt;code&gt;f&amp;quot;{user!r}&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can be nested: &lt;code&gt;f&amp;quot;output: {value:{width}.{precision}}&amp;quot;&lt;/code&gt;
&lt;a href="https://martinheinz.dev/blog/70"&gt;https://martinheinz.dev/blog/70&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of the &lt;code&gt;window.prompt()&lt;/code&gt; method:
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt"&gt;https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/08/</guid><description>&lt;p&gt;What hardlinks are: direct references to inodes. A hardlink can&amp;rsquo;t reference filesystem objects that don&amp;rsquo;t have inodes, such as directories or ports, and aren&amp;rsquo;t portable across different hardware devices even with the same filesystem layout (I think).&lt;/p&gt;
&lt;p&gt;Also, the opposite of &lt;code&gt;mount(8)&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;unmount&lt;/code&gt;, it&amp;rsquo;s &lt;code&gt;umount&lt;/code&gt; &amp;gt;:(&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gzip -vt $path_to_file&lt;/code&gt; checks the validity of a gzip archive: see
&lt;a href="https://unix.stackexchange.com/questions/359303/check-validity-of-gz-file"&gt;https://unix.stackexchange.com/questions/359303/check-validity-of-gz-file&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/11/</guid><description>&lt;p&gt;You can use &lt;code&gt;journalctl -u ${service_name}.service --since ${time:-today}&lt;/code&gt; to view the logs of a systemd service: &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs"&gt;https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/13/</guid><description>&lt;p&gt;That a rust if-statement can have a return type&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rust" data-lang="rust"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;: &lt;span class="kt"&gt;u32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stmt_result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;even steven&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;odd steven&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="fm"&gt;assert_eq!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;odd steven&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/20/</guid><description>&lt;p&gt;&lt;code&gt;tar -ztvf file.tar.gz&lt;/code&gt; will list the files in tar.gz&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/22/</guid><description>&lt;p&gt;that there&amp;rsquo;s a scheduled send option in slack. It&amp;rsquo;s the first option in the dropdown next to the send button.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/29/</guid><description>&lt;p&gt;how to check the last &lt;code&gt;apt update&lt;/code&gt; time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;last_update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;stat --format&lt;span class="o"&gt;=&lt;/span&gt;%Y /var/cache/apt/pkgcache.bin&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://askubuntu.com/a/410259/505362"&gt;https://askubuntu.com/a/410259/505362&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/30/</guid><description>&lt;p&gt;That there&amp;rsquo;s an IETF spec for CSVs/TSVs, and it uses doubled double-quotes as quote-escapes, as SQL does
&lt;a href="https://datatracker.ietf.org/doc/html/rfc4180#section-2"&gt;https://datatracker.ietf.org/doc/html/rfc4180#section-2&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/03/</guid><description>&lt;p&gt;aws policy documents can change the order of items within permissions arrays, but that&amp;rsquo;s safe to ignore:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hashicorp/terraform-provider-aws/issues/11801"&gt;Order is lost for data &lt;code&gt;aws_iam_policy_document&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jen20/awspolicyequivalence/issues/10"&gt;Policy elements that are syntactically lists but semantically sets should have their order ignored&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hashicorp/terraform-provider-aws/issues/23288"&gt;Perpetual diffs / Objects have changed outside of Terraform &lt;/a&gt; tracking ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, that &lt;code&gt;&amp;amp;&lt;/code&gt; types take 8 bytes = 64 bits on 64-bit systems&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rust" data-lang="rust"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 24
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;: &lt;span class="kt"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Quux&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;: &lt;span class="kt"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Foo: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 32
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&amp;amp;Foo: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 8 -- a pointer?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Quux: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Quux&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 16 -- a pointer + a usize!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&amp;amp;Quux: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Quux&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 8 -- another pointer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/04/</guid><description>&lt;p&gt;Not to use &lt;code&gt;BETWEEN&lt;/code&gt; for timestamps
Not to use &lt;code&gt;char(n)&lt;/code&gt;, or &lt;code&gt;varchar(n)&lt;/code&gt;, since they&amp;rsquo;re not natively fixed-width and will defy expectations.
See &lt;a href="https://wiki.postgresql.org/wiki/Don't_Do_This"&gt;https://wiki.postgresql.org/wiki/Don't_Do_This&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, I learned that you can&amp;rsquo;t run &lt;code&gt;chsh(1)&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt;; &lt;code&gt;chsh&lt;/code&gt; needs to run as the user who&amp;rsquo;s changing their shell.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/05/</guid><description>&lt;p&gt;To prefer async context managers or &lt;code&gt;asyncio.run()&lt;/code&gt; instead of creating+managing event loops natively.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/09/</guid><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;that &lt;code&gt;sudo&lt;/code&gt; can be configured with the &lt;code&gt;visudo&lt;/code&gt; command &lt;em&gt;and&lt;/em&gt; that sudo can produce audit logs.
See &lt;a href="https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/"&gt;https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;that there&amp;rsquo;s an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/closest"&gt;&lt;code&gt;Element.closest(selector)&lt;/code&gt;&lt;/a&gt; method, which means you can run this function to set the url to the closest link to an element:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;[id]&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;$0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;that you can use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*...*/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one_table&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;other_table&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;USING&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;common_column&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as shorthand for &lt;code&gt;one_table.common_column = other_table.common_column&lt;/code&gt;.
See &lt;a href="https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM"&gt;https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/10/</guid><description>&lt;p&gt;That you can call &lt;code&gt;time(1)&lt;/code&gt; to time how long a shell command takes, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; terraform fmt -write&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; -recursive .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# terraform fmt -write=true -recursive . 0.10s user 0.23s system 24% cpu 1.377 total&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/16/</guid><description>&lt;p&gt;that &lt;code&gt;gzip(1)&lt;/code&gt;, by default, includes file &lt;code&gt;mtime&lt;/code&gt;s. The flag to prevent gzip from zipping non-deterministically is &lt;code&gt;gzip --no-name&lt;/code&gt; or &lt;code&gt;gzip -n&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/18/</guid><description>&lt;p&gt;The term &amp;ldquo;brochureware&amp;rdquo;: &amp;ldquo;simply listing products and services on a [static] Web site&amp;rdquo;.
&lt;a href="https://en.wikipedia.org/wiki/Brochureware"&gt;https://en.wikipedia.org/wiki/Brochureware&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/23/</guid><description>&lt;p&gt;aarch64 is a 64-bit version of armv7 (which seems to be 32-bit). Thus, aarch64 = arm64 ~= armv8&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AArch64 is the 64-bit state introduced in the Armv8-A architecture (&lt;a href="https://en.wikipedia.org/wiki/ARM_architecture#ARMv8-A)"&gt;https://en.wikipedia.org/wiki/ARM_architecture#ARMv8-A)&lt;/a&gt;. The 32-bit state which is backwards compatible with Armv7-A and previous 32-bit Arm architectures is referred to as AArch32. Therefore the GNU triplet for the 64-bit ISA is aarch64. The Linux kernel community chose to call their port of the kernel to this architecture arm64 rather than aarch64, so that&amp;rsquo;s where some of the arm64 usage comes from.
&amp;ndash; &lt;a href="https://stackoverflow.com/a/47274698/6571327"&gt;https://stackoverflow.com/a/47274698/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/30/</guid><description>&lt;p&gt;How to write hugo templates.
Hugo seems to require &lt;!-- raw HTML omitted --&gt;RTFM&lt;!-- raw HTML omitted --&gt; to get a grasp on the functions and variables available in its DSL.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/31/</guid><description>&lt;p&gt;That &lt;code&gt;sql&lt;/code&gt; has assertions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ASSERTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;Constraint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;CHECK&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;search&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;constraint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see &lt;a href="https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement"&gt;https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;h/t &lt;a href="https://www.scattered-thoughts.net/log/0024/"&gt;https://www.scattered-thoughts.net/log/0024/&lt;/a&gt; for bringing that to my attention.&lt;/p&gt;
&lt;p&gt;Also, from the weekend: in postgres, at least, you can call &lt;code&gt;TABLE :table_name;&lt;/code&gt; directly to &lt;code&gt;SELECT * FROM :table_name;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also: how to look up a domain name from an ip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;reverse_ip_lookup&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;ip_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; dig -x &lt;span class="nv"&gt;$ip_address&lt;/span&gt; +noall +answer
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also: how to audit AWS VPC flow logs from CloudWatch Log Insights: use the example queries in the right sidebar.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/01/</guid><description>&lt;p&gt;That &lt;code&gt;pg_dumpall&lt;/code&gt; exists.
That you need to use &lt;code&gt;pg_dumpall&lt;/code&gt; to dump tablespaces, roles, and subscriptions.
That &lt;code&gt;pg_dumpall&lt;/code&gt; will dump the &lt;code&gt;postgres&lt;/code&gt; role by default, causing resultant dump to fail to restore.
Fortunately, I&amp;rsquo;m able to &lt;code&gt;grep -ve '^CREATE ROLE postgres&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/02/</guid><description>&lt;p&gt;How to create a JS &lt;code&gt;BigInt&lt;/code&gt; value:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A BigInt value, also sometimes just called a BigInt, is a bigint primitive, created by appending n to the end of an integer literal, or by calling the BigInt() constructor (but without the new operator) and giving it an integer value or string value.
&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/06/</guid><description>&lt;p&gt;that chickens are native to tropical jungles in south-east Asia.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://www.theguardian.com/science/2022/jun/06/chickens-were-first-tempted-down-from-trees-by-rice-research-suggests"&gt;https://www.theguardian.com/science/2022/jun/06/chickens-were-first-tempted-down-from-trees-by-rice-research-suggests&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/07/</guid><description>&lt;p&gt;That 1Password has a separate SSH key type! &lt;a href="https://developer.1password.com/docs/ssh/manage-keys/"&gt;https://developer.1password.com/docs/ssh/manage-keys/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, that &lt;code&gt;make&lt;/code&gt; has a &lt;code&gt;MAKEFLAGS&lt;/code&gt; variable that can be used in recursive calls to &lt;code&gt;make&lt;/code&gt;: see
&lt;a href="https://earthly.dev/blog/make-flags/"&gt;https://earthly.dev/blog/make-flags/&lt;/a&gt;. This also means you can set &lt;code&gt;-r&lt;/code&gt;, which eliminates default rules and file actions.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/08/</guid><description>&lt;p&gt;that you can write &lt;code&gt;raise SomeException() from prev_exception&lt;/code&gt;: see
&lt;a href="https://docs.python.org/3/reference/simple_stmts.html#raise"&gt;https://docs.python.org/3/reference/simple_stmts.html#raise&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/14/</guid><description>&lt;p&gt;That &lt;code&gt;Array.sort&lt;/code&gt; separates floats and ints:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;7.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// [ 8, 7.4, 14, 13, 12, 11 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// [ 11, 12, 13, 14, 7.4, 8 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// [ 8, 7.4, 14, 13, 12, 11 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/24/</guid><description>&lt;p&gt;That on GitHub, you can add footers like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-md" data-lang="md"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;statement[^1]
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;[^1]: footnote
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/"&gt;https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/&lt;/a&gt; or &lt;a href="https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes"&gt;https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/01/</guid><description>&lt;p&gt;That in Chrome/chromium you can view the actually-rendered font by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;inspecting an element&lt;/li&gt;
&lt;li&gt;view computed properties&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;source: &lt;a href="https://stackoverflow.com/a/31254584/6571327"&gt;https://stackoverflow.com/a/31254584/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/02/</guid><description>&lt;p&gt;That you can unescape newlines with &lt;code&gt;printf &amp;quot;%b&amp;quot; 'escaped\nstring'&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;escaped&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a\nb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;%b&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$escaped&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/04/</guid><description>&lt;p&gt;How to subset fonts:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;# in a virtualenv
pip install fonttools brotli zopfli
pyftsubset --help
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fonttools.readthedocs.io/en/latest/subset/index.html#initial-glyph-set-specification"&gt;https://fonttools.readthedocs.io/en/latest/subset/index.html#initial-glyph-set-specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markoskon.com/creating-font-subsets/#available-tools"&gt;https://markoskon.com/creating-font-subsets/#available-tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clagnut.com/blog/2418/"&gt;https://clagnut.com/blog/2418/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wakamaifondue.com/beta/"&gt;https://wakamaifondue.com/beta/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, optical-sized variable fonts look great.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/06/</guid><description>&lt;p&gt;that DNS listens on port 53&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/08/</guid><description>&lt;p&gt;That there&amp;rsquo;s an official 1Password terraform provider: &lt;a href="https://registry.terraform.io/providers/1Password/onepassword/latest/docs"&gt;https://registry.terraform.io/providers/1Password/onepassword/latest/docs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/11/</guid><description>&lt;p&gt;CMD+K clears the screen same as &lt;code&gt;clear&lt;/code&gt; does!&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/27/</guid><description>&lt;p&gt;That there&amp;rsquo;s a &lt;code&gt;npm outdated&lt;/code&gt; command that finds packages which are not at their most recent versions!
Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;npm outdated --global
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Package Current Wanted Latest Location&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# n 7.5.0 7.5.0 9.0.0 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# npm 6.14.15 6.14.17 8.15.0 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# pnpm 6.15.2 6.33.1 7.6.0 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# yarn 1.22.11 1.22.19 1.22.19 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/29/</guid><description>&lt;p&gt;that in bash and zsh, you can put a newline in a variable like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;newline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;newline&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;learned from: &lt;a href="https://stackoverflow.com/a/4456399/6571327"&gt;https://stackoverflow.com/a/4456399/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/30/</guid><description>&lt;p&gt;Of the existence of &lt;a href="https://en.wikipedia.org/wiki/MultiDimensional_eXpressions"&gt;MDX (MultiDimensional eXpressions)&lt;/a&gt;, a query language for OLAP cubes. I came across it while researching &lt;code&gt;clickhouse&lt;/code&gt; db.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/31/</guid><description>&lt;p&gt;About creating json values using sqlite3&amp;rsquo;s built-in json value support.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- {&amp;#34;foo&amp;#34;:{&amp;#34;bar&amp;#34;:&amp;#34;baz&amp;#34;}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- {&amp;#34;foo&amp;#34;:[&amp;#34;bar&amp;#34;,&amp;#34;baz&amp;#34;]}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;-- works with nested queries too
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- {&amp;#34;foo&amp;#34;:[&amp;#34;bar&amp;#34;,&amp;#34;baz&amp;#34;]}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;VALUES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_group_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- [&amp;#34;A&amp;#34;,&amp;#34;D&amp;#34;,&amp;#34;C&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;-- [&amp;#34;C&amp;#34;,&amp;#34;B&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;-- [&amp;#34;B&amp;#34;,&amp;#34;A&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Caveat: you sometimes have to wrap nested values from nested queries in &lt;code&gt;json()&lt;/code&gt;, else they&amp;rsquo;ll be escaped as json string literals. See &lt;a href="https://stackoverflow.com/questions/55421128/how-do-i-get-nested-json-data-out-of-sqlite-with-a-multi-level-group-by"&gt;https://stackoverflow.com/questions/55421128/how-do-i-get-nested-json-data-out-of-sqlite-with-a-multi-level-group-by&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/06/</guid><description>&lt;p&gt;How to consistently establish relative symlinks within a git repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="c1"&gt;# the directory in which you want to create the symlink&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ln -s ../relative/path/to/source.file ./symlink.name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/a/15465514/6571327"&gt;https://stackoverflow.com/a/15465514/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/11/</guid><description>&lt;p&gt;That you can call &lt;code&gt;docker compose kill&lt;/code&gt; to kill all docker-compose containers
That there&amp;rsquo;s a &lt;code&gt;timeout&lt;/code&gt; shell command in gnu coreutils: &lt;a href="https://man7.org/linux/man-pages/man1/timeout.1.html"&gt;https://man7.org/linux/man-pages/man1/timeout.1.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/15/</guid><description>&lt;p&gt;That if you run &lt;code&gt;kubectl logs -n my_namespace $pod_name&lt;/code&gt;, you need to pass a container name afterwards.
I always forget that pod != container.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/22/</guid><description>&lt;p&gt;About &lt;code&gt;IfExists&lt;/code&gt; AWS IAM conditions: if a condition key might not exist (the resource doesn&amp;rsquo;t have it built-in, or a tag isn&amp;rsquo;t set), you can append &lt;code&gt;IfExists&lt;/code&gt; to the condition test.
For example &lt;code&gt;StringEquals -&amp;gt; StringEqualsIfExists&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_IfExists"&gt;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_IfExists&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/24/</guid><description>&lt;p&gt;that you can &lt;code&gt;lsblk&lt;/code&gt; to list the block devices that the OS knows about without sudo.&lt;/p&gt;
&lt;p&gt;that you can &lt;code&gt;sudo growpart&lt;/code&gt; to increase a partition size without restarting the machine.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/25/</guid><description>&lt;p&gt;That the 14kb limit for fast pages comes from TCP sending 10 initial 1500b packets to guess the amount of bandwidth the client can handle.
h/t &lt;a href="https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/"&gt;https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve heard of the 14-15kb limit before, but this was the clearest explanation I&amp;rsquo;d heard so far of why the limit exists.
Also, the author alleges that the limit applies to http/2 and http/3+QUIC.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/29/</guid><description>&lt;p&gt;That you can list the listening ports on a UNIX machine using &lt;code&gt;sudo lsof -i -P -n | grep LISTEN&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/30/</guid><description>&lt;p&gt;That the max duration for any AWS assumed role session is 12h.&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;--duration-seconds (integer)
The duration, in seconds, of the role session. The value specified can range from 900 seconds (15 minutes) up to the maximum session duration set for the role. **The maximum session duration setting can have a value from 1 hour to 12 hours.** If you specify a value higher than this setting or the administrator setting (whichever is lower), the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails.
Role chaining limits your Amazon Web Services CLI or Amazon Web Services API role session to a maximum of one hour. When you use the AssumeRole API operation to assume a role, you can specify the duration of your role session with the DurationSeconds parameter. You can specify a parameter value of up to 43200 seconds (12 hours), depending on the maximum session duration setting for your role. However, if you assume a role using role chaining and provide a DurationSeconds parameter value greater than one hour, the operation fails. To learn how to view the maximum value for your role, see View the Maximum Session Duration Setting for a Role in the IAM User Guide .
By default, the value is set to 3600 seconds.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;see &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html#options"&gt;https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html#options&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/31/</guid><description>&lt;p&gt;That linux has a capability system:
&lt;a href="https://man7.org/linux/man-pages/man7/capabilities.7.html"&gt;https://man7.org/linux/man-pages/man7/capabilities.7.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I heard about this in &lt;a href="https://lobste.rs/s/ejwibq/dear_linux_privileged_ports_must_die"&gt;a discussion of privileged ports on linux&lt;/a&gt;, specifically about &lt;code&gt;PRIV_NET_PRIVADDR&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/02/</guid><description>&lt;p&gt;that &amp;ldquo;cf.&amp;rdquo; stands for &lt;a href="https://en.wikipedia.org/wiki/Cf."&gt;&amp;ldquo;conferatur&amp;rdquo;, or &amp;ldquo;to compare&amp;rdquo;&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/19/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Incentive stock options (ISOs)&lt;/strong&gt;: typically taxed only on sale of shares.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Non-qualifying stock options (NSOs)&lt;/strong&gt;: typically taxed both on exercise and on sale of shares.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Restricted stock units (RSUs)&lt;/strong&gt;: type of equity grant where you own shares automatically if certain conditions are met (like vesting). More likely to be issued by larger/older companies. Taxed on vesting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stock options&lt;/strong&gt;: A type of equity compensation that gives you the &lt;strong&gt;option&lt;/strong&gt; to buy (&amp;ldquo;exercise&amp;rdquo;) shares at the &amp;ldquo;strike price&amp;rdquo; listed on your equity grant. Startups tend to issue stock options.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/20/</guid><description>&lt;p&gt;A hack to detect if an element is visible/not:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isVisible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetWidth&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see &lt;a href="https://stackoverflow.com/questions/1343237/how-to-check-elements-visibility-via-javascript"&gt;https://stackoverflow.com/questions/1343237/how-to-check-elements-visibility-via-javascript&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/30/</guid><description>&lt;p&gt;that OCSP stands for Online Certificate Status Protocol. See &lt;a href="https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol"&gt;https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/03/</guid><description>&lt;p&gt;That you can write &lt;code&gt;&amp;gt;&amp;amp; 1&lt;/code&gt; and it still redirects to stdout!
example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;f&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ok&amp;#34;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;f 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ok
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/07/</guid><description>&lt;p&gt;STUN:
Session Traversal Utilities for NAT.
A standardized set of methods, including a network protocol, for traversal of network address translator (NAT) gateways.
see &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;https://en.wikipedia.org/wiki/STUN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DERP: Designated Encrypted Relay for Packets.
See &lt;a href="https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp"&gt;https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/10/</guid><description>&lt;p&gt;How to avoid opening live-share sessions in the web vscode version that I hate: &lt;a href="https://learn.microsoft.com/en-us/visualstudio/liveshare/quickstart/browser-join#joining-from-the-desktop"&gt;https://learn.microsoft.com/en-us/visualstudio/liveshare/quickstart/browser-join#joining-from-the-desktop&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/11/</guid><description>&lt;p&gt;That &lt;code&gt;terraform plan -detailed-exitcode&lt;/code&gt; exists: 0 means no diff, 1 means error, 2 means a diff exists.&lt;/p&gt;
&lt;p&gt;Also, that you can print the source code of a bash function like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;print_fn_src&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;declare&lt;/span&gt; -f &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/13/</guid><description>&lt;p&gt;That &amp;ldquo;CWE&amp;rdquo; is a MITRE abbreviation for &amp;ldquo;common weakness enumeration&amp;rdquo;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/18/</guid><description>&lt;p&gt;That BSD &lt;code&gt;arch&lt;/code&gt; command found on Macs also supports a &lt;code&gt;-${arch}&lt;/code&gt; flag for running universal binaries.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/19/</guid><description>&lt;p&gt;that you can easily send asyncio tasks to threads:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-py" data-lang="py"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;asyncio.threads&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;to_thread&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to_thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;baz&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/23/</guid><description>&lt;p&gt;That ARIA stands for Accessible Rich Internet Applications!
See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That in linux &lt;code&gt;ls(1)&lt;/code&gt; uses the environment variable &lt;code&gt;LS_COLORS&lt;/code&gt; to determine the colors in which the filenames are to be displayed.
Also, that linux specifies a &lt;code&gt;dir_colors(5)&lt;/code&gt; configuration file format for &lt;code&gt;dircolors(1)&lt;/code&gt;, which exports &lt;code&gt;LS_COLORS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://man7.org/linux/man-pages/man5/dir_colors.5.html"&gt;https://man7.org/linux/man-pages/man5/dir_colors.5.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That nix is complicated, which is exactly what my prior research told me.&lt;/p&gt;
&lt;p&gt;On one hand, it is &lt;strong&gt;AWESOME&lt;/strong&gt; to cd into a project and watch &lt;a href=""&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt; automatically spawn a development shell with all the fixings.
On the other, the nix ecosystem is bewildering.
I read through a few articles:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/24/</guid><description>&lt;p&gt;That you can list all addresses in terraform state by running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform state list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Docs at &lt;a href="https://developer.hashicorp.com/terraform/cli/commands/state/list"&gt;https://developer.hashicorp.com/terraform/cli/commands/state/list&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, that &lt;code&gt;compgen -v&lt;/code&gt; is a function, at least on Mac zsh.
Apparently in zsh &lt;code&gt;compgen -v&lt;/code&gt; calls something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; var_name in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="p"&gt;(k)parameters[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$var_name&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which is the first time I&amp;rsquo;ve seen that kind of shell syntax.
It generates a &lt;code&gt;bad substitution&lt;/code&gt; message in bash 3.2, so I can only assume it&amp;rsquo;s zsh-specific.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/01/</guid><description>&lt;p&gt;That you can have too many SSH keys :)&lt;/p&gt;
&lt;p&gt;When I got&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Received disconnect from 256.256.256.256 port 22:2: too many authentication failures
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I found the following: &lt;a href="https://www.tecmint.com/fix-ssh-too-many-authentication-failures-error/"&gt;https://www.tecmint.com/fix-ssh-too-many-authentication-failures-error/&lt;/a&gt;
which advocated adding&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Host *
IdentitiesOnly yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to reduce the number of tried keys&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/07/</guid><description>&lt;p&gt;that AWS ALB target groups support HTTPS healthcheck targets: &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html"&gt;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That FQDN stands for Fully Qualified Domain Name. For example &lt;code&gt;sub.domain.tld.&lt;/code&gt; is a FQDN.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/08/</guid><description>&lt;p&gt;That the &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_tag"&gt;&lt;code&gt;aws_ec2_tag&lt;/code&gt;&lt;/a&gt;
resource can be used to add tags to AWS RAM-shared VPCs and subnets:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This resource should only be used in cases where EC2 resources are created outside Terraform (e.g., AMIs), being shared via Resource Access Manager (RAM), or implicitly created by other means (e.g., Transit Gateway VPN Attachments).&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Also, that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the source of a module is a version control repository or archive file (generically, a &amp;ldquo;package&amp;rdquo;), the module itself may be in a sub-directory relative to the root of the package.
A special double-slash syntax is interpreted by Terraform to indicate that the remaining path after that point is a sub-directory within the package. For example:
&lt;code&gt;git::https://example.com/network.git//modules/vpc?ref=v1.2.0&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/10/</guid><description>&lt;p&gt;That Bitbucket pipelines has pipeline-specific SSH keys available at the path &lt;code&gt;$BITBUCKET_SSH_KEY_FILE&lt;/code&gt;.
See &lt;a href="https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/"&gt;https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, &lt;code&gt;git rev-parse --show-git-dir&lt;/code&gt; yields a relative path to the &lt;code&gt;.git&lt;/code&gt; dir for that repo.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/11/</guid><description>&lt;p&gt;that SAN = Subject Alternate Name. A SAN certificate is a TLS certificate that certifies multiple domain names.&lt;/p&gt;
&lt;p&gt;see &lt;a href="https://support.dnsimple.com/articles/what-is-ssl-san/"&gt;https://support.dnsimple.com/articles/what-is-ssl-san/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;that AWS Certificate Manager and other free-TLS-certificate services can&amp;rsquo;t validate private domain names since &lt;a href="https://www.ssl.com/guide/ssl-tls-certificate-issuance-and-revocation-with-acme/"&gt;ACME (Automated Certificate Management Environment)&lt;/a&gt; relies on public DNS or WHOIS records.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://docs.aws.amazon.com/acm/latest/userguide/domain-ownership-validation.html"&gt;https://docs.aws.amazon.com/acm/latest/userguide/domain-ownership-validation.html&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/14/</guid><description>&lt;p&gt;That &lt;code&gt;pg_catalog.pg_shdepend&lt;/code&gt; exists, and &amp;ldquo;records the dependency relationships between database objects and shared objects, such as roles.&amp;rdquo;
See &lt;a href="https://www.postgresql.org/docs/current/catalog-pg-shdepend.html"&gt;https://www.postgresql.org/docs/current/catalog-pg-shdepend.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/30/</guid><description>&lt;p&gt;that you can option+click to change your cursor&amp;rsquo;s location in iterm2 and mac&amp;rsquo;s terminal.app!
H/t Vlad Grenkov for this one :)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As of Terraform 1.3, you can write&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;real_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules"&gt;https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/05/</guid><description>&lt;p&gt;That NFC in the context of security keys stands for Near Field Communication: a (usually bluetooth) connection that lets your security key authenticate with a nearby device.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That &lt;code&gt;git-worktree(1)&lt;/code&gt; is pretty handy! During the process of a refactor, I was able to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git worktree add --checkout &lt;span class="nv"&gt;$local_path&lt;/span&gt; &lt;span class="nv"&gt;$old_branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Explore some deleted/significantly altered files, then inspect the diff between the current and old state of the files!&lt;/p&gt;
&lt;p&gt;See also:
&lt;a href="https://jmtd.net/log/worktrees/"&gt;https://jmtd.net/log/worktrees/&lt;/a&gt;
&lt;a href="https://git-scm.com/docs/git-worktree"&gt;https://git-scm.com/docs/git-worktree&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/10/</guid><description>&lt;p&gt;That you can include doc-comments in macros:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;macro_rules&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;documented&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;$(#[$outer:meta]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;$name&lt;/span&gt;:&lt;span class="nc"&gt;ident&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;$(#[$outer]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="cp"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="fm"&gt;documented!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sd"&gt;/// documented
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="sd"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my_function&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="n"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// hovering &amp;#34;function&amp;#34; now shows that the doc-comment is &amp;#34;documented&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;h/t &lt;a href="https://stackoverflow.com/a/33999625/6571327"&gt;https://stackoverflow.com/a/33999625/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/14/</guid><description>&lt;p&gt;that it&amp;rsquo;s possible to create indices on materialized views in postgres: &lt;a href="https://www.postgresql.org/docs/current/rules-materializedviews.html#RULES-MATERIALIZEDVIEWS"&gt;https://www.postgresql.org/docs/current/rules-materializedviews.html#RULES-MATERIALIZEDVIEWS&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/18/</guid><description>&lt;p&gt;That you can group fields in an html form with a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; tag, and that it accepts a top-level child &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; tag. Together,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-html" data-lang="html"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Legend&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;produces&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt; ┌────legend─────┐
│ │
│ │
│ ... │
│ │
│ │
└───────────────┘
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;which is simultaneously cool and hard to style.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/26/</guid><description>&lt;p&gt;That you need to set a &lt;code&gt;value=&amp;quot;number&amp;quot;&lt;/code&gt; attribute AND a &lt;code&gt;max=&amp;quot;number&amp;quot;&lt;/code&gt; attribute on a html &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; element in order to display fractional progress.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/01/</guid><description>&lt;p&gt;The difference between triggers and event triggers in postgres:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike regular triggers, which are attached to a single table and capture only DML events, event triggers are global to a particular database and are capable of capturing DDL events.
Like regular triggers, event triggers can be written in any procedural language that includes event trigger support, or in C, but not in plain SQL.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://www.postgresql.org/docs/current/event-triggers.html"&gt;https://www.postgresql.org/docs/current/event-triggers.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/09/</guid><description>&lt;p&gt;That a directory service doesn&amp;rsquo;t necessarily provide authentication:
&lt;a href="https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/what-is-a-directory-service"&gt;https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/what-is-a-directory-service&lt;/a&gt;
describes a directory service as a document database optimized for searches of a hierarchical (directory) tree.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Directory] entries are arranged hierarchically in a tree that is structured geographically and organizationally. Global entries, such as countries/regions, reside at the top of the tree, followed by state or national organizations, then organizational units, people, devices, or anything else that might be represented in a directory.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/17/</guid><description>&lt;p&gt;that you can set &lt;code&gt;PYTHONDONTWRITEBYTECODE=1&lt;/code&gt; to prevent python from writing pycs (see &lt;a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE"&gt;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Also: that AWS SSO does SCIM actions using the &lt;code&gt;sso-directory:*&lt;/code&gt; IAM prefix rather than the &lt;code&gt;sso:*&lt;/code&gt; prefix.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/28/</guid><description>&lt;p&gt;That you need ato &lt;code&gt;git add&lt;/code&gt; a &lt;code&gt;flake.nix&lt;/code&gt; for the flake&amp;rsquo;s contents to start to work with &lt;code&gt;nix develop&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is needed because Nix flakes respects gitignores. If you don&amp;rsquo;t add things to the git staging area, git doesn&amp;rsquo;t know about the files at all, and Nix flakes can&amp;rsquo;t know if it should ignore them.
&amp;ndash; &lt;a href="https://xeiaso.net/blog/nix-flakes-go-programs"&gt;https://xeiaso.net/blog/nix-flakes-go-programs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;that &amp;ldquo;truecolor&amp;rdquo; support in shells is detected with the &lt;code&gt;$COLORTERM&lt;/code&gt; env var&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/29/</guid><description>&lt;p&gt;how to setup passwordless SSH login:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-copy-id &lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;@&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;other_host&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://linuxize.com/post/how-to-setup-passwordless-ssh-login/"&gt;https://linuxize.com/post/how-to-setup-passwordless-ssh-login/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;how to change a ubuntu machine&amp;rsquo;s computer&amp;rsquo;s hostname:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;new-hostname&amp;#34;&lt;/span&gt; &amp;gt; sudo tee /etc/hostname&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo sed -i &lt;span class="s1"&gt;&amp;#39;s/old-hostname/new-hostname/1&amp;#39;&lt;/span&gt; /etc/hosts&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo hosname &lt;span class="s1"&gt;&amp;#39;new-hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;- for changes to take effect prior to reboot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;h/t &lt;a href="https://www.howtogeek.com/197934/how-to-change-your-hostname-computer-name-on-ubuntu-linux/"&gt;https://www.howtogeek.com/197934/how-to-change-your-hostname-computer-name-on-ubuntu-linux/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/30/</guid><description>&lt;p&gt;That &lt;code&gt;psql&lt;/code&gt; et al. support colors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PG_COLOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;auto &lt;span class="c1"&gt;# only colorize output to ttys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;learned from &lt;a href="https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html"&gt;https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html&lt;/a&gt;
See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/docs/current/color-when.html"&gt;https://www.postgresql.org/docs/current/color-when.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/docs/current/color-which.html"&gt;https://www.postgresql.org/docs/current/color-which.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/02/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/01/</guid><description>&lt;p&gt;&lt;code&gt;git restore&lt;/code&gt; exists, and works like a more destructive &lt;code&gt;git stash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://git-scm.com/docs/git-restore"&gt;https://git-scm.com/docs/git-restore&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/08/</guid><description>&lt;p&gt;That in Rust, &lt;code&gt;assert!&lt;/code&gt; runs in both debug and release builds. For debug-only assertions, use &lt;code&gt;debug_assert!&lt;/code&gt;. See &lt;a href="https://doc.rust-lang.org/stable/std/macro.debug_assert.html"&gt;https://doc.rust-lang.org/stable/std/macro.debug_assert.html&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That in Python, you can call &lt;code&gt;isinstance(thing, (tuple, OfMany, DifferentClasses))&lt;/code&gt; to check if a variable is an instance of many possible classes.
See &lt;a href="https://docs.python.org/3/library/functions.html?highlight=isinstance#isinstance"&gt;https://docs.python.org/3/library/functions.html?highlight=isinstance#isinstance&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/02/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/21/</guid><description>&lt;p&gt;That properties of a &lt;code&gt;NamedTuple&lt;/code&gt; can have docstrings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-py" data-lang="py"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FooBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NamedTuple&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34;Foo&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34;Bar&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As seen in &lt;a href="https://github.com/sqlalchemy/sqlalchemy/blob/main/lib/sqlalchemy/sql/compiler.py#L348"&gt;https://github.com/sqlalchemy/sqlalchemy/blob/main/lib/sqlalchemy/sql/compiler.py#L348&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/02/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/22/</guid><description>&lt;p&gt;How to make a self-signed TLS certificate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# stolen from https://stackoverflow.com/questions/10175812/how-to-generate-a-self-signed-ssl-certificate-using-openssl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;openssl &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; req -x509 &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -newkey rsa:4096 &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -keyout key.pem &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -out cert.pem &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -sha256 -days &lt;span class="m"&gt;365&lt;/span&gt; -nodes -subj &lt;span class="s1"&gt;&amp;#39;/CN=localhost&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/03/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/02/</guid><description>&lt;p&gt;that there&amp;rsquo;s a &lt;code&gt;git commit --trailer &amp;lt;token&amp;gt;:&amp;lt;value&amp;gt;&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---trailerlttokengtltvaluegt"&gt;https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---trailerlttokengtltvaluegt&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/03/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/04/</guid><description>&lt;blockquote&gt;
&lt;p&gt;The string &amp;ldquo;0.1.12&amp;rdquo; is a version requirement. Although it looks like a
specific version of the time crate, it actually specifies a range of versions
and allows SemVer compatible updates.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html"&gt;https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Instead, in order to lock to a specific version of a crate, you need to write
&lt;code&gt;= 0.1.2&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/03/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/09/</guid><description>&lt;p&gt;This was a bit of a rollercoaster morning:
(1) I tried &lt;code&gt;git worktree add $branch&lt;/code&gt;, and it was pretty convenient!
(2) until I got a pre-commit error, then I got &lt;code&gt;error: unable to read $HASH&lt;/code&gt; on &lt;code&gt;git status&lt;/code&gt;
(3) which led me to discover &lt;code&gt;git fsck --full --name-objects&lt;/code&gt;, which is currently yelling about &lt;code&gt;error: $HASH: invalid sha1 pointer in cache-tree&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/03/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/19/</guid><description>&lt;p&gt;That you can use a &lt;code&gt;.gitattributes&lt;/code&gt; file to prevent files from appearing in GitHub diffs like so:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;generated/**/* linguist-generated=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See &lt;a href="https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github"&gt;https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/09/</guid><description>&lt;p&gt;About the precedent for deriving &lt;code&gt;serde&lt;/code&gt; from serialize/deserialize:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;em&gt;codec&lt;/em&gt; is a device or computer program that encodes or decodes a data stream or signal.
Codec is a portmanteau of coder/decoder.
In electronic communications, an &lt;em&gt;endec&lt;/em&gt; is a device that acts as both an encoder and a decoder on a signal or data stream, and hence is a type of codec.
Endec is a portmanteau of encoder/decoder.
&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/Codec"&gt;https://en.wikipedia.org/wiki/Codec&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/15/</guid><description>&lt;p&gt;That &lt;a href="https://www.nytimes.com/wirecutter/reviews/best-powerline-networking-kit/"&gt;powerline networking kits exist&lt;/a&gt;: they send signals over home electrical wiring to extend your home network.
Similarly, MoCA (Multimedia over Coaxial Alliance) sends signals over coax cable.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/16/</guid><description>&lt;p&gt;That there are instances where a git commit-message can start with a &lt;code&gt;#&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -eu
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;experiment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mkdtemp -d&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$experiment&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git init#
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;touch readme &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add readme
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -m &lt;span class="s2"&gt;&amp;#34;# not a comment, apparently&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;actual&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat ./.git/COMMIT_EDITMSG&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;# not a comment, apparently&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$actual&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$expected&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;lt;hash&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# # not a comment, apparently&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/24/</guid><description>&lt;p&gt;That you can destructure struct values:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Point&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;: &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;: &lt;span class="nc"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;: &lt;span class="nc"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;assert_eq!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;assert_eq!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see &lt;a href="https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-structs"&gt;https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-structs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/27/</guid><description>&lt;p&gt;That you can list the files in a zipfile using &lt;code&gt;unzip -l path/to/file.zip&lt;/code&gt;.
Also, that VSIX (Visual Studio and VSCode extension packaging files) are zipfiles with an XML manifest.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/28/</guid><description>&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-ts" data-lang="ts"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;NonEmptyArray&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First seen at &lt;a href="https://github.com/rust-lang/rust-analyzer/blob/master/editors/code/src/util.ts#L24"&gt;https://github.com/rust-lang/rust-analyzer/blob/master/editors/code/src/util.ts#L24&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/29/</guid><description>&lt;p&gt;During some research on build systems, I began re-reading Build Systems a la Carte (&lt;a href="https://github.com/snowleopard/build"&gt;repo&lt;/a&gt;, &lt;a href="https://www.cambridge.org/core/services/aop-cambridge-core/content/view/097CE52C750E69BD16B78C318754C7A4/S0956796820000088a.pdf/build-systems-a-la-carte-theory-and-practice.pdf"&gt;paper&lt;/a&gt;).
I found the Haskell even more confusing than I remembered, so I set out to translate the Haskell types to Typescript, Rust, and other type systems I know.
When I got into the translation, I realized I only know enough to get the &lt;em&gt;vibe&lt;/em&gt; of what Haskell code&amp;rsquo;s saying :/.&lt;/p&gt;
&lt;p&gt;The following are my notes on the 2021 open-source update to &lt;em&gt;&lt;a href="https://learnyouahaskell.github.io/types-and-typeclasses.html"&gt;Learn You A Haskell for Great Good&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/30/</guid><description>&lt;p&gt;That there&amp;rsquo;s a Linux command to do sql-like &lt;code&gt;JOIN&lt;/code&gt;s of lines in files, possibly based on a field in each line: &lt;a href="https://linux.die.net/man/1/join"&gt;&lt;code&gt;join(1)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/05/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/31/</guid><description>&lt;blockquote&gt;
&lt;p&gt;WebDAV (Web Distributed Authoring and Versioning) is a set of extensions to the Hypertext Transfer Protocol (HTTP)[. WebDAV provides] concurrency control and namespace operations &amp;hellip;
WebDAV is defined in &lt;a href="https://datatracker.ietf.org/doc/html/rfc4918"&gt;IETF RFC 4918&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/WebDAV"&gt;https://en.wikipedia.org/wiki/WebDAV&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Apparently, Bazel, Gradle, and CCache all have support for a WebDAV-based remote cache: &lt;a href="https://github.com/mozilla/sccache/blob/main/docs/Webdav.md"&gt;https://github.com/mozilla/sccache/blob/main/docs/Webdav.md&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/06/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/04/</guid><description>&lt;p&gt;That k8s can run &amp;ldquo;init containers&amp;rdquo; before a pod&amp;rsquo;s app containers:
&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"&gt;https://kubernetes.io/docs/concepts/workloads/pods/init-containers/&lt;/a&gt;.
This provides setup-script functionality, and Cloudflare Pages uses multiple init containers for cloning, installing toolchains, and building pages: &lt;a href="https://blog.cloudflare.com/moderizing-cloudflare-pages-builds-toolbox/#our-modular-and-scalable-architecture"&gt;https://blog.cloudflare.com/moderizing-cloudflare-pages-builds-toolbox/#our-modular-and-scalable-architecture&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/06/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/05/</guid><description>&lt;p&gt;SPF (Sender Policy Framework) records are DNS TXT records like &lt;code&gt;v=spf1 _include=${email_server_domain} ~all&lt;/code&gt;.
SPF records help email servers verify that another email server is allowed to send messages from a domain (e.g. &lt;code&gt;foo@domain.com&lt;/code&gt; should only be sent by servers listed in an SPF record on a DNS server with authority over &lt;code&gt;domain.com&lt;/code&gt;).
More info at &lt;a href="https://www.cloudflare.com/learning/dns/dns-records/dns-spf-record/"&gt;https://www.cloudflare.com/learning/dns/dns-records/dns-spf-record/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DKIM is another TXT record that issues public keys to check signature headers in email:
&lt;a href="https://www.cloudflare.com/learning/dns/dns-records/dns-dkim-record/"&gt;https://www.cloudflare.com/learning/dns/dns-records/dns-dkim-record/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/06/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/13/</guid><description>&lt;p&gt;That&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uuids are 128 bits long&lt;/li&gt;
&lt;li&gt;in uuid v1, only the first 8 hex digits (32 bits) are randomly generated&lt;/li&gt;
&lt;li&gt;in uuid v4, the entire 128 bits are randomly generated&lt;/li&gt;
&lt;li&gt;uuid v5 derives all 128 bits deterministically from the hash of a seed uuid and some input bytes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://www.sohamkamani.com/uuid-versions-explained/"&gt;https://www.sohamkamani.com/uuid-versions-explained/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/06/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/18/</guid><description>&lt;p&gt;By default, a closure seems to live as long as its parent function &lt;em&gt;unless&lt;/em&gt; you use the &lt;code&gt;move&lt;/code&gt; keyword.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;unmoved&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt; &lt;span class="kt"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Fn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;unmoved: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;moved&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt; &lt;span class="kt"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Fn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;move&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;moved: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unmoved&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// does not compile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;moved&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// works fine
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ndash; &lt;a href="https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2021&amp;amp;gist=abbd6cb412ea85aea82d1861c55eba35"&gt;playground link&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/06/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/19/</guid><description>&lt;p&gt;That &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; costs ~1x the alignment value of &lt;code&gt;T&lt;/code&gt;.
I also learned &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&amp;rsquo;s size and alignment don&amp;rsquo;t reflect the size and alignment of &lt;code&gt;T&lt;/code&gt; since the Vec is tracking an owned buffer on the heap which isn&amp;rsquo;t counted in the Vec&amp;rsquo;s own size.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Alone8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;u8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// size= 1, align=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Opt8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;u8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// size= 2, align=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Vec8&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;u8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// size=24; align=8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Alone64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;u64&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// size= 8, align=8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Opt64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;u64&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// size=16, align=8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Vec64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;u64&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// size=24; align=8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;That Firefox bundles process and task managers for performance monitoring, available at &lt;code&gt;about:processes&lt;/code&gt; and &lt;code&gt;about:tasks&lt;/code&gt;, respectively
&lt;a href="https://support.mozilla.org/en-US/kb/task-manager-tabs-or-extensions-are-slowing-firefox"&gt;https://support.mozilla.org/en-US/kb/task-manager-tabs-or-extensions-are-slowing-firefox&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/06/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/22/</guid><description>&lt;p&gt;That you can send texts to email and recieve emails from texts.
When recieving an email from a text client, the emaio sender will be an email address at the text-sender&amp;rsquo;s carrier domain (e.g. &lt;code&gt;+1234567890@carrier.domain&lt;/code&gt;).&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/07/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/07/09/</guid><description>&lt;p&gt;I guessed that not all data centers were created equal, but I hadn&amp;rsquo;t heard of an official ranking system before now.&lt;/p&gt;
&lt;p&gt;Apparently &lt;a href="https://uptimeinstitute.com/"&gt;the Uptime Institute&lt;/a&gt; provides international rankings of trustworthiness based on uptime guarantees, redundancy, security measures, etc.&lt;/p&gt;
&lt;p&gt;The tiers of data centers:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tier 1&lt;/strong&gt;: A data center with a single path for power and cooling, and no backup components. This tier has an expected uptime of 99.671% per year.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tier 2&lt;/strong&gt;: A data center with a single path for power and cooling, and some redundant and backup components. This tier offers an expected uptime of 99.741% per year.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/07/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/07/10/</guid><description>&lt;p&gt;That in vscode, you can make your keypresses display on-screen using the &lt;a href="https://code.visualstudio.com/updates/v1_31#_screencast-mode"&gt;&amp;ldquo;Developer: Toggle screencast mode&amp;rdquo;&lt;/a&gt; command.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/07/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/07/12/</guid><description>&lt;p&gt;How to create subtables in a table in an array in TOML: &lt;code&gt;[table_name.subtable_name]&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any reference to an array of tables points to the most recently defined table element of the array.
This allows you to define sub-tables, and even sub-arrays of tables, inside the most recent table.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://toml.io/en/v1.0.0#array-of-tables"&gt;https://toml.io/en/v1.0.0#array-of-tables&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/07/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/07/30/</guid><description>&lt;h1 id="getting-the-top-level-directory-of-the-relevant-git-worktree"&gt;Getting the top-level directory of the relevant git worktree&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# set up a dummy repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -euo pipefail
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;experiment_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mktemp -d --tmpdir test_repo.XXX&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git clone --recurse-submodules git@github.com:SKalt/dummy_repo.git &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$experiment_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$experiment_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git pull --recurse-submodules&lt;span class="o"&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git checkout -b brnch &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git checkout - &lt;span class="c1"&gt;# set up a dummy branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git worktree add wrktr brnch &lt;span class="c1"&gt;# add a wortree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; wrktr &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git submodule update --init --recursive &lt;span class="c1"&gt;# init the recursive submodules in the worktree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tree .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;.
├── LICENSE
├── nested
│   └── file.txt
├── README.md
├── submod
│   ├── LICENSE
│   ├── nested
│   │   └── file.txt
│   ├── README.md
│   └── submod
│   ├── LICENSE
│   ├── nested
│   │   └── file.txt
│   └── README.md
└── wrktr
├── LICENSE
├── nested
│   └── file.txt
├── README.md
└── submod
├── LICENSE
├── nested
│   └── file.txt
├── README.md
└── submod
├── LICENSE
├── nested
│   └── file.txt
└── README.md
11 directories, 18 files
&lt;/code&gt;&lt;/pre&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tree .git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;./.git
├── branches
├── config
├── description
├── HEAD
├── hooks/...
├── index
├── info/...
├── logs/...
├── modules
│   └── submod
│   ├── branches
│   ├── config
│   ├── description
│   ├── HEAD
│   ├── hooks/...
│   ├── index
│   ├── info/...
│   ├── logs/...
│   ├── modules
│   │   └── submod
│   │   ├── branches
│   │   ├── config # &amp;lt;- contains relative path in core.worktree
│   │   ├── description
│   │   ├── HEAD
│   │   ├── hooks/...
│   │   ├── index
│   │   ├── info/...
│   │   ├── logs/...
│   │   ├── objects/...
│   │   ├── packed-refs
│   │   └── refs/...
│   ├── objects/...
│   ├── packed-refs
│   └── refs/...
├── objects/...
├── packed-refs
├── refs
│   ├── heads
│   │   ├── brnch
│   │   └── main
│   ├── remotes
│   │   └── origin
│   │   └── HEAD
│   └── tags
└── worktrees
└── wrktr
├── commondir
├── gitdir
├── HEAD
├── index
├── logs
│   └── HEAD
├── modules
│   └── submod
│   ├── branches
│   ├── config
│   ├── description
│   ├── HEAD
│   ├── hooks/...
│   ├── index
│   ├── info/...
│   ├── logs/...
│   ├── modules
│   │   └── submod
│   │   ├── branches
│   │   ├── config
│   │   ├── description
│   │   ├── HEAD
│   │   ├── hooks/...
│   │   ├── index
│   │   ├── info/...
│   │   ├── logs/...
│   │   ├── objects/...
│   │   ├── packed-refs
│   │   └── refs/...
│   ├── objects/...
│   ├── packed-refs
│   └── refs/...
└── ORIG_HEAD
91 directories, 133 files
&lt;/code&gt;&lt;/pre&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --git-common-dir
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --git-dir
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --is-inside-git-dir
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --is-inside-work-tree
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --show-toplevel
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;padding&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;delimiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="c1"&gt;# must be 1ch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;78&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; -- &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;delimiter&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%.0s&amp;#34;&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;seq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;$width&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="si"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;header&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; padding &lt;span class="s2"&gt;&amp;#34;#&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;indent&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; padding &lt;span class="s2"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; 22&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;%s = &amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explore&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;to_explore&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$to_explore&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; header &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$to_explore&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;for&lt;/span&gt; arg in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; indent &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$arg&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git --no-pager rev-parse &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$arg&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; indent &lt;span class="s2"&gt;&amp;#34;config#core.worktree&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git --no-pager config core.worktree &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;lt;missing&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; indent &lt;span class="s2"&gt;&amp;#34;./config#core.worktree&amp;#34;&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f ./config &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git --no-pager config --file &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/config core.worktree &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;lt;missing&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; indent &lt;span class="s2"&gt;&amp;#34;./gitdir&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f ./gitdir &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; cat ./gitdir&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^/# /g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s2"&gt;&amp;#34;s#&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;#\${PWD}#g&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;paths_to_explore&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/nested&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.git&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.git/worktrees&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.git/worktrees/wrktr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.git/worktrees/wrktr/modules/submod&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/wrktr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/wrktr/submod&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/submod&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.git/modules/submod&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; p in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;paths_to_explore&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; explore &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD} ############################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = .git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = .git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/nested #####################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = ../.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = ${PWD}/.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/.git #######################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = fatal: this operation must be run in a work tree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/.git/worktrees #############################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = ${PWD}/.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = ${PWD}/.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = fatal: this operation must be run in a work tree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/.git/worktrees/wrktr #######################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = ${PWD}/.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = fatal: this operation must be run in a work tree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir = ${PWD}/wrktr/.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/.git/worktrees/wrktr/modules/submod ########################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}/wrktr/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = ../../../../../wrktr/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree = ../../../../../wrktr/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/wrktr ######################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = ${PWD}/.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = ${PWD}/.git/worktrees/wrktr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}/wrktr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = &amp;lt;missing&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/wrktr/submod ###############################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = ${PWD}/.git/worktrees/wrktr/modules/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = ${PWD}/.git/worktrees/wrktr/modules/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}/wrktr/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = ../../../../../wrktr/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/submod #####################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = ${PWD}/.git/modules/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = ${PWD}/.git/modules/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = ../../../submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ${PWD}/.git/modules/submod ########################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-common-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --git-dir = .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-git-dir = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --is-inside-work-tree = false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# --show-toplevel = ${PWD}/submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# config#core.worktree = ../../../submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./config#core.worktree = ../../../submod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ./gitdir =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explore_tab&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;to_explore&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$to_explore&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;|`%s`&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$to_explore&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;for&lt;/span&gt; arg in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;_result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git --no-pager rev-parse &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$arg&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;|`%s`&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$_result&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# config#core.worktree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;|`%s`&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git --no-pager config core.worktree &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;lt;missing&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# ./config#core.worktree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;|&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f ./config &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;`%s`&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git --no-pager config --file &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/config core.worktree &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;lt;missing&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# ./gitdir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;|&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f ./gitdir &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;`%s`&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat ./gitdir&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;|&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;_headers&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;pwd&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;config#core.worktree&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ./config#core.worktree
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ./gitdir
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;_headers&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;|`%s`&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;|&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;_headers&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;|-&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;|&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; p in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;paths_to_explore&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; explore_tab &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s2"&gt;&amp;#34;s#&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;#\${PWD}#g&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--git-common-dir&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--git-dir&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--is-inside-git-dir&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--is-inside-work-tree&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--show-toplevel&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;config#core.worktree&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;./config#core.worktree&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;./gitdir&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/nested&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fatal: this operation must be run in a work tree&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fatal: this operation must be run in a work tree&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fatal: this operation must be run in a work tree&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr/.git&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../../../wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../../../wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../../../wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--git-common-dir&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--git-dir&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--is-inside-git-dir&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--is-inside-work-tree&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;--show-toplevel&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;config#core.worktree&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;./config#core.worktree&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;./gitdir&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fatal: this operation must be run in a work tree&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fatal: this operation must be run in a work tree&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fatal: this operation must be run in a work tree&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;missing&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr/.git&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/worktrees/wrktr/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../../../wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../../../wrktr/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;${PWD}/.git/modules/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;${PWD}/submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;../../../submod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/08/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/02/</guid><description>&lt;p&gt;On ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# X11 keyboard options contain the codes that can be passed as options&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;man xkeyboard-config
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# dconf controls how your keyboard(s) behave -- including lighting the caps-lock&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# indicator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;dconf_opts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;/org/gnome/desktop/input-sources/xkb-options&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dconf &lt;span class="nb"&gt;read&lt;/span&gt; &lt;span class="nv"&gt;$dconf_opts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dconf write &lt;span class="nv"&gt;$dconf_opts&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;[&lt;/span&gt;&lt;span class="nv"&gt;$values&lt;/span&gt;&lt;span class="s2"&gt;]&amp;#34;&lt;/span&gt; &lt;span class="c1"&gt;# where values are taken from `man xkeyboard-config`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# notably, dconf&amp;#39;s settings clobber those set by `setxkbmap` and &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# `/etc/default/keyboard`&amp;#39;s XKBOPTIONS variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setxkbmap -query &lt;span class="c1"&gt;# prints the current key-map settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setxkbmap -option &lt;span class="nv"&gt;$values&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;- these changes show up in Settings&amp;gt;Keyboard&amp;gt;${CurrentLayout}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat /etc/default/keyboard &lt;span class="p"&gt;|&lt;/span&gt; grep XKBOPTIONS
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;xev &lt;span class="c1"&gt;# opens a window and prints the events it sees -- including keypress events&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# with key codes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://unix.stackexchange.com/a/331210/234355"&gt;https://unix.stackexchange.com/a/331210/234355&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/08/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/08/</guid><description>&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt; has a &lt;code&gt;.import [--csv] [--skip 1] FILE [TABLE]&lt;/code&gt; meta-command (&lt;a href="https://sqlite.org/cli.html#importing_files_as_csv_or_other_formats"&gt;docs&lt;/a&gt;).
Also, for some reason my version of &lt;code&gt;sqlite3&lt;/code&gt; doesn&amp;rsquo;t respect any flags.&lt;/p&gt;
&lt;p&gt;Also, &lt;code&gt;sqlite3&lt;/code&gt; has a &lt;code&gt;.dump&lt;/code&gt; meta-command that out puts pure SQL (plus a few sqlite &lt;code&gt;PRAGMA&lt;/code&gt;s): &lt;a href="https://sqlite.org/cli.html#converting_an_entire_database_to_a_text_file"&gt;docs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/08/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/09/</guid><description>&lt;p&gt;That you can cancel/reset timeouts in JS using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/clearTimeout"&gt;&lt;code&gt;clearTimeout&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/08/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/18/</guid><description>&lt;p&gt;That the authorative database of top-level domains is published by the IANA at &lt;a href="https://www.iana.org/domains/root/db"&gt;https://www.iana.org/domains/root/db&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/08/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/20/</guid><description>&lt;p&gt;That there&amp;rsquo;s a &lt;a href="https://schema.org/JobPosting"&gt;JSON schema for job postings&lt;/a&gt; that usually gets included in job-posting pages as a &lt;code&gt;&amp;lt;script type=&amp;quot;application/ld+json&amp;quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/08/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/26/</guid><description>&lt;p&gt;That sometimes ssh sessions with x-forwarding don&amp;rsquo;t unlock the GNOME &amp;ldquo;login&amp;rdquo; keyring.
This can lead to &amp;ldquo;Cannot create an item in a locked collection&amp;rdquo; errors.
The way to fix the problem is to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;password: &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;read&lt;/span&gt; -s password
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; gnome-keyring-daemon --replace --unlock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/08/</guid><description>&lt;p&gt;(1) that gnu &lt;a href="https://sourceware.org/binutils/docs-2.41/ld/Options.html"&gt;&lt;code&gt;ld&lt;/code&gt;&lt;/a&gt;, part of gnu&amp;rsquo;s binutils suite, is the de-facto standard interface for linker CLIs.
Thus, all of &lt;a href="https://en.wikipedia.org/wiki/Gold_(linker)"&gt;&lt;code&gt;gold&lt;/code&gt; (elf-only &lt;code&gt;ld&lt;/code&gt;)&lt;/a&gt;, &lt;a href="https://github.com/rui314/mold/blob/main/docs/mold.md#gnu-compatible-options"&gt;&lt;code&gt;mold&lt;/code&gt;&lt;/a&gt;/&lt;a href="https://github.com/rui314/mold/blob/main/docs/mold.md#gnu-compatible-options"&gt;&lt;code&gt;sold&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://github.com/llvm/llvm-project/blob/main/lld/docs/ld.lld.1#L26"&gt;&lt;code&gt;lld&lt;/code&gt;&lt;/a&gt; also try to expose &lt;code&gt;ld&lt;/code&gt;-compatible CLIs.&lt;/p&gt;
&lt;p&gt;(2) that &lt;code&gt;ld&lt;/code&gt; has several modes of adding a build id to an executable:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--build-id[=style]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;[Create a ] &lt;code&gt;.note.gnu.build-id&lt;/code&gt; ELF note section or a &lt;code&gt;.buildid&lt;/code&gt; COFF section.
The contents of the note are unique bits identifying this linked file.
&lt;code&gt;style&lt;/code&gt; can be&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/09/</guid><description>&lt;p&gt;To add JSON schema validation to e.g. Cargo.toml files in VSCode using &lt;code&gt;tamasfe.even-better-toml&lt;/code&gt;, you can add a special comment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;#:schema https://json.schemastore.org/cargo.json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# see https://taplo.tamasfe.dev/configuration/directives.html#the-schema-directive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;That there&amp;rsquo;s such a thing as &amp;ldquo;canadian compilation&amp;rdquo;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If build, host, and target are all the same, this is called a &lt;strong&gt;native&lt;/strong&gt;.
If build and host are the same but target is different, this is called a &lt;strong&gt;cross&lt;/strong&gt;.
If build, host, and target are all different this is called a &lt;strong&gt;canadian&lt;/strong&gt; (for obscure reasons dealing with Canada’s political party and the background of the person working on the build at that time).&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/12/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Start typing your search with&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;^&lt;/code&gt; to show only matches in your browsing history.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; to show only matches in your bookmarks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt; to show only matches in bookmarks you’ve tagged.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%&lt;/code&gt; to show only matches in your currently open tabs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;#&lt;/code&gt; to show only matches where every search term is part of the title or part of a tag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt; to show only matches where every search term is part of the web address (URL).
The text &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;http://&lt;/code&gt; in the URL is ignored but not &lt;code&gt;file:///&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/20/</guid><description>&lt;p&gt;The meaning of the tags&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#LI-Remote&lt;/code&gt;: Remote&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#LI-Hybrid&lt;/code&gt;: Hybrid&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#LI-Onsite&lt;/code&gt;: Onsite&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#LI-DNI&lt;/code&gt;: To prevent jobs from displaying on LinkedIn completely. (DNI = Do Not Ingest)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#LI-DNP&lt;/code&gt;: To prevent jobs from filling a job slot, use this tag or use the ‘block job’ functionality.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://www.reddit.com/r/AskHR/comments/ifrayb/what_does_liremote_in_a_job_description_mean/"&gt;https://www.reddit.com/r/AskHR/comments/ifrayb/what_does_liremote_in_a_job_description_mean/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/22/</guid><description>&lt;p&gt;How to position an element relative to its parent without affecting the flow of other sibling elements:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;you&amp;rsquo;re most likely interested in &lt;code&gt;position: absolute&lt;/code&gt; which will position an element relative to a container. By default, the container is the browser window, but if a parent element either has &lt;code&gt;position: relative&lt;/code&gt; or &lt;code&gt;position: absolute&lt;/code&gt; set on it, then it will act as the parent for positioning coordinates for its children.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://stackoverflow.com/a/105035/6571327"&gt;https://stackoverflow.com/a/105035/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/25/</guid><description>&lt;blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Acronym&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DSO&lt;/td&gt;
&lt;td&gt;distribution system operators&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AGR&lt;/td&gt;
&lt;td&gt;aggregator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TSO&lt;/td&gt;
&lt;td&gt;transmission system operator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MCM&lt;/td&gt;
&lt;td&gt;market-based coordination mechanism&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://lfenergy.org/projects/shapeshifter/"&gt;https://lfenergy.org/projects/shapeshifter/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/09/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/09/28/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Executables, dynamic libraries and debug companions on all Apple platforms use the &lt;em&gt;Mach Object&lt;/em&gt;, or short &lt;em&gt;Mach-O&lt;/em&gt;, container format.
This applies to iOS, iPadOS, tvOS, watchOS, and macOS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Executables do not carry a file extension.
For desktop applications, they are often placed in app bundle structures with the .app suffix.
Unless stripped manually, executables contain unwind information and a symbol table.
Debug information is never stored in executables.&lt;/li&gt;
&lt;li&gt;Dynamic Libraries use the .dylib extension, and otherwise behave exactly the same as executables.&lt;/li&gt;
&lt;li&gt;Debug Companions are placed in a folder structure with the &lt;code&gt;.dSYM&lt;/code&gt; extension, and are located at &lt;code&gt;&amp;lt;name&amp;gt;.dSYM/Contents/Resources/DWARF/&amp;lt;name&amp;gt;&lt;/code&gt;.
They usually contain a symbol table and debug information, but rarely unwind information.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://docs.sentry.io/platforms/apple/data-management/debug-files/file-formats/"&gt;https://docs.sentry.io/platforms/apple/data-management/debug-files/file-formats/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/03/</guid><description>&lt;p&gt;That out of ~51672 extensions on the VSCode marketplace, there are only 31 that are marked as commercial software: &amp;ldquo;Trial&amp;rdquo; rather than &amp;ldquo;Free&amp;rdquo;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;date&lt;/th&gt;
&lt;th&gt;extension&lt;/th&gt;
&lt;th&gt;publisher&lt;/th&gt;
&lt;th&gt;license&lt;/th&gt;
&lt;th&gt;kind&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2020-04-18&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-redis-client"&gt;Redis&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2020-04-21&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-ssh"&gt;SSH Client&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2020-05-05&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-mysql-client2"&gt;MySQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2021-01-27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-es-client2"&gt;ElasticSearch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2021-01-27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-postgresql-client2"&gt;PostgreSQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;2021-02-05&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-database-client2"&gt;Database Client&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;2021-06-20&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=p42ai.refactor"&gt;JS Refactoring Assistant&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://p42.ai"&gt;P42&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;2021-06-29&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot"&gt;GitHub Copilot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;2021-11-22&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=LocalCI.local-ci"&gt;Local CI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getlocalci.com"&gt;Local CI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;GPL-2&lt;/td&gt;
&lt;td&gt;tool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;2021-12-01&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-myssql-client2"&gt;SQl Server Client(mssql)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://database-client.com"&gt;Weijan Chen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;2022-01-18&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=amiq.dvt"&gt;DVT IDE for Visual Studio Code&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://amiq.com"&gt;AMIQ EDA s.r.l.&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;tool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;2022-06-27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=PrashantCholachagudda.trial-test"&gt;TestExtension&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://sap.com"&gt;Prashant&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;experiment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2022-11-09&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.heygithub"&gt;GitHub Copilot Voice&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2022-11-25&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=gptlabs.upg"&gt;UPG Code Generator for VS Code&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gptlabs.us/"&gt;GPT Labs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2022-12-14&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=singularity-ai.skycode"&gt;SkyCode&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://singularity-ai.com/"&gt;singularity-ai&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2023-01-01&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=SoftwareTestingAI.softwaretestingai-extension"&gt;Software Testing AI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://softwaretesting.ai/"&gt;Software Testing AI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;2023-01-06&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MiloTilo.arandomtheme"&gt;arandomtheme&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MiloTilo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;experiment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;2023-01-19&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CodeAssist.codeassist"&gt;CodeAssist&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codeassist.tech"&gt;CodeAssist&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;2023-01-27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=RandomFractalsInc.duckdb-sql-tools"&gt;DuckDB Sql Tools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Random Fractals Inc.&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;2023-03-28&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=PolyverseCorporation.polyverse-boost-notebook"&gt;Polyverse Boost AI: Complexity Simplified&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://polyverse.com"&gt;Polyverse Corporation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;2023-04-12&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Spellcraft.merlin-ai"&gt;Merlin: GPT Assistant for VS Code&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://spellcraft.org"&gt;Spellcraft&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;2023-04-27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat"&gt;GitHub Copilot Chat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;2023-07-03&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=grappl.grappl"&gt;Grappl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://grappl.io"&gt;Grappl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;tool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;2023-07-16&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Scious.Bask"&gt;Bask&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://scious.io"&gt;Scious&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;dsl&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;2023-07-17&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=nguyenngoclong.data-sync"&gt;Data Sync&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://nguyenngoclongdev.github.io/"&gt;Nguyen Ngoc Long&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;2023-07-19&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=chensuiyi.fn-map"&gt;FnMap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://yicode.tech"&gt;yicode.tech&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;GPL-3&lt;/td&gt;
&lt;td&gt;tool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;2023-08-10&lt;/td&gt;
&lt;td&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Taskfy.taskfy"&gt;Taskfy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Taskfy&lt;/td&gt;
&lt;td&gt;commercial&lt;/td&gt;
&lt;td&gt;tool&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The paying for use of an extension is usually predicated on using a remote API (i.e. remote LLM services) using a paid API key or a subscription associated with an OIDC identity (e.g. a GitHub user account).
Most common yet is no monetization scheme, which is understandable &amp;ndash; setting up payments isn&amp;rsquo;t trivial.
However, occasionally monetization schemes occasionally appear:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/09/</guid><description>&lt;p&gt;About the hot-off-the-press OAuth2 DPoP specification: &lt;a href="https://datatracker.ietf.org/doc/html/rfc9449"&gt;https://datatracker.ietf.org/doc/html/rfc9449&lt;/a&gt;.
DPoP is a &amp;ldquo;sender constraint&amp;rdquo;: a way of checking that the sender of an access (JW) token is the same as the entity to whom the access token was issued.&lt;/p&gt;
&lt;p&gt;My simplified understanding of DPoP is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the client generates a private/public key pair&lt;/li&gt;
&lt;li&gt;the client generates a request for an access token. The request includes:
&lt;ul&gt;
&lt;li&gt;the client&amp;rsquo;s public key&lt;/li&gt;
&lt;li&gt;the the authorization endpoint&amp;rsquo;s URL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;the client signs the request with the client&amp;rsquo;s private key&lt;/li&gt;
&lt;li&gt;the authorization server validates the request (signature and all) and issues an access (JW) token including the thumbprint of the client&amp;rsquo;s public key. As is normal in OAuth2, the access token is signed by the authorization server&amp;rsquo;s private key.&lt;/li&gt;
&lt;li&gt;the client generates a new proof including the client&amp;rsquo;s public key and the intended API endpoint, attaches that to the access token (remember, the access token also includes the thumbprint of the client&amp;rsquo;s public key). The client sends the proof and access token to the API.&lt;/li&gt;
&lt;li&gt;The API validates
&lt;ol&gt;
&lt;li&gt;the proof was signed by the client&amp;rsquo;s public key&lt;/li&gt;
&lt;li&gt;the client&amp;rsquo;s public key matches the thumbprint in the access token&lt;/li&gt;
&lt;li&gt;and the access key was signed by the and the authorization server&amp;rsquo;s public key&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This seems much easier to manage than MTLS, which (I think) involves maintaining long-lived X509 certificates, signing infrastructure, and chains of trust.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/17/</guid><description>&lt;p&gt;&amp;ldquo;relationship-based access control model (ReBAC).&amp;rdquo;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/18/</guid><description>&lt;blockquote&gt;
&lt;p&gt;RFCs are labeled with different statuses:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Internet Standard (e.g. &lt;a href="https://datatracker.ietf.org/doc/html/rfc9112/"&gt;HTTP/1.1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Proposed Standard (e.g. &lt;a href="https://datatracker.ietf.org/doc/html/rfc9114/"&gt;HTTP/3&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc9113"&gt;HTTP/2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Best Current Practice&lt;/li&gt;
&lt;li&gt;Experimental&lt;/li&gt;
&lt;li&gt;Informational&lt;/li&gt;
&lt;li&gt;Historic&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;RFCs usually begin as Internet-Drafts (I-Ds) written by an individual or a small group.
In the IETF, these are then usually adopted by a working group, and improved and revised.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://www.ietf.org/standards/rfcs/"&gt;https://www.ietf.org/standards/rfcs/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Class fields are public by default, but private class members can be created by using a hash &lt;code&gt;#&lt;/code&gt; prefix.
The privacy encapsulation of these class features is enforced by JavaScript itself.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/20/</guid><description>&lt;p&gt;First, that &lt;a href="https://gohugo.io/content-management/diagrams/"&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/a&gt; supports &lt;a href="https://github.com/bep/goat"&gt;&lt;code&gt;goat&lt;/code&gt;&lt;/a&gt; ascii diagrams out-of-the box.&lt;/p&gt;
&lt;p&gt;Second, about OAuth 2.0 authentication + authorization flows:&lt;/p&gt;
&lt;h2 id="authorization-code-flow"&gt;Authorization Code Flow&lt;/h2&gt;
&lt;p&gt;From &lt;a href="https://tools.ietf.org/html/rfc6749#section-4.1"&gt;https://tools.ietf.org/html/rfc6749#section-4.1&lt;/a&gt;
and &lt;a href="https://auth0.com/docs/get-started/authentication-and-authorization-flow/authorization-code-flow"&gt;https://auth0.com/docs/get-started/authentication-and-authorization-flow/authorization-code-flow&lt;/a&gt;&lt;/p&gt;
&lt;div class="goat svg-container "&gt;
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 504 489"
&gt;
&lt;g transform='translate(8,16)'&gt;
&lt;path d='M 8,0 L 48,0' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,0 L 152,0' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,0 L 440,0' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,0 L 488,0' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 8,32 L 48,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,32 L 152,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,32 L 440,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,32 L 488,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 32,80 L 112,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,128 L 352,128' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 32,176 L 352,176' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 32,224 L 464,224' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 368,272 L 464,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,320 L 352,320' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,368 L 352,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,416 L 352,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 8,432 L 48,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,432 L 152,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,432 L 440,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,432 L 488,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 8,464 L 48,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,464 L 152,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,464 L 440,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,464 L 488,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 8,0 L 8,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 8,432 L 8,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 24,48 L 24,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 48,0 L 48,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 48,432 L 48,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,0 L 96,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,432 L 96,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,48 L 120,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,192 L 120,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,240 L 120,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 152,0 L 152,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 152,432 L 152,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,0 L 280,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,432 L 280,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 360,48 L 360,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 360,240 L 360,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,0 L 448,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,432 L 448,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 456,0 L 456,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 456,432 L 456,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 472,48 L 472,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 488,0 L 488,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 488,432 L 488,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 24,40 L 24,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 24,416 L 24,424' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,40 L 120,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,160 L 120,168' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,184 L 120,192' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,208 L 120,216' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,232 L 120,240' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,416 L 120,424' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 360,40 L 360,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 360,208 L 360,216' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 360,232 L 360,240' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 360,416 L 360,424' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 472,40 L 472,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 472,416 L 472,424' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='40.000000,176.000000 28.000000,170.399994 28.000000,181.600006' fill='currentColor' transform='rotate(180.000000, 32.000000, 176.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='120.000000,80.000000 108.000000,74.400002 108.000000,85.599998' fill='currentColor' transform='rotate(0.000000, 112.000000, 80.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='136.000000,320.000000 124.000000,314.399994 124.000000,325.600006' fill='currentColor' transform='rotate(180.000000, 128.000000, 320.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='136.000000,416.000000 124.000000,410.399994 124.000000,421.600006' fill='currentColor' transform='rotate(180.000000, 128.000000, 416.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='360.000000,128.000000 348.000000,122.400002 348.000000,133.600006' fill='currentColor' transform='rotate(0.000000, 352.000000, 128.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='360.000000,368.000000 348.000000,362.399994 348.000000,373.600006' fill='currentColor' transform='rotate(0.000000, 352.000000, 368.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='376.000000,272.000000 364.000000,266.399994 364.000000,277.600006' fill='currentColor' transform='rotate(180.000000, 368.000000, 272.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='472.000000,224.000000 460.000000,218.399994 460.000000,229.600006' fill='currentColor' transform='rotate(0.000000, 464.000000, 224.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 440,0 A 16,16 0 0,1 456,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,0 A 16,16 0 0,0 448,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 456,16 A 16,16 0 0,1 440,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,16 A 16,16 0 0,0 464,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 440,432 A 16,16 0 0,1 456,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,432 A 16,16 0 0,0 448,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 456,448 A 16,16 0 0,1 440,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,448 A 16,16 0 0,0 464,464' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'&gt;U&lt;/text&gt;
&lt;text text-anchor='middle' x='16' y='452' fill='currentColor' style='font-size:1em'&gt;U&lt;/text&gt;
&lt;text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='24' y='452' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='32' y='68' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='32' y='452' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='40' y='68' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='40' y='452' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='48' y='68' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='56' y='68' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='64' y='68' fill='currentColor' style='font-size:1em'&gt;k&lt;/text&gt;
&lt;text text-anchor='middle' x='80' y='68' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='88' y='68' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'&gt;g&lt;/text&gt;
&lt;text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'&gt;C&lt;/text&gt;
&lt;text text-anchor='middle' x='104' y='68' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='104' y='452' fill='currentColor' style='font-size:1em'&gt;C&lt;/text&gt;
&lt;text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='112' y='68' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='112' y='452' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='120' y='452' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'&gt;O&lt;/text&gt;
&lt;text text-anchor='middle' x='128' y='452' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'&gt;O&lt;/text&gt;
&lt;text text-anchor='middle' x='136' y='164' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'&gt;T&lt;/text&gt;
&lt;text text-anchor='middle' x='136' y='452' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='144' y='164' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;text text-anchor='middle' x='144' y='452' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'&gt;T&lt;/text&gt;
&lt;text text-anchor='middle' x='152' y='164' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'&gt;,&lt;/text&gt;
&lt;text text-anchor='middle' x='152' y='404' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='160' y='164' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='160' y='404' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='168' y='356' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='168' y='404' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='176' y='404' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='184' y='404' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='192' y='164' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='192' y='404' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'&gt;L&lt;/text&gt;
&lt;text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='208' y='212' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='208' y='356' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='216' y='164' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'&gt;g&lt;/text&gt;
&lt;text text-anchor='middle' x='216' y='404' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='224' y='356' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'&gt;k&lt;/text&gt;
&lt;text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'&gt;D&lt;/text&gt;
&lt;text text-anchor='middle' x='232' y='164' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='232' y='212' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='232' y='308' fill='currentColor' style='font-size:1em'&gt;O&lt;/text&gt;
&lt;text text-anchor='middle' x='232' y='356' fill='currentColor' style='font-size:1em'&gt;D&lt;/text&gt;
&lt;text text-anchor='middle' x='232' y='404' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'&gt;,&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='164' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='212' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='308' fill='currentColor' style='font-size:1em'&gt;T&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='356' fill='currentColor' style='font-size:1em'&gt;,&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='248' y='164' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;text text-anchor='middle' x='248' y='212' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='248' y='308' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'&gt;,&lt;/text&gt;
&lt;text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='256' y='212' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='256' y='356' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='264' y='356' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='212' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='356' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='404' fill='currentColor' style='font-size:1em'&gt;D&lt;/text&gt;
&lt;text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='280' y='212' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='280' y='356' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='212' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='356' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='404' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='452' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='296' y='356' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='296' y='452' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='304' y='404' fill='currentColor' style='font-size:1em'&gt;k&lt;/text&gt;
&lt;text text-anchor='middle' x='304' y='452' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'&gt;h&lt;/text&gt;
&lt;text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='312' y='356' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='312' y='404' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='312' y='452' fill='currentColor' style='font-size:1em'&gt;h&lt;/text&gt;
&lt;text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='320' y='356' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='320' y='404' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='320' y='452' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'&gt;U&lt;/text&gt;
&lt;text text-anchor='middle' x='328' y='356' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='328' y='452' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'&gt;R&lt;/text&gt;
&lt;text text-anchor='middle' x='336' y='356' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='336' y='452' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'&gt;z&lt;/text&gt;
&lt;text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='344' y='356' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='344' y='452' fill='currentColor' style='font-size:1em'&gt;z&lt;/text&gt;
&lt;text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='352' y='356' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='352' y='452' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='360' y='452' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='368' y='452' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='376' y='452' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='384' y='260' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='384' y='452' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='392' y='260' fill='currentColor' style='font-size:1em'&gt;D&lt;/text&gt;
&lt;text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='400' y='452' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='408' y='260' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='408' y='452' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='416' y='260' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='416' y='452' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'&gt;v&lt;/text&gt;
&lt;text text-anchor='middle' x='424' y='260' fill='currentColor' style='font-size:1em'&gt;k&lt;/text&gt;
&lt;text text-anchor='middle' x='424' y='452' fill='currentColor' style='font-size:1em'&gt;v&lt;/text&gt;
&lt;text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='432' y='260' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='432' y='452' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='440' y='260' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='440' y='452' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='464' y='452' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='472' y='452' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;text text-anchor='middle' x='480' y='452' fill='currentColor' style='font-size:1em'&gt;P&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;p&gt;Note: IdP = &amp;ldquo;&lt;strong&gt;Id&lt;/strong&gt;entity &lt;strong&gt;P&lt;/strong&gt;rovider&amp;rdquo;.
Also note that the OAuth 2.0 spec separates the user from the &amp;ldquo;user-agent&amp;rdquo;, which is typically the browser. For my notes I&amp;rsquo;m calling the human user the same thing as their browser.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/23/</guid><description>&lt;p&gt;About the three VCard specifications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/20150906130553/http://www.imc.org/pdi/"&gt;2.1 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/20150906130553/http://www.imc.org/pdi/"&gt;3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rfc-editor.org/rfc/rfc6350"&gt;4.0 (2011)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also learned that iPhones can import contacts from a v4.0-formatted vcf file, but a (Samsung) android phne will only import portions of the same file.
Exporting contacts from my android phone seems to use v2.1.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/10/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/31/</guid><description>&lt;p&gt;That POSIX shell has configuration option, &lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_25_03"&gt;&lt;code&gt;set -a&lt;/code&gt; or &lt;code&gt;set -o allexport&lt;/code&gt;&lt;/a&gt; that exports all assigned variables.
This simplifies using &lt;code&gt;.env&lt;/code&gt; files in &lt;code&gt;.envrc&lt;/code&gt; files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# evaluate a .env file, if it exists&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f .env &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;set&lt;/span&gt; -a &lt;span class="c1"&gt;# assigning a variable exports the variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# shellcheck disable=SC1091&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;source&lt;/span&gt; .env
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;set&lt;/span&gt; +a
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;That JS has a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw"&gt;&lt;code&gt;String.raw&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates"&gt;template literal tag function&lt;/a&gt; that unescapes escape sequences in a backtick-string:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;raw&lt;/span&gt;&lt;span class="sb"&gt;`\t\r\n`&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; &amp;#34;\\t\\r\\n&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/11/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/11/02/</guid><description>&lt;p&gt;How to type a decorator function or decorator factory in Python: see &lt;a href="https://mypy.readthedocs.io/en/stable/generics.html##declaring-decorators"&gt;https://mypy.readthedocs.io/en/stable/generics.html##declaring-decorators&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/12/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/12/12/</guid><description>&lt;p&gt;TL;DR: slap copyright comments on files and vendor licenses into a top-level &lt;code&gt;LICENSES/${spdx_id}.${ext}&lt;/code&gt; directory.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &lt;a href="https://spdx.github.io/spdx-spec/v2.3/using-SPDX-short-identifiers-in-source-files/#e4-representing-multiple-licenses"&gt;SPDX spec v2.3&lt;/a&gt; references &lt;a href="https://reuse.software/spec/"&gt;the REUSE spec v3&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alternatively, you can use a&lt;code&gt;LicenseRef-&lt;/code&gt;custom license identifier to refer to a license that is not on the SPDX License List, such as the following:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;SPDX-License-Identifier: LicenseRef-my-special-license
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The&lt;code&gt;LicenseRef-&lt;/code&gt;format is defined in Annex&lt;a href="https://spdx.github.io/spdx-spec/v2.3/SPDX-license-expressions/"&gt;D&lt;/a&gt;. When using a custom&lt;code&gt;LicenseRef-&lt;/code&gt;identifier, you will also need to provide a way for others to determine what license text corresponds to it.&lt;a href="https://reuse.software/spec/"&gt;Version 3.0 of the REUSE Software Specification&lt;/a&gt;provides a standardized format that can optionally be used for providing the corresponding license text for these identifiers.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/12/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/12/15/</guid><description>&lt;p&gt;That&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any value in an array may be semantically null, whether primitive or nested type.&lt;/p&gt;
&lt;p&gt;[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Arrays having a 0 null count may choose to not allocate the validity bitmap; how this is represented depends on the implementation&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://arrow.apache.org/docs/format/Columnar.html#null-count"&gt;https://arrow.apache.org/docs/format/Columnar.html#null-count&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Which is frustrating.
I usually think of arrays or database columns as &lt;code&gt;NOT NULL&lt;/code&gt; by default, so I&amp;rsquo;m disappointed that I need to watch out for that footgun again when writing in-memory DBs.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/12/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/12/23/</guid><description>&lt;p&gt;Turns out Rust does support Any-types and downcasting: see
&lt;a href="https://doc.rust-lang.org/std/any/index.html"&gt;https://doc.rust-lang.org/std/any/index.html&lt;/a&gt;
and
&lt;a href="https://doc.rust-lang.org/std/any/struct.TypeId.html"&gt;https://doc.rust-lang.org/std/any/struct.TypeId.html&lt;/a&gt;
.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/12/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/12/24/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Bayer and McCreight never explained what, if anything, the B stands for: Boeing, balanced, between, broad, bushy, and Bayer have been suggested.
McCreight has said that &amp;ldquo;the more you think about what the B in B-trees means, the better you understand B-trees.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/B-tree#History"&gt;https://en.wikipedia.org/wiki/B-tree#History&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/03/</guid><description>&lt;blockquote&gt;
&lt;p&gt;bit bucket n.&lt;/p&gt;
&lt;p&gt;(very common) 1. The universal data sink (originally, the mythical receptacle used to catch bits when they fall off the end of a register during a shift instruction).
Discarded, lost, or destroyed data is said to have &amp;ldquo;gone to the bit bucket&amp;rdquo;.
On Unix, often used for &lt;code&gt;/dev/null&lt;/code&gt;.
Sometimes amplified as &amp;ldquo;the Great Bit Bucket in the Sky&amp;rdquo;.&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;The place where all lost mail and news messages eventually go. [&amp;hellip;]&lt;/li&gt;
&lt;li&gt;The ideal location for all unwanted mail responses.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Another variant of this legend has it that, as a consequence of the &amp;ldquo;parity preservation law&amp;rdquo;, the number of 1 bits that go to the bit bucket must equal the number of 0 bits.
Any imbalance results in bits filling up the bit bucket.
A qualified computer technician can empty a full bit bucket as part of scheduled maintenance.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/28/</guid><description>&lt;p&gt;That 401 Unauthorized responses are supposed to include a &lt;code&gt;www-authenticate&lt;/code&gt; header with a value indicating how to obtain a valid token.
See &lt;a href="https://datatracker.ietf.org/doc/html/rfc6750#section-3"&gt;https://datatracker.ietf.org/doc/html/rfc6750#section-3&lt;/a&gt; for more details.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/29/</guid><description>&lt;h2 id="typographic-units"&gt;Typographic Units&lt;/h2&gt;
&lt;h3 id="absolute-distance"&gt;Absolute distance&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th style="text-align: center"&gt;CSS Unit&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Picas&lt;/td&gt;
&lt;td style="text-align: center"&gt;&lt;code&gt;pc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1/6 inch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Points&lt;/td&gt;
&lt;td style="text-align: center"&gt;&lt;code&gt;pt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1/72 inches&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units"&gt;https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="font-relative-units"&gt;Font-relative units&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;em&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In metal type, the point size (and hence the em, from em quadrat) was equal to the line height of the metal body from which the letter rises.
[&amp;hellip;]
In some older texts, but not all, the em is defined, or said to have been defined, as the width of the capital &amp;lsquo;M&amp;rsquo; in the current typeface and point size.
[&amp;hellip;]
In [CSS] the em unit is the height of the font in nominal points or inches.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/31/</guid><description>&lt;p&gt;That SQL implementations with recursive CTEs are Turing-complete!
It makes sense: recursion and conditionals are all that is required for Turing completeness.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://learnsql.com/blog/sql-subquery-cte-difference/"&gt;https://learnsql.com/blog/sql-subquery-cte-difference/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/05/</guid><description>&lt;p&gt;That a &lt;code&gt;*.tiff&lt;/code&gt; file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;was specified in 1986 by a company later consumed by Adobe&lt;/li&gt;
&lt;li&gt;was originally intended for scanner interop&lt;/li&gt;
&lt;li&gt;starts with an 8-byte header that includes a 2-byte magic number, a 2-byte endianness flag, and a 4-byte pointer to the first Image File Directory entry&lt;/li&gt;
&lt;li&gt;the max tiff size is 2^32 bytes due to the u32 pointer size&lt;/li&gt;
&lt;li&gt;Each IFD starts with a u16 count of entries, then a sequence of 12-byte ields, then another 4-byte offset of the next IFD entry (0 = none)&lt;/li&gt;
&lt;li&gt;each IFD entry (= &amp;ldquo;field&amp;rdquo;) has a 2-byte tag, 2 bytes of field type, 4-byte count, and 4-byte offset of the value(s) of the field.&lt;/li&gt;
&lt;li&gt;values may occur pretty much anywhere in the file, even before the IFD&lt;/li&gt;
&lt;li&gt;each &amp;ldquo;subfile&amp;rdquo; may have one of several encodings (e.g. black/white, grayscale, rgb, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://docs.fileformat.com/image/tiff/"&gt;https://docs.fileformat.com/image/tiff/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/08/</guid><description>&lt;blockquote&gt;
&lt;p&gt;In signal processing, the Nyquist rate, named after Harry Nyquist, is a value (in units of samples per second or hertz, Hz) equal to twice the highest frequency (bandwidth) of a given function or signal.
When the function is digitized at a higher sample rate (see &amp;ldquo;Critical frequency&amp;rdquo;), the resulting discrete-time sequence is said to be free of the distortion known as aliasing.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/Nyquist_rate"&gt;https://en.wikipedia.org/wiki/Nyquist_rate&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="https://en.wikipedia.org/wiki/Signal_processing"&gt;signal processing&lt;/a&gt; and related disciplines, &lt;strong&gt;aliasing&lt;/strong&gt; is the overlapping of frequency components resulting from a &lt;a href="https://en.wikipedia.org/wiki/Sample_rate"&gt;sample rate&lt;/a&gt; below the &lt;a href="https://en.wikipedia.org/wiki/Nyquist_rate"&gt;Nyquist rate&lt;/a&gt;.
This overlap results in &lt;a href="https://en.wikipedia.org/wiki/Distortion"&gt;distortion&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Artifact_(error)"&gt;artifacts&lt;/a&gt; when the &lt;a href="https://en.wikipedia.org/wiki/Signal_reconstruction"&gt;signal is reconstructed&lt;/a&gt; from samples which causes the reconstructed signal to differ from the original continuous signal.
Aliasing that occurs in signals sampled in time, for instance in &lt;a href="https://en.wikipedia.org/wiki/Digital_audio"&gt;digital audio&lt;/a&gt; or the &lt;a href="https://en.wikipedia.org/wiki/Stroboscopic_effect"&gt;stroboscopic effect&lt;/a&gt;, is referred to as &lt;strong&gt;temporal aliasing&lt;/strong&gt;.
Aliasing in spatially sampled signals (e.g., &lt;a href="https://en.wikipedia.org/wiki/Moir%C3%A9_pattern"&gt;moiré patterns&lt;/a&gt; in &lt;a href="https://en.wikipedia.org/wiki/Digital_image"&gt;digital images&lt;/a&gt;) is referred to as &lt;strong&gt;spatial aliasing&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/12/</guid><description>&lt;p&gt;That rust has built-in numeric types named like &lt;code&gt;NonZero*&lt;/code&gt; that reserve the bit-pattern of 0 as a niche: see &lt;a href="https://doc.rust-lang.org/core/num/index.html"&gt;https://doc.rust-lang.org/core/num/index.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is useful since that niche will absorb the cost of wrapping a &lt;code&gt;NonZero&lt;/code&gt; int with &lt;code&gt;Option&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;::&lt;span class="n"&gt;num&lt;/span&gt;::&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// has alignment 2, size 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;: &lt;span class="kt"&gt;u16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34; NonZeroU8: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34; Option&amp;lt;NonZeroU8&amp;gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34; Struct&amp;lt;NonZeroU8&amp;gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Option&amp;lt;Struct&amp;lt;NonZeroU8&amp;gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;: &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2021&amp;amp;gist=7f5ee657d54e102aa7755c32bbdb94c9"&gt;playground link&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/14/</guid><description>&lt;p&gt;A more concise way to implement light/dark modes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;light&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which saves a few more bytes than my usual&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--fg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;media&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dark&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--fg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also learned that CSS has special syntax for systmem-provided colors, notably:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Canvas&lt;/code&gt;: the default background color&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CanvasText&lt;/code&gt;: the default text color&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/19/</guid><description>&lt;p&gt;That CSS can adjust any font&amp;rsquo;s aspect value using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust"&gt;&lt;code&gt;font-size-adjust&lt;/code&gt;&lt;/a&gt; &amp;ndash; the ratio between the cap height and the x-height, NOT the aspect ratio.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/07/</guid><description>&lt;p&gt;That &lt;code&gt;go mod tidy&lt;/code&gt; needs to be followed by &lt;code&gt;go mod vendor&lt;/code&gt; to keep &lt;code&gt;./vendor/modules.txt&lt;/code&gt; up-to-date.
That &lt;code&gt;go mod vendor&lt;/code&gt; only pulls in files that are referenced by your current project.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://go.dev/ref/mod#vendoring"&gt;https://go.dev/ref/mod#vendoring&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/08/</guid><description>&lt;p&gt;That OpenTelemetry HTTP reciever endpoints tend to have port 4318&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/10/</guid><description>&lt;p&gt;That you can add &lt;code&gt;#![warn(missing_docs)]&lt;/code&gt; at the top of a &lt;code&gt;lib.rs&lt;/code&gt; file to lint for undocumented public methods.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/13/</guid><description>&lt;p&gt;Common Platform Enumeration, a syntax for identifying &amp;ldquo;IT stuff&amp;rdquo;:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;cpe
:&amp;lt;cpe_version&amp;gt;
:&amp;lt;part&amp;gt;
:&amp;lt;vendor&amp;gt;
:&amp;lt;product&amp;gt;
:&amp;lt;version&amp;gt;
:&amp;lt;update&amp;gt;
:&amp;lt;edition&amp;gt;
:&amp;lt;language&amp;gt;
:&amp;lt;sw_edition&amp;gt;
:&amp;lt;target_sw&amp;gt;
:&amp;lt;target_hw&amp;gt;
:&amp;lt;other&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notably, &lt;code&gt;part&lt;/code&gt; can only be &lt;code&gt;a|h|o&lt;/code&gt; = &lt;code&gt;app | hardware | OS&lt;/code&gt;, not &amp;ldquo;documentation&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://en.wikipedia.org/wiki/Common_Platform_Enumeration"&gt;https://en.wikipedia.org/wiki/Common_Platform_Enumeration&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/18/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Alerts are an extension of Markdown used to emphasize critical information.
On GitHub, they are displayed with distinctive colors and icons to indicate the importance of the content.&lt;/p&gt;
&lt;p&gt;An example of all five types:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-md" data-lang="md"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!NOTE]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ge"&gt;&lt;/span&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Highlights information that users should take into account, even when skimming.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ge"&gt;&lt;/span&gt;&lt;span class="k"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!TIP]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ge"&gt;&lt;/span&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Optional information to help a user be more successful.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]&lt;br&gt;
Crucial information necessary for users to succeed.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/21/</guid><description>&lt;p&gt;that &lt;code&gt;depends_on: [ service ]&lt;/code&gt; waits for &lt;code&gt;service&lt;/code&gt; to be &lt;strong&gt;started&lt;/strong&gt;, not for &lt;code&gt;service&lt;/code&gt; to be healthy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On startup, Compose does not wait until a container is &amp;ldquo;ready&amp;rdquo;, only until it&amp;rsquo;s running.&lt;/p&gt;
&lt;p&gt;The solution for detecting the ready state of a service is to use the condition attribute with one of the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;service_started&lt;/li&gt;
&lt;li&gt;service_healthy. This specifies that a dependency is expected to be “healthy”, which is defined with healthcheck, before starting a dependent service.&lt;/li&gt;
&lt;li&gt;service_completed_successfully. This specifies that a dependency is expected to run to successful completion before starting a dependent service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://docs.docker.com/compose/startup-order/"&gt;https://docs.docker.com/compose/startup-order/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/25/</guid><description>&lt;p&gt;The authoritative list of &lt;!-- raw HTML omitted --&gt;TLD&lt;!-- raw HTML omitted --&gt;s can be found at &lt;a href="https://data.iana.org/TLD/tlds-alpha-by-domain.txt"&gt;https://data.iana.org/TLD/tlds-alpha-by-domain.txt&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/26/</guid><description>&lt;p&gt;That you can specify an alternate &lt;code&gt;.terraformrc&lt;/code&gt; file using the environment variable &lt;code&gt;TF_CLI_CONFIG_FILE=$ABSOLUTE_PATH&lt;/code&gt;.
This can help with local provider development.
See &lt;a href="https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file"&gt;https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/03/</guid><description>&lt;p&gt;That BuildKit supports the using OpenTelemetry to trace builds with context from the &lt;code&gt;$TRACEPARENT&lt;/code&gt; and &lt;code&gt;$TRACESTATE&lt;/code&gt; environment variables (directly equivalent to their w3c header counterparts): &lt;a href="https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41"&gt;https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/07/</guid><description>&lt;p&gt;That any function named &lt;code&gt;func init(){ ... }&lt;/code&gt; runs on load of a module.
See &lt;a href="https://go.dev/ref/spec#Package_initialization"&gt;https://go.dev/ref/spec#Package_initialization&lt;/a&gt;.
See also &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-init-in-go"&gt;https://www.digitalocean.com/community/tutorials/understanding-init-in-go&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/08/</guid><description>&lt;p&gt;That &lt;code&gt;select&lt;/code&gt; can only be used to race communications operations (e.g. &lt;code&gt;&amp;lt;- myChan&lt;/code&gt;).
See &lt;a href="https://go.dev/ref/spec#Select_statements"&gt;https://go.dev/ref/spec#Select_statements&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/13/</guid><description>&lt;p&gt;That you can write&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;: &lt;span class="kt"&gt;usize&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;u8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;todo!&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to specialize a function for different array sizes, etc.
You can use the following types in const generics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;u8, u16, u32, u64, u128, usize&lt;/li&gt;
&lt;li&gt;i8, i16, i32, i64, i128, isize&lt;/li&gt;
&lt;li&gt;char&lt;/li&gt;
&lt;li&gt;bool&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://doc.rust-lang.org/reference/items/generics.html#const-generics"&gt;https://doc.rust-lang.org/reference/items/generics.html#const-generics&lt;/a&gt;
See also &lt;a href="https://blog.cocl2.com/posts/const-currying-rs/"&gt;https://blog.cocl2.com/posts/const-currying-rs/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/17/</guid><description>&lt;p&gt;That &lt;code&gt;shasum(1)&lt;/code&gt; is implemented in perl: &lt;a href="https://linux.die.net/man/1/shasum"&gt;https://linux.die.net/man/1/shasum&lt;/a&gt;, though
&lt;code&gt;shaXXXsum&lt;/code&gt; et al. seem to be implemented in C: &lt;a href="https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103"&gt;https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/18/</guid><description>&lt;p&gt;That &amp;ldquo;SASL&amp;rdquo; stands for &amp;ldquo;Simple Authentication and Security Layer&amp;rdquo;, which may/not be a misnomer: it&amp;rsquo;s a set of challenges and responses that can be embedded within a protocol.
Notably, one challenge is &amp;ldquo;OAUTHBEARER&amp;rdquo;, a standard Oauth 2.0 bearer token challenge.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer"&gt;https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer&lt;/a&gt;
See &lt;a href="https://www.rfc-editor.org/rfc/rfc4422"&gt;https://www.rfc-editor.org/rfc/rfc4422&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/20/</guid><description>&lt;p&gt;That git will place a file with the (absolute?) path to the actual git dir
if initialized with &lt;a href="https://git-scm.com/docs/git-init#Documentation/git-init.txt---separate-git-dirltgit-dirgt"&gt;&lt;code&gt;git init --separate-git-dir&lt;/code&gt;&lt;/a&gt;.
This is intended as an FS-agnostic symlink.&lt;/p&gt;
&lt;p&gt;The lesson here is to never assume &lt;code&gt;repo/.git&lt;/code&gt; exists and is a directory; use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git rev-parse --absolute-git-dir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-rev-parse#Documentation/git-rev-parse.txt---absolute-git-dir"&gt;docs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/22/</guid><description>&lt;p&gt;That Go has &lt;a href="https://go.dev/ref/spec#Label_scopes"&gt;labels&lt;/a&gt; and can &lt;a href="https://go.dev/ref/spec#Goto_statements"&gt;&lt;code&gt;goto label&lt;/code&gt;&lt;/a&gt;.
I&amp;rsquo;m not entirely sure what the usefulness of these is outside of &lt;code&gt;switch&lt;/code&gt; statements, but it&amp;rsquo;s still cool!&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/27/</guid><description>&lt;p&gt;That you can add a &lt;code&gt;[workspace.dependencies]&lt;/code&gt; table in your top-level &lt;code&gt;Cargo.toml&lt;/code&gt; specifying paths to internal crates:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# ${PROJECT_DIR}/Cargo.toml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;workspace&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;members&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;path/to/my_crate&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;workspace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;my_crate&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;path/to/my_crate&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# ${PROJECT_DIR}/path/to/other_crate/Cargo.toml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;my_crate&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;workspace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table"&gt;https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table&lt;/a&gt;.
See also &lt;a href="https://doc.rust-lang.org/cargo/reference/workspaces.html"&gt;https://doc.rust-lang.org/cargo/reference/workspaces.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;workspace = true&lt;/code&gt; can also help share external dependencies within multiple internal crates; see &lt;a href="https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace"&gt;https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, that u32 and u64 don&amp;rsquo;t implement &lt;code&gt;Into&amp;lt;usize&amp;gt;&lt;/code&gt;! I guess rust supports 16-bit pointer sizes.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/03/</guid><description>&lt;p&gt;That zsh lazily+automatically loads scripts found in directories in &lt;code&gt;$FPATH&lt;/code&gt;: &lt;a href="https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/"&gt;https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/05/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/04/</guid><description>&lt;p&gt;That a &lt;code&gt;go.work&lt;/code&gt; file can point to local &amp;ldquo;main modules&amp;rdquo; used for minimum-version selection.
&lt;code&gt;go&lt;/code&gt; will maintain a separate &lt;code&gt;go.work.sum&lt;/code&gt; file with the checksums of the workspace&amp;rsquo;s dependencies.
&lt;code&gt;go work {init,use,edit}&lt;/code&gt; manages the work-files.
&lt;code&gt;$GOWORK&lt;/code&gt; pointing to a file named like &lt;code&gt;*.work&lt;/code&gt; can switch between multiple workspace files.
See &lt;a href="https://go.dev/ref/mod#workspaces;"&gt;https://go.dev/ref/mod#workspaces;&lt;/a&gt; the syntax of &lt;code&gt;*.work&lt;/code&gt; files is roughly equivalent to the syntax in &lt;code&gt;go.mod&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That none of the following options ensure unused debug info is not included in rust wasm output:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/12/</guid><description>&lt;p&gt;That hosting websites in S3 &lt;em&gt;will&lt;/em&gt; redirect &lt;code&gt;/&lt;/code&gt; to &lt;code&gt;/index.html&lt;/code&gt; if you configure &lt;code&gt;index.html&lt;/code&gt; as in index document: &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html"&gt;https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/13/</guid><description>&lt;p&gt;That MAC can stand for &amp;ldquo;Message Authentication Code&amp;rdquo; in a security context.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/17/</guid><description>&lt;p&gt;That you can use the &lt;code&gt;.gitmodules&lt;/code&gt; document in the parent repo to configure a
submodule to track a branch with the same name as the parent repo&amp;rsquo;s current branch:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;submodule.&lt;!-- raw HTML omitted --&gt;.branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[&amp;hellip;] A special value of &lt;code&gt;.&lt;/code&gt; is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch"&gt;https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/23/</guid><description>&lt;p&gt;That a cargo package can have only one library: see &lt;a href="https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library"&gt;https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/07/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/07/05/</guid><description>&lt;p&gt;That Python mangles class attributes named like &lt;code&gt;__name&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python mangles these names with the class name: if class &lt;code&gt;Foo&lt;/code&gt; has an attribute named &lt;code&gt;__a&lt;/code&gt;, it cannot be accessed by &lt;code&gt;Foo.__a&lt;/code&gt;.
(An insistent user could still gain access by calling &lt;code&gt;Foo._Foo__a&lt;/code&gt;.)
Generally, double leading underscores should be used only to avoid name conflicts with attributes in classes designed to be subclassed.&lt;/p&gt;
&lt;p&gt;Note: there is some controversy about the use of &lt;code&gt;__names&lt;/code&gt; (see below).&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/04/</guid><description>&lt;p&gt;That if you specify an &lt;code&gt;Entry-points&lt;/code&gt; key in python &lt;code&gt;.dist-info/METADATA&lt;/code&gt;, python will create command-line wrappers for your scripts.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://packaging.python.org/en/latest/specifications/entry-points/"&gt;https://packaging.python.org/en/latest/specifications/entry-points/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/11/</guid><description>&lt;p&gt;That virtualenvs may contain two files that alter the &lt;code&gt;sys.path&lt;/code&gt; outside of the &lt;code&gt;$PYTHONPATH&lt;/code&gt; variable:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;.venv/pyvenv.cfg&lt;/code&gt; (see &lt;a href="https://docs.python.org/3/library/sys_path_init.html#virtual-environments"&gt;https://docs.python.org/3/library/sys_path_init.html#virtual-environments&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.venv/python3.*/site-packages/*.pth&lt;/code&gt; (see &lt;a href="https://docs.python.org/3/library/sys_path_init.html#pth-files"&gt;https://docs.python.org/3/library/sys_path_init.html#pth-files&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/12/</guid><description>&lt;p&gt;That python dicts have an upsert method: &lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault"&gt;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/19/</guid><description>&lt;p&gt;That &lt;code&gt;go build ./path/to/main.go&lt;/code&gt; disregards other files in the same directory/package.
&lt;code&gt;go build ./path/to&lt;/code&gt; works fine.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/23/</guid><description>&lt;p&gt;This is embarrassingly late, but TIL that BOEM stands for the Bureau of Ocean Energy Management (&lt;a href="https://www.boem.gov/"&gt;https://www.boem.gov/&lt;/a&gt;)&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/09/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/21/</guid><description>&lt;p&gt;That &lt;code&gt;tsc --generateTrace&lt;/code&gt; can generate browser-devtools-compatible data for flamegraph analysis.
See &lt;a href="https://github.com/microsoft/TypeScript/wiki/Performance-Tracing"&gt;https://github.com/microsoft/TypeScript/wiki/Performance-Tracing&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/09/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/24/</guid><description>&lt;p&gt;That you an render code blocks in Go doc comments by indenting the lines of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// Add two numbers.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// this&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// is a&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// code block&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://tip.golang.org/doc/comment#code"&gt;https://tip.golang.org/doc/comment#code&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/09/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/28/</guid><description>&lt;p&gt;That on windows, creating a virtualenv:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;symlinks executables into &lt;code&gt;$VIRTUAL_ENV/Scripts&lt;/code&gt; rather than &lt;code&gt;$VIRTUAL_ENV/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;only creates a &lt;code&gt;python.exe&lt;/code&gt; symlink, not a &lt;code&gt;python3.exe&lt;/code&gt; symlink.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See &lt;a href="https://docs.python.org/3/library/venv.html#creating-virtual-environments"&gt;https://docs.python.org/3/library/venv.html#creating-virtual-environments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Less exciting, but I also (re-)learned that setting a &lt;code&gt;PYTHONPATH&lt;/code&gt; on windows requires using &lt;code&gt;;&lt;/code&gt; rather than &lt;code&gt;:&lt;/code&gt; as the path-separator.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/14/</guid><description>&lt;p&gt;That &lt;a href="https://without.boats"&gt;https://without.boats&lt;/a&gt; is named after a Michel Foucault quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“In civilizations without boats, dreams dry up, espionage takes the place of adventure and the police take the place of pirates.”&lt;/p&gt;
&lt;p&gt;&amp;ndash; Michel Foucault
&amp;ndash; &lt;a href="https://www.goodreads.com/quotes/1082065-in-civilizations-without-boats-dreams-dry-up-espionage-takes-the"&gt;https://www.goodreads.com/quotes/1082065-in-civilizations-without-boats-dreams-dry-up-espionage-takes-the&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/15/</guid><description>&lt;p&gt;What an anycast IP is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anycast is a network addressing and routing methodology in which a single IP address is shared by devices (generally servers) in multiple locations.
Routers direct packets addressed to this destination to the location nearest the sender, using their normal decision-making algorithms, typically the lowest number of BGP network hops.
Anycast routing is widely used by content delivery networks such as web and name servers, to bring their content closer to end users.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/16/</guid><description>&lt;blockquote&gt;
&lt;p&gt;which -a python # shows all matches on $PATH
type python # checks if a builtin/alias/fn/exe&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://wizardzines.com/comics/path-tips/"&gt;https://wizardzines.com/comics/path-tips/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/23/</guid><description>&lt;p&gt;That&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An empty go.mod in a directory will cause that directory and all of its subdirectories to be excluded from the top-level Go module.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://go.dev/wiki/Modules#can-an-additional-gomod-exclude-unnecessary-content-do-modules-have-the-equivalent-of-a-gitignore-file"&gt;https://go.dev/wiki/Modules#can-an-additional-gomod-exclude-unnecessary-content-do-modules-have-the-equivalent-of-a-gitignore-file&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/11/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/11/13/</guid><description>&lt;p&gt;That OpenAPI 3.x.x definitions can also specify XML encodings: see &lt;a href="https://spec.openapis.org/oas/v3.0.0#xml-object"&gt;https://spec.openapis.org/oas/v3.0.0#xml-object&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/11/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/11/24/</guid><description>&lt;p&gt;That the GPU I have in the Ubuntu workstation in my office isn&amp;rsquo;t compatible with ROCm, AMD&amp;rsquo;s GPU compatibility layer, or Vulkan.
I was trying to run the binary for &lt;a href="https://tabby.tabbyml.com/blog/2024/01/24/running-tabby-locally-with-rocm/"&gt;tabby&lt;/a&gt; locally.
First, I looked up my graphics card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;;&lt;/span&gt; lshw -c video
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# *-display&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# description: VGA compatible controller&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# product: Turks PRO [Radeon HD 7570]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# vendor: Advanced Micro Devices, Inc. [AMD/ATI]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# physical id: ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bus info: pci@0000:01:00.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# logical name: /dev/fb0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# version: 00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# width: 64 bits&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# clock: 33MHz&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# capabilities: vga_controller bus_master cap_list rom fb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# configuration: depth=32 driver=radeon latency=0 resolution=2048,1080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resources: irq:42 memory:e0000000-efffffff memory:f0020000-f003ffff ioport:e000(size=256) memory:c0000-dffff&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I followed a few false starts, during which I learned:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/11/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/11/25/</guid><description>&lt;p&gt;That (1) go tries to bake VCS info into go binaries and (2) go still doesn&amp;rsquo;t understand git worktrees :/ and (3) the easiest way to get go builds to work in a git worktree or bare git repo is to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;go env -w &lt;span class="nv"&gt;GOFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-buildvcs&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;m not sure how global these flags are.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/12/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/12/09/</guid><description>&lt;p&gt;That the &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt; elements can be styled to create nice preformatted diffs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins"&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/12/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/12/28/</guid><description>&lt;p&gt;That all the grief with css borders shifting the layout can be avoided by using &lt;code&gt;outline&lt;/code&gt; instead:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Outline is a line outside of the element&amp;rsquo;s border. Unlike other areas of the box, outlines don&amp;rsquo;t take up space, so they don&amp;rsquo;t affect the layout of the document in any way.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/outline#description"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/outline#description&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/06/</guid><description>&lt;p&gt;That you can configure git to use an alternative git directory using &lt;code&gt;git config core.hooksPath&lt;/code&gt; as of &lt;a href="https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.9.0.txt#:~:text=new%20configuration%20variable-,core.hookspath,-allows%20customizing%0A%20%20%20where"&gt;git 2.9&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/07/</guid><description>&lt;p&gt;That a 0-hour contract is a UK labor setup where the employer doesn&amp;rsquo;t guaruntee any work hours to the employee, but binds them with a contract. &lt;a href="https://en.wikipedia.org/wiki/Zero-hour_contract"&gt;https://en.wikipedia.org/wiki/Zero-hour_contract&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That you can configure git to append a &lt;code&gt;Signed-off-by: ...&lt;/code&gt; trailer using &lt;a href="https://git-scm.com/docs/git-config#Documentation/git-config.txt-formatsignOff"&gt;&lt;code&gt;git config format.signOff true&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That you can configure git to use your SSH key to sign commits and tags with&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-ssh" data-lang="ssh"&gt;git config gpg.format ssh
git config commit.gpgSign true
git config tag.gpgSign true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/08/</guid><description>&lt;p&gt;That zsh completions in &lt;code&gt;/usr/share/zsh/vendor-completions&lt;/code&gt; must start with a &lt;code&gt;_&lt;/code&gt; in order to work, e.g. &lt;code&gt;/usr/share/zsh/vendor-completions/_rg&lt;/code&gt;. Not sure why, though.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;While you can use the same SSH key for both authentication and signing, NIST recommends you shouldn&amp;rsquo;t: &lt;a href="https://gist.github.com/ChristopherA/3d6a2f39c4b623a1a287b3fb7e0aa05b"&gt;https://gist.github.com/ChristopherA/3d6a2f39c4b623a1a287b3fb7e0aa05b&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config commit.gpgSign &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config tag.gpgSign &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config gpg.format ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config user.signingKey &lt;span class="s1"&gt;&amp;#39;ssh-ed25519 AAAA...xyz&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/09/</guid><description>&lt;p&gt;Of the &lt;a href="https://github.com/ossf/security-insights-spec"&gt;&lt;code&gt;security-insights.yaml&lt;/code&gt;&lt;/a&gt; specification.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The Japanese term &lt;a href="https://en.wikipedia.org/wiki/Mojibake"&gt;&amp;ldquo;mojibake&amp;rdquo;&lt;/a&gt;, meaning &amp;ldquo;character transformation&amp;rdquo; or &amp;ldquo;the garbled text resulting from using the wrong character encoding&amp;rdquo;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/18/</guid><description>&lt;p&gt;About setting up a fingerprint sensor:&lt;/p&gt;
&lt;p&gt;List fingerprint reader (&lt;a href="https://knowledgebase.frame.work/en_us/updating-fingerprint-reader-firmware-on-linux-for-13th-gen-and-amd-ryzen-7040-series-laptops-HJrvxv_za"&gt;docs&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;GUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; fwupdmgr get-devices &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; grep -A &lt;span class="m"&gt;6&lt;/span&gt; -E &lt;span class="s2"&gt;&amp;#34;fingerprint&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; grep -i &lt;span class="s2"&gt;&amp;#34;GUID&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk -F &lt;span class="s1"&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;clear &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;fwupdmgr get-devices &lt;/span&gt;&lt;span class="nv"&gt;$GUID&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; fwupdmgr get-devices &lt;span class="nv"&gt;$GUID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# make sure the PAM fingerprint module is enabled in the pam TUI:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo pam-auth-update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://framework.kustomer.help/ubuntu-fingerprint-troubleshooting-r1_DA0TMn"&gt;https://framework.kustomer.help/ubuntu-fingerprint-troubleshooting-r1_DA0TMn&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;make sure fingerprint auth enabled for target user&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/22/</guid><description>&lt;p&gt;That HTTP response code 501 is the semantically-correct way to communicate that a server does not support some functionality: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/26/</guid><description>&lt;p&gt;That &lt;code&gt;String.split&lt;/code&gt; doesn&amp;rsquo;t need parentheses:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;&amp;#34;a b&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="sb"&gt;` `&lt;/span&gt; &lt;span class="c1"&gt;// [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/01/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/30/</guid><description>&lt;p&gt;That you can write golang examples that get run using &lt;code&gt;go test&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ExampleHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// Output: hello&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The naming convention to declare examples for the package, a function F, a type T and method M on type T are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ExampleF&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ExampleT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ExampleT_M&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ndash; &lt;a href="https://pkg.go.dev/testing#hdr-Examples"&gt;https://pkg.go.dev/testing#hdr-Examples&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I feel like this might be able to be combined with &lt;a href="https://go.dev/doc/comment#:~:text=a%20code%20block%20is%20a%20span%20of%20indented%20or%20blank%20lines%20not%20starting%20with%20a%20bullet%20list%20marker%20or%20numbered%20list%20marker.%20it%20is%20rendered%20as%20preformatted%20text"&gt;doc comments&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/02/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/02/</guid><description>&lt;p&gt;That the w3c specifies media fragment identifiers:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It can be a media fragment in the form of &lt;code&gt;#t=...&lt;/code&gt;, which makes the video or audio start playing from that time.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/URI/Fragment"&gt;https://developer.mozilla.org/en-US/docs/Web/URI/Fragment&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;However, YouTube does not respect this.&lt;/p&gt;
&lt;p&gt;See also: &lt;a href="https://www.w3.org/TR/media-frags/"&gt;https://www.w3.org/TR/media-frags/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/02/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/07/</guid><description>&lt;p&gt;That to verify git SSH commit signatures locally, you need to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config gpg.ssh.allowedSignersFile &lt;span class="nv"&gt;$PATH_TO_ALLOWED_SIGNERS_FILE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The signers file will be in the form&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user@email.com namespace=&amp;#34;git&amp;#34; ssh-ed25519 AAA...jhq user@email.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once that&amp;rsquo;s set up. you can run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git log --show-signature
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To verify signatures locally. Alternately, you can run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git log --format&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;signed:%G? fingerprint:%GF key:%GK&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://git-scm.com/docs/git-log#Documentation/git-log.txt-emGGem"&gt;https://git-scm.com/docs/git-log#Documentation/git-log.txt-emGGem&lt;/a&gt; for more signature-related log format directives.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/02/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/12/</guid><description>&lt;p&gt;That &lt;code&gt;defer&lt;/code&gt; statements are block-scoped:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;defer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;end func&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// runs at end of function&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;start func&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;defer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;end block&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// runs at end of block&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;start block&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Output:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// start func&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// statt block&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// end block&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// end func&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see &lt;a href="https://go.dev/play/p/2OYL2-g1iUE"&gt;https://go.dev/play/p/2OYL2-g1iUE&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/14/</guid><description>&lt;p&gt;That VSCode has a &amp;ldquo;profiles&amp;rdquo; mechanism that allows bulk management of settings: &lt;a href="https://code.visualstudio.com/docs/editor/profiles"&gt;https://code.visualstudio.com/docs/editor/profiles&lt;/a&gt;.
These will make a fine addition to my dotfiles!&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/02/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/19/</guid><description>&lt;p&gt;How to set build-time variables in &lt;code&gt;go&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;go build -ldflags &lt;span class="s2"&gt;&amp;#34;-X importpath.name=value&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://pkg.go.dev/cmd/link"&gt;https://pkg.go.dev/cmd/link&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/03/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/03/10/</guid><description>&lt;p&gt;Why &lt;code&gt;docker compose&lt;/code&gt; is called &amp;ldquo;compose&amp;rdquo;: you can pass many &lt;code&gt;compose.yaml&lt;/code&gt; files that get merged automatically.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;docker compose -f first.yaml -f second.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://docs.docker.com/compose/how-tos/multiple-compose-files/merge/"&gt;https://docs.docker.com/compose/how-tos/multiple-compose-files/merge/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/03/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/03/14/</guid><description>&lt;p&gt;That &lt;code&gt;prettier&lt;/code&gt; can wrap markdown lines: &lt;a href="https://prettier.io/docs/options#prose-wrap"&gt;https://prettier.io/docs/options#prose-wrap&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/04/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/04/03/</guid><description>&lt;p&gt;That some terminal emulators support a control sequence for sending notifications:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;\e]777;notify;%s;%s\e\\&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;title&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;body&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This seems to work in WezTerm (&lt;a href="https://wezterm.org/config/lua/config/notification_handling.html"&gt;https://wezterm.org/config/lua/config/notification_handling.html&lt;/a&gt;) and Ghostty, but not iterm2 or terminal.app.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/04/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/04/24/</guid><description>&lt;p&gt;That Guido von Rossum has a younger brother, Jus von Rossum, who&amp;rsquo;s an accomplished typeface designer.
I also learned that Jus von Rossum designed the font used by the famous &amp;ldquo;you wouldn&amp;rsquo;t steal a car&amp;rdquo; campaign: &lt;a href="https://bsky.app/profile/melissa.news/post/3ln7hx5rhcj2v"&gt;https://bsky.app/profile/melissa.news/post/3ln7hx5rhcj2v&lt;/a&gt;
And that the campaign itself used a pirated copy of that font: &lt;a href="https://fedi.rib.gay/notes/a6xqityngfubsz0f"&gt;https://fedi.rib.gay/notes/a6xqityngfubsz0f&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/04/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/04/25/</guid><description>&lt;p&gt;Apparently, the blessed way to do prettier-style line-wrapping in Go is &lt;code&gt;golines&lt;/code&gt;:
&lt;a href="https://github.com/golang/vscode-go/issues/847#issuecomment-816992225"&gt;https://github.com/golang/vscode-go/issues/847#issuecomment-816992225&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/05/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/05/01/</guid><description>&lt;p&gt;That wrapper types preserve type information in switch statements:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;asdf&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;cool&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;uh&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://go.dev/play/p/VkDckf3vp_O"&gt;https://go.dev/play/p/VkDckf3vp_O&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/05/09/</guid><description>&lt;p&gt;Clicking &amp;ldquo;Debug Test&amp;rdquo; in VSCode doesn&amp;rsquo;t use the configuration in &lt;code&gt;launch.json&lt;/code&gt;: &lt;a href="https://github.com/golang/vscode-go/wiki/debugging#:~:text=the%20%22debug%20test%22%20codelens%20and%20the%20test%20ui%20do%20not%20use%20the%20launch.json%20configuration"&gt;https://github.com/golang/vscode-go/wiki/debugging#:~:text=the%20%22debug%20test%22%20codelens%20and%20the%20test%20ui%20do%20not%20use%20the%20launch.json%20configuration&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/05/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/05/13/</guid><description>&lt;p&gt;That &lt;code&gt;$?&lt;/code&gt; automatically includes the boolean success/failure of the previous command and &lt;code&gt;&amp;gt;&lt;/code&gt; redirects stdout to a file &lt;strong&gt;AS UTF16&lt;/strong&gt;.
&lt;code&gt;&amp;quot;unicode: ...&amp;quot; | Out-File -FilePath &amp;quot;...&amp;quot; -Encoding UTF8&lt;/code&gt; correctly handles character encoding.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/06/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/06/14/</guid><description>&lt;p&gt;That mobile OS&amp;rsquo;s often do not define a &lt;code&gt;$HOME&lt;/code&gt; variable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// On some geese the home directory is not always defined.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GOOS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;android&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;/sdcard&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;ios&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Side note: hats off to the programmer that called the plural of &lt;code&gt;GOOS&lt;/code&gt;es &amp;ldquo;geese&amp;rdquo;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/06/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/06/19/</guid><description>&lt;p&gt;That go&amp;rsquo;s &lt;code&gt;runtime/debug&lt;/code&gt; package keeps track of the version of all modules:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#34;runtime/debug&amp;#34;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadBuildInfo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;info: %#v&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// info: &amp;amp;debug.BuildInfo{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// GoVersion: &amp;#34;go1.24.4&amp;#34;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Path: &amp;#34;play&amp;#34;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Main:debug.Module{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Path:&amp;#34;play&amp;#34;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Version:&amp;#34;(devel)&amp;#34;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Sum:&amp;#34;&amp;#34;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Replace:(*debug.Module)(nil),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// },&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Deps:[]*debug.Module(nil),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Settings:[]debug.BuildSetting{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;-buildmode&amp;#34;, Value:&amp;#34;exe&amp;#34;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;-compiler&amp;#34;, Value:&amp;#34;gc&amp;#34;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;-tags&amp;#34;, Value:&amp;#34;faketime&amp;#34;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;CGO_ENABLED&amp;#34;, Value:&amp;#34;0&amp;#34;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;GOARCH&amp;#34;, Value:&amp;#34;amd64&amp;#34;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;GOOS&amp;#34;, Value:&amp;#34;linux&amp;#34;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// debug.BuildSetting{Key:&amp;#34;GOAMD64&amp;#34;, Value:&amp;#34;v1&amp;#34;}}}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://go.dev/play/p/RPP3ld4kPmD"&gt;https://go.dev/play/p/RPP3ld4kPmD&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/07/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/07/07/</guid><description>&lt;p&gt;About python&amp;rsquo;s &lt;code&gt;__debug__&lt;/code&gt; constant: &lt;a href="https://docs.python.org/3/library/constants.html#debug"&gt;https://docs.python.org/3/library/constants.html#debug&lt;/a&gt;__&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s true unless python is run in &lt;code&gt;-O&lt;/code&gt; mode, stripping out assertions and other unoptimized code.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/08/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/08/08/</guid><description>&lt;p&gt;That node.js bundles a jest-like test runner since 1.20: &lt;a href="https://nodejs.org/api/test.html#test-runner"&gt;https://nodejs.org/api/test.html#test-runner&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;node:test&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;behavior&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;case&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;node --test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;H/T &lt;a href="https://kashw1n.com/blog/nodejs-2025/#3-built-in-testing-professional-testing-without-external-dependencies"&gt;https://kashw1n.com/blog/nodejs-2025/#3-built-in-testing-professional-testing-without-external-dependencies&lt;/a&gt; for pointing this out.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/08/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/08/14/</guid><description>&lt;p&gt;That there&amp;rsquo;s a nondescsript &amp;ldquo;Factory&amp;rdquo; timezone for device setup: &lt;a href="https://data.iana.org/time-zones/tzdb-2025a/factory"&gt;https://data.iana.org/time-zones/tzdb-2025a/factory&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/09/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/09/24/</guid><description>&lt;p&gt;That google&amp;rsquo;s Go style guide prefers all-same-case acronyms: &lt;a href="https://google.github.io/styleguide/go/decisions.html#initialisms"&gt;https://google.github.io/styleguide/go/decisions.html#initialisms&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/10/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/10/03/</guid><description>&lt;p&gt;That JSON schema can specify sets using an array type with &lt;code&gt;&amp;quot;uniqueItems&amp;quot;: true&lt;/code&gt;: &lt;a href="https://tour.json-schema.org/content/04-Arrays/02-Unique-Items"&gt;https://tour.json-schema.org/content/04-Arrays/02-Unique-Items&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2025/10/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/10/12/</guid><description>&lt;p&gt;That &lt;code&gt;git&lt;/code&gt; ships a feature that remembers how you resolve conflicts, &lt;code&gt;git-rerere&lt;/code&gt;: &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Rerere"&gt;https://git-scm.com/book/en/v2/Git-Tools-Rerere&lt;/a&gt;.&lt;/p&gt;</description></item></channel></rss>