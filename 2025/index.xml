<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2025s on Today I Learned</title><link>https://skalt.github.io/til/2025/</link><description>Recent content in 2025s on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/2025/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2025/01/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/06/</guid><description>&lt;p>That you can configure git to use an alternative git directory using &lt;code>git config core.hooksPath&lt;/code> as of &lt;a href="https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.9.0.txt#:~:text=new%20configuration%20variable-,core.hookspath,-allows%20customizing%0A%20%20%20where">git 2.9&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/01/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/07/</guid><description>&lt;p>That a 0-hour contract is a UK labor setup where the employer doesn&amp;rsquo;t guaruntee any work hours to the employee, but binds them with a contract. &lt;a href="https://en.wikipedia.org/wiki/Zero-hour_contract">https://en.wikipedia.org/wiki/Zero-hour_contract&lt;/a>&lt;/p>
&lt;hr>
&lt;p>That you can configure git to append a &lt;code>Signed-off-by: ...&lt;/code> trailer using &lt;a href="https://git-scm.com/docs/git-config#Documentation/git-config.txt-formatsignOff">&lt;code>git config format.signOff true&lt;/code>&lt;/a>.&lt;/p>
&lt;p>That you can configure git to use your SSH key to sign commits and tags with&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-ssh" data-lang="ssh">git config gpg.format ssh
git config commit.gpgSign true
git config tag.gpgSign true
&lt;/code>&lt;/pre>&lt;p>See&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/01/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/08/</guid><description>&lt;p>That zsh completions in &lt;code>/usr/share/zsh/vendor-completions&lt;/code> must start with a &lt;code>_&lt;/code> in order to work, e.g. &lt;code>/usr/share/zsh/vendor-completions/_rg&lt;/code>. Not sure why, though.&lt;/p>
&lt;hr>
&lt;p>While you can use the same SSH key for both authentication and signing, NIST recommends you shouldn&amp;rsquo;t: &lt;a href="https://gist.github.com/ChristopherA/3d6a2f39c4b623a1a287b3fb7e0aa05b">https://gist.github.com/ChristopherA/3d6a2f39c4b623a1a287b3fb7e0aa05b&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git config commit.gpgSign &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config tag.gpgSign &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config gpg.format ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config user.signingKey &lt;span class="s1">&amp;#39;ssh-ed25519 AAAA...xyz&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2025/01/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/09/</guid><description>&lt;p>Of the &lt;a href="https://github.com/ossf/security-insights-spec">&lt;code>security-insights.yaml&lt;/code>&lt;/a> specification.&lt;/p>
&lt;hr>
&lt;p>The Japanese term &lt;a href="https://en.wikipedia.org/wiki/Mojibake">&amp;ldquo;mojibake&amp;rdquo;&lt;/a>, meaning &amp;ldquo;character transformation&amp;rdquo; or &amp;ldquo;the garbled text resulting from using the wrong character encoding&amp;rdquo;.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/01/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/18/</guid><description>&lt;p>About setting up a fingerprint sensor:&lt;/p>
&lt;p>List fingerprint reader (&lt;a href="https://knowledgebase.frame.work/en_us/updating-fingerprint-reader-firmware-on-linux-for-13th-gen-and-amd-ryzen-7040-series-laptops-HJrvxv_za">docs&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GUID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fwupdmgr get-devices &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grep -A &lt;span class="m">6&lt;/span> -E &lt;span class="s2">&amp;#34;fingerprint&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grep -i &lt;span class="s2">&amp;#34;GUID&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> awk -F &lt;span class="s1">&amp;#39;: &amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clear &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;fwupdmgr get-devices &lt;/span>&lt;span class="nv">$GUID&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> fwupdmgr get-devices &lt;span class="nv">$GUID&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># make sure the PAM fingerprint module is enabled in the pam TUI:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo pam-auth-update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also useful:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://framework.kustomer.help/ubuntu-fingerprint-troubleshooting-r1_DA0TMn">https://framework.kustomer.help/ubuntu-fingerprint-troubleshooting-r1_DA0TMn&lt;/a>
&lt;ul>
&lt;li>make sure fingerprint auth enabled for target user&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title/><link>https://skalt.github.io/til/2025/01/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/22/</guid><description>&lt;p>That HTTP response code 501 is the semantically-correct way to communicate that a server does not support some functionality: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501">https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/01/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/26/</guid><description>&lt;p>That &lt;code>String.split&lt;/code> doesn&amp;rsquo;t need parentheses:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;a b&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="sb">` `&lt;/span> &lt;span class="c1">// [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/01/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/30/</guid><description>&lt;p>That you can write golang examples that get run using &lt;code>go test&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">ExampleHello&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Output: hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The naming convention to declare examples for the package, a function F, a type T and method M on type T are:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Example&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">ExampleF&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">ExampleT&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">ExampleT_M&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;ndash; &lt;a href="https://pkg.go.dev/testing#hdr-Examples">https://pkg.go.dev/testing#hdr-Examples&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>I feel like this might be able to be combined with &lt;a href="https://go.dev/doc/comment#:~:text=a%20code%20block%20is%20a%20span%20of%20indented%20or%20blank%20lines%20not%20starting%20with%20a%20bullet%20list%20marker%20or%20numbered%20list%20marker.%20it%20is%20rendered%20as%20preformatted%20text">doc comments&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/02/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/02/</guid><description>&lt;p>That the w3c specifies media fragment identifiers:&lt;/p>
&lt;blockquote>
&lt;p>It can be a media fragment in the form of &lt;code>#t=...&lt;/code>, which makes the video or audio start playing from that time.&lt;/p>
&lt;p>&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/URI/Fragment">https://developer.mozilla.org/en-US/docs/Web/URI/Fragment&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>However, YouTube does not respect this.&lt;/p>
&lt;p>See also: &lt;a href="https://www.w3.org/TR/media-frags/">https://www.w3.org/TR/media-frags/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/02/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/07/</guid><description>&lt;p>That to verify git SSH commit signatures locally, you need to&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git config gpg.ssh.allowedSignersFile &lt;span class="nv">$PATH_TO_ALLOWED_SIGNERS_FILE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The signers file will be in the form&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="cl">user@email.com namespace=&amp;#34;git&amp;#34; ssh-ed25519 AAA...jhq user@email.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once that&amp;rsquo;s set up. you can run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git log --show-signature
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To verify signatures locally. Alternately, you can run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git log --format&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;signed:%G? fingerprint:%GF key:%GK&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://git-scm.com/docs/git-log#Documentation/git-log.txt-emGGem">https://git-scm.com/docs/git-log#Documentation/git-log.txt-emGGem&lt;/a> for more signature-related log format directives.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/02/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/12/</guid><description>&lt;p>That &lt;code>defer&lt;/code> statements are block-scoped:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;end func&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// runs at end of function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;start func&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;end block&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// runs at end of block&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;start block&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// start func&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// statt block&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// end block&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// end func&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2025/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/14/</guid><description>&lt;p>That VSCode has a &amp;ldquo;profiles&amp;rdquo; mechanism that allows bulk management of settings: &lt;a href="https://code.visualstudio.com/docs/editor/profiles">https://code.visualstudio.com/docs/editor/profiles&lt;/a>.
These will make a fine addition to my dotfiles!&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/02/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/02/19/</guid><description>&lt;p>How to set build-time variables in &lt;code>go&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">go build -ldflags &lt;span class="s2">&amp;#34;-X importpath.name=value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://pkg.go.dev/cmd/link">https://pkg.go.dev/cmd/link&lt;/a>&lt;/p></description></item></channel></rss>