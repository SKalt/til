[{"content":"TIL that terminals attached to interactive docker containers don\u0026rsquo;t necesarily respect ANSI escape codes. I\u0026rsquo;m still not 100% sure what causes the terminal to respect ANSI escape codes or not, but test -t 1 didn\u0026rsquo;t seem to correctly discriminate.\n","permalink":"https://skalt.github.io/til/2021/07/12/","tags":[]},{"content":"That pickle.loads(pickle.dumps(obj)) is faster than copy.deepcopy(obj) Learned from Simon Willison\u0026rsquo;s twitter\n","permalink":"https://skalt.github.io/til/2021/07/13/","tags":["python"]},{"content":"that Cmd+D selects the next occurence of the currently-highlighted text in VS Code! Thanks to Mark Brewer for teaching me this!\n","permalink":"https://skalt.github.io/til/2021/07/14/","tags":["vscode"]},{"content":"about const enums in typescript, which get compiled to their values rather than getting represented as a mapping object. See https://www.typescriptlang.org/docs/handbook/enums.html#const-enums.\n","permalink":"https://skalt.github.io/til/2021/07/22/","tags":["typescript"]},{"content":"How to stream large responses using the Javascript Fetch API:\nconst response = await fetch(url); const reader = response.body.getReader(); while (true) { const { value, done } = await reader.read(); if (done) break; console.log(\u0026#39;Received\u0026#39;, value); } console.log(\u0026#39;Response fully received\u0026#39;); Also: the circumstances under which ~/.*profile files are run: only if you log in.\n","permalink":"https://skalt.github.io/til/2021/07/24/","tags":["js","javascript","typescript","fetch","shell"]},{"content":"You can create new google docs/spreadsheets/presentations, office365 docs/sheets/presentations, and github repos/gists/codespaces by accessing specific URLs in the browser:\nG Suite docs: https://doc.new, https://docs.new sheets: https://sheet.new, https://sheets.new slides: http://slide.new, http://slides.new Office 365 docs: https://word.new sheets: https://excel.new slides: https://ppt.new github https://repo.new https://gist.new https://codespace.new source: https://twitter.com/rothgar/status/1419339782258184192\n","permalink":"https://skalt.github.io/til/2021/07/25/","tags":["web","productivity"]},{"content":"That you can use git grep to search for a string in a git repo.\n","permalink":"https://skalt.github.io/til/2021/07/31/","tags":["shell","git"]},{"content":"that running python with the -O flag disables assert statements\n","permalink":"https://skalt.github.io/til/2021/08/05/","tags":["python"]},{"content":"about a new source of standard-ish python functionality: https://github.com/mahmoud/boltons\n","permalink":"https://skalt.github.io/til/2021/08/12/","tags":["python"]},{"content":"about go build constraints. Add\n//go:build (booleanExprUsingTagNames) to the top of the conditionally-included file. The boolean expression can be composed of tags (passed via go build -tag \u0026lt;tag\u0026gt;...) or expressions referencing the host or target os and arch.\n","permalink":"https://skalt.github.io/til/2021/09/05/","tags":["go"]},{"content":"about PATH_MAX: the part of the POSIX standard which determines the maximum number of bytes allowed in an absolute path. In Linux, PATH_MAX is 4096 [src], but it\u0026rsquo;s possible to construct longer paths if you don\u0026rsquo;t care about some (most) utilities that use the current working directory to fail due to buffer overflow.\nAlso, I learned that most filesystems restrict file names to 255 bytes.\n","permalink":"https://skalt.github.io/til/2021/09/06/","tags":["fs","linux","posix"]},{"content":"That you can, technically, write inline comments in bash. Specifically, you have to put the comments in a subshell:\necho abc `#put your comment here` \\ def `#another chance for a comment` \\ xyz etc ^ from https://stackoverflow.com/a/23872003/6571327\n","permalink":"https://skalt.github.io/til/2021/09/15/","tags":["bash","shell"]},{"content":"That the IANA suggests 49152–65535 (215 + 214 to 216 − 1) for dynamic or private ports. source: https://en.wikipedia.org/wiki/Ephemeral_port#Range\n","permalink":"https://skalt.github.io/til/2021/09/21/","tags":["networking","linux"]},{"content":"that you can find the version of debian used by your current ubuntu version by running cat /etc/debian_version. Even better, you can source /etc/os-release and get $ID and $VERSION_ID variables. Here\u0026rsquo;s what\u0026rsquo;s in the os-release for Ubuntu 20.04:\nNAME=\u0026#34;Ubuntu\u0026#34; VERSION=\u0026#34;20.04.3 LTS (Focal Fossa)\u0026#34; ID=ubuntu ID_LIKE=debian PRETTY_NAME=\u0026#34;Ubuntu 20.04.3 LTS\u0026#34; VERSION_ID=\u0026#34;20.04\u0026#34; HOME_URL=\u0026#34;https://www.ubuntu.com/\u0026#34; SUPPORT_URL=\u0026#34;https://help.ubuntu.com/\u0026#34; BUG_REPORT_URL=\u0026#34;https://bugs.launchpad.net/ubuntu/\u0026#34; PRIVACY_POLICY_URL=\u0026#34;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\u0026#34; VERSION_CODENAME=focal UBUNTU_CODENAME=focal Sources: https://askubuntu.com/a/445496/505362 and the source code at https://dot.net/v1/dotnet-installer.sh\n","permalink":"https://skalt.github.io/til/2021/09/24/","tags":["ubuntu"]},{"content":"That there\u0026rsquo;s a postgres keyword DEALLOCATE to remove prepared statements from memory: https://www.postgresql.org/docs/current/sql-deallocate.html\n","permalink":"https://skalt.github.io/til/2021/10/01/","tags":["postgres"]},{"content":"that you can hold shift+alt (linux) or shift+opt (mac) and click to select box of rows and columns in VS Code. See https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_column-box-selection\n","permalink":"https://skalt.github.io/til/2021/10/02/","tags":["vscode"]},{"content":"that different versions of sort(1) have different sorting presets. For example, on ubuntu 20.04 vs debian buster, sort will swap the order of how it sorts _s. These differences can be resolved by passing --unique --dictionary-order --stable.\nBonus: -h/--human-numeric-sort can sort SI suffixes.\n","permalink":"https://skalt.github.io/til/2021/10/04/","tags":["posix","shell","gnu","bash"]},{"content":"That GNU awk has a networking stack: https://www.gnu.org/software/gawk/manual/gawkinet/gawkinet.html\n","permalink":"https://skalt.github.io/til/2021/10/07/","tags":["awk"]},{"content":"That cgo will automagically ship a C.sizeof_YourStruct for every C struct that you can reference as C.YourStruct. This is useful for pointer arithmetic via unsafe.Pointer(uintptr(something) + uintptr(intIndex * C.sizeof_YourStruct)).\n","permalink":"https://skalt.github.io/til/2021/10/09/","tags":["go","cgo","unsafe go"]},{"content":"about the shell until keyword, which is equivalent to while !.\n","permalink":"https://skalt.github.io/til/2021/10/12/","tags":["sh","bash"]},{"content":"about reset, which resets your terminal after a series of undesired ANSI escape codes. I also learned about echo -e \u0026quot;\\e\u0026quot; meaning \u0026ldquo;interpret backslash escape codes\u0026rdquo; (-e) and \u0026quot;\\e\u0026quot; == \u0026quot;\\033\u0026quot;.\n","permalink":"https://skalt.github.io/til/2021/10/13/","tags":["shell","terminal"]},{"content":"that you can write multiple lines to a file using a cat \u0026gt; path/to/file with argument, like\ncat \u0026gt; /tmp/file subsequent typed input is still stdin, which is being read by `cat` and so will be written to the file ^C # cancels `cat` writing to the file ","permalink":"https://skalt.github.io/til/2021/10/19/","tags":["shell"]},{"content":"That there are special CSS classes for theme colors in MSFT PowerPoint: https://www.brightcarbon.com/blog/responsive-svgs-and-smart-icons-in-powerpoint/\n","permalink":"https://skalt.github.io/til/2021/10/22/","tags":["svg","powerpoint","ppt"]},{"content":"About the svg view element: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view It can be used to create views referable like\n\u0026lt;svg id=\u0026#34;total\u0026#34;\u0026gt; \u0026lt;view id=\u0026#34;view-1\u0026#34; viewBox=\u0026#34;...\u0026#34; /\u0026gt; \u0026lt;circle cx=\u0026#34;1\u0026#34; cy=\u0026#34;1\u0026#34; /\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;img src=\u0026#34;#view-1\u0026#34; /\u0026gt; ","permalink":"https://skalt.github.io/til/2021/10/27/","tags":["svg"]},{"content":"That you can detect the terminal you\u0026rsquo;re running in (including vscode) by checking the value of \u0026quot;${TERM_PROGRAM:-}\u0026quot;. The VS Code integrated termial always has a $TERM_PROGRAM of vscode.\nSource: https://stackoverflow.com/a/59231654/6571327\n","permalink":"https://skalt.github.io/til/2021/10/28/","tags":["vcscode","bash"]},{"content":"about terminfo, the terminal information database: it can be queried to find all kinds of fun facts about your current terminal. For instance,\ntput cols =\u0026gt; number of columns in the current terminal tput colors =\u0026gt; number of colors the terminal supports tput setaf =\u0026gt; generate ansi codes to set the foregrount color in the terminal Also, infocmp screen dumps a bunch of other related information drawn from terminfo.\n","permalink":"https://skalt.github.io/til/2021/10/30/","tags":["shell","terminal","colors"]},{"content":"That\nThere are two accepted formats for these strings: plain keyword/value strings and URIs. URIs generally follow RFC 3986, except that multi-host connection strings are allowed.\n\u0026ndash; https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING\nyou can pass a application_name parameter to a connection string \u0026ndash; https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-APPLICATION-NAME ","permalink":"https://skalt.github.io/til/2021/11/03/","tags":["postgres"]},{"content":"That sudo has a webpage and an unfortunate mascot: https://www.sudo.ws/\n","permalink":"https://skalt.github.io/til/2021/11/05/","tags":[]},{"content":"locate searches all filenames for a keyword using a database which you can update updatedb. whereis searches for binaries using the same mechanism.\nhttps://www.madebygps.com/an-intro-to-finding-things-in-linux/\n","permalink":"https://skalt.github.io/til/2021/11/23/","tags":["shell","unix","linux"]},{"content":"that there\u0026rsquo;s a pg_sleep(seconds) function: see https://til.hashrocket.com/posts/8a6f68519d-sleeping-in-postgresql\n","permalink":"https://skalt.github.io/til/2021/11/29/","tags":["db","sql","postgres"]},{"content":"that you can write any file in your git history using git show \u0026lt;ref\u0026gt;:\u0026lt;path\u0026gt;.\nSee https://juplo.de/cat-any-file-in-any-commit-with-git/\n","permalink":"https://skalt.github.io/til/2021/12/01/","tags":["git","shell","command-line"]},{"content":"about the css :target selector (matches the element with the id specified by the url document-fragment) and the svg \u0026lt;view\u0026gt; element, which specifies a viewBox and can have an id.\nsee https://css-tricks.com/svg-fragment-identifiers-work/\n","permalink":"https://skalt.github.io/til/2022/01/04/","tags":["svg","css"]},{"content":"1: That you can set statement timeouts:\nALTER DATABASE mydatabase SET statement_timeout = \u0026#39;60s\u0026#39;; Source: https://blog.crunchydata.com/blog/five-tips-for-a-healthier-postgres-database-in-the-new-year\n2: that you can query your cache and index hit metrics (src)\n3: writes to indexed columns don\u0026rsquo;t necessarily update indices:\nIf an indexed column has to have new values inserted, or existing values updated or deleted, the corresponding index does get updated as well. Ironically, that might make queries take more time to evaluate. If write operations are frequently run against a particular column then you may need to more carefully evaluate creating an index here.\nIf there\u0026rsquo;s only one thing you take away from this blog post, I hope it\u0026rsquo;s this: success with indexes will involve some planning, investigation, and maintenance!\n\u0026ndash; https://blog.crunchydata.com/blog/three-easy-things-to-remember-about-postgres-indexes\n","permalink":"https://skalt.github.io/til/2022/01/09/","tags":["postgres"]},{"content":"Of the html table \u0026lt;caption\u0026gt; element\n","permalink":"https://skalt.github.io/til/2022/01/10/","tags":["html","table"]},{"content":"that you can pass default values to css variable references, e.g. var(--button-color, pink)\nAlso,\nIf the SVG fragment identifier addresses a time segment (e.g., MyDrawing.svg#t=10),then the initial view into the SVG document is established as if no fragment identifier was provided. The rendering of the SVG Document shall be as if the setCurrentTime method on the SVG Document element had been called with the begin time value from the fragment identifier. Additionally, if an end time value is provided in the fragment identifier, the effect is equivalent to calling the pauseAnimations method on the SVG Document when the document time reaches the end time of the fragment identifier.\n\u0026ndash; https://www.w3.org/TR/SVG/linking.html#LinksIntoSVG\n","permalink":"https://skalt.github.io/til/2022/01/11/","tags":["css","svg"]},{"content":"In sqlite, all rows have a 64-bit ROWID (with some exceptions). Putting those aside, if you have a single-column integer primary key and use the magic words PRIMARY KEY INTEGER then the pkey becomes an alias for rowid, greatly speeding up lookups. I\u0026rsquo;m not sure how this affects insertions, though.\nhttps://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key\n","permalink":"https://skalt.github.io/til/2022/01/13/","tags":["sqlite","rowid"]},{"content":"That you can extract sensitive output values from terraform, you can terraform output $output_name\n\u0026ndash; see https://learn.hashicorp.com/tutorials/terraform/outputs#redact-sensitive-outputs\nAlso, sqlite provides a PRAGMA user_version=\u0026lt;number\u0026gt; to let applications store and retrieve a versioning number. See https://sqlite.org/pragma.html#pragma_user_version\n","permalink":"https://skalt.github.io/til/2022/01/26/","tags":["terraform","sqlite"]},{"content":"that the fmt utility exists. It seems to fold or center text according to a target width.\n","permalink":"https://skalt.github.io/til/2022/01/31/","tags":["posix","shell"]},{"content":"In zsh, ls *(n) will \u0026ldquo;human-sort\u0026rdquo; mostly-numeric filenames.\nhttps://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers\nhttps://twitter.com/nedbat/status/1491032300800421892\n","permalink":"https://skalt.github.io/til/2022/02/08/","tags":["zsh","shell"]},{"content":" that adding a ! suffix tells tsc that the expression to the left doesn\u0026rsquo;t evaluate to null\nhttps://mariusschulz.com/blog/assertion-functions-in-typescript#using-the-non-null-assertion-operator\nthat going to about:profile in firefox lets you create separate firefox profiles.\n","permalink":"https://skalt.github.io/til/2022/02/14/","tags":["ts","firefox"]},{"content":"you can import from a parent-module using from ... import .\n","permalink":"https://skalt.github.io/til/2022/02/18/","tags":["python"]},{"content":"that you can use variables in make targets, e.g.\npath/${TO}/file: path/${TO}/other/file ","permalink":"https://skalt.github.io/til/2022/02/25/","tags":["make","shell"]},{"content":"If you want to get a list of aws:principalTags/* values that can be used in your IAM conditions, search CloudTrail events for Event Name: AssumeRoleWithSaml.\n","permalink":"https://skalt.github.io/til/2022/02/28/","tags":["aws","saml","sso"]},{"content":"About git-sparse-checkout:\nhttps://linuxhint.com/what-is-git-sparse-checkout/ https://git-scm.com/docs/git-sparse-checkout The general script for doing a sparse checkout is:\n#!/usr/bin/env bash git_url=\u0026#34;${git_url:?required}\u0026#34; target_dir=\u0026#34;${target_dir:?required}\u0026#34; is_git_dir() { git rev-parse; } init() { mkdir -p \u0026#34;$target_dir\u0026#34; \u0026amp;\u0026amp; cd \u0026#34;$target_dir\u0026#34; if ! is_git_dir; then git init \u0026amp;\u0026amp; git remote add -f origin \u0026#34;$git_url\u0026#34; fi git config core.sparseCheckout true \u0026amp;\u0026amp; git sparse-checkout init \u0026amp;\u0026amp; git sparse-checkout set test \u0026amp;\u0026amp; git pull origin master } see also: https://about.gitlab.com/blog/2020/03/13/partial-clone-for-massive-repositories/\n","permalink":"https://skalt.github.io/til/2022/03/06/","tags":["git","shell"]},{"content":"random: turns out HTML comments are valid line-comments in JS: https://smitop.com/post/js-html-comments/\n","permalink":"https://skalt.github.io/til/2022/03/08/","tags":["js"]},{"content":"About the terraform count meta-argument:\nyou can pass a count = n to any resource-block to create n copies of the resource you can differentiate each of the resources using ${count.index} ","permalink":"https://skalt.github.io/til/2022/03/17/","tags":["terraform","tf","iac"]},{"content":"How to check if a debian package is installed:\ndeb_pkg_is_installed() { sudo dpkg --get-selections \u0026#34;$1\u0026#34; | grep -q \u0026#34;$1\u0026#34;; } ","permalink":"https://skalt.github.io/til/2022/03/18/","tags":["shell","debian","deb","dpkg"]},{"content":"How to pass a multi-character field separator to awk:\nawk -F \u0026#39;[ :]+\u0026#39; \u0026#39;{print $1, $3}\u0026#39; # character set: [ :] # repetition: + ","permalink":"https://skalt.github.io/til/2022/03/19/","tags":["awk","shell"]},{"content":"You can replace the nth instance of a pattern on a line with sed:\n; printf \u0026#34;a\\tb\\tc\\n\u0026#34; | sed \u0026#39;s/\\t/\\t~/2\u0026#39; # a b ~c ","permalink":"https://skalt.github.io/til/2022/03/22/","tags":["shell","sed"]},{"content":"to run terraform output $output_name to print a named output\n","permalink":"https://skalt.github.io/til/2022/04/04/","tags":["tf","terraform","cli","sh","shell"]},{"content":"That python f-strings can do\ndate and time formatting: f\u0026quot;{today:%Y-%m-%d}\u0026quot; have a variable-debugging format: f\u0026quot;{x = }, {y = }\u0026quot; can use __repr__ rather than __str__: f\u0026quot;{user!r}\u0026quot; can be nested: f\u0026quot;output: {value:{width}.{precision}}\u0026quot; https://martinheinz.dev/blog/70 Of the window.prompt() method: https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\n","permalink":"https://skalt.github.io/til/2022/04/06/","tags":["python","js"]},{"content":"What hardlinks are: direct references to inodes. A hardlink can\u0026rsquo;t reference filesystem objects that don\u0026rsquo;t have inodes, such as directories or ports, and aren\u0026rsquo;t portable across different hardware devices even with the same filesystem layout (I think).\nAlso, the opposite of mount(8) is not unmount, it\u0026rsquo;s umount \u0026gt;:(\ngzip -vt $path_to_file checks the validity of a gzip archive: see https://unix.stackexchange.com/questions/359303/check-validity-of-gz-file\n","permalink":"https://skalt.github.io/til/2022/04/08/","tags":["filesystems","fs","gzip"]},{"content":"You can use journalctl -u ${service_name}.service --since ${time:-today} to view the logs of a systemd service: https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs\n","permalink":"https://skalt.github.io/til/2022/04/11/","tags":["systemd","sh","bash","systems administration","journalctl"]},{"content":"That a rust if-statement can have a return type\nlet x: u32 = 123; let stmt_result = if x % 2 == 0 { Ok(\u0026#34;even steven\u0026#34;) } else { Err(\u0026#34;odd steven\u0026#34;) }; assert_eq!(x, Err(\u0026#34;odd steven\u0026#34;)); ","permalink":"https://skalt.github.io/til/2022/04/13/","tags":["rust"]},{"content":"tar -ztvf file.tar.gz will list the files in tar.gz\n","permalink":"https://skalt.github.io/til/2022/04/20/","tags":["tar","sh","shell"]},{"content":"that there\u0026rsquo;s a scheduled send option in slack. It\u0026rsquo;s the first option in the dropdown next to the send button.\n","permalink":"https://skalt.github.io/til/2022/04/22/","tags":["slack"]},{"content":"how to check the last apt update time:\nlast_update=\u0026#34;$(stat --format=%Y /var/cache/apt/pkgcache.bin)\u0026#34; https://askubuntu.com/a/410259/505362\n","permalink":"https://skalt.github.io/til/2022/04/29/","tags":["ubuntu","debian","sh","shell"]},{"content":"That there\u0026rsquo;s an IETF spec for CSVs/TSVs, and it uses doubled double-quotes as quote-escapes, as SQL does https://datatracker.ietf.org/doc/html/rfc4180#section-2\n","permalink":"https://skalt.github.io/til/2022/04/30/","tags":["csv","tsv","rfc"]},{"content":"aws policy documents can change the order of items within permissions arrays, but that\u0026rsquo;s safe to ignore:\nOrder is lost for data aws_iam_policy_document Policy elements that are syntactically lists but semantically sets should have their order ignored Perpetual diffs / Objects have changed outside of Terraform tracking ticket Also, that \u0026amp; types take 8 bytes = 64 bits on 64-bit systems\nuse std::mem; pub struct Foo { bar: String, // 24 baz: usize, // 8 } pub struct Quux\u0026lt;\u0026#39;a\u0026gt; { foo: \u0026amp;\u0026#39;a Foo, bar: usize, } fn main() { println!(\u0026#34;Foo: {}\u0026#34;, mem::size_of::\u0026lt;Foo\u0026gt;()); // 32 println!(\u0026#34;\u0026amp;Foo: {}\u0026#34;, mem::size_of::\u0026lt;\u0026amp;Foo\u0026gt;()); // 8 -- a pointer? println!(\u0026#34;Quux: {}\u0026#34;, mem::size_of::\u0026lt;Quux\u0026gt;()); // 16 -- a pointer + a usize! println!(\u0026#34;\u0026amp;Quux: {}\u0026#34;, mem::size_of::\u0026lt;\u0026amp;Quux\u0026gt;()); // 8 -- another pointer } ","permalink":"https://skalt.github.io/til/2022/05/03/","tags":["terraform","tf","aws"]},{"content":"Not to use BETWEEN for timestamps Not to use char(n), or varchar(n), since they\u0026rsquo;re not natively fixed-width and will defy expectations. See https://wiki.postgresql.org/wiki/Don't_Do_This\nAlso, I learned that you can\u0026rsquo;t run chsh(1) with sudo; chsh needs to run as the user who\u0026rsquo;s changing their shell.\n","permalink":"https://skalt.github.io/til/2022/05/04/","tags":["postgres","sql","pg"]},{"content":"To prefer async context managers or asyncio.run() instead of creating+managing event loops natively.\n","permalink":"https://skalt.github.io/til/2022/05/05/","tags":["python"]},{"content":" that sudo can be configured with the visudo command and that sudo can produce audit logs. See https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/\nthat there\u0026rsquo;s an Element.closest(selector) method, which means you can run this function to set the url to the closest link to an element:\n((el) =\u0026gt; { let id = el.closest(\u0026#34;[id]\u0026#34;)?.id; if (!id) return; else location.hash = id; })($0); that you can use\nSELECT /*...*/ FROM one_table JOIN other_table USING (common_column) as shorthand for one_table.common_column = other_table.common_column. See https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM\n","permalink":"https://skalt.github.io/til/2022/05/09/","tags":["sh","shell","sudo","linux","unix","security","audit","js","DOM","css selector","sql","postgres","sql join"]},{"content":"That you can call time(1) to time how long a shell command takes, like so:\n; time terraform fmt -write=true -recursive . # terraform fmt -write=true -recursive . 0.10s user 0.23s system 24% cpu 1.377 total ","permalink":"https://skalt.github.io/til/2022/05/10/","tags":["sh","bash","time","benchmarking"]},{"content":"that gzip(1), by default, includes file mtimes. The flag to prevent gzip from zipping non-deterministically is gzip --no-name or gzip -n.\n","permalink":"https://skalt.github.io/til/2022/05/16/","tags":["sh","unix","gzip"]},{"content":"The term \u0026ldquo;brochureware\u0026rdquo;: \u0026ldquo;simply listing products and services on a [static] Web site\u0026rdquo;. https://en.wikipedia.org/wiki/Brochureware\n","permalink":"https://skalt.github.io/til/2022/05/18/","tags":["term"]},{"content":"aarch64 is a 64-bit version of armv7 (which seems to be 32-bit). Thus, aarch64 = arm64 ~= armv8\nAArch64 is the 64-bit state introduced in the Armv8-A architecture (https://en.wikipedia.org/wiki/ARM_architecture#ARMv8-A). The 32-bit state which is backwards compatible with Armv7-A and previous 32-bit Arm architectures is referred to as AArch32. Therefore the GNU triplet for the 64-bit ISA is aarch64. The Linux kernel community chose to call their port of the kernel to this architecture arm64 rather than aarch64, so that\u0026rsquo;s where some of the arm64 usage comes from. \u0026ndash; https://stackoverflow.com/a/47274698/6571327\n","permalink":"https://skalt.github.io/til/2022/05/23/","tags":["instruction set architecture","arch"]},{"content":"How to write hugo templates. Hugo seems to require RTFM to get a grasp on the functions and variables available in its DSL.\n","permalink":"https://skalt.github.io/til/2022/05/30/","tags":["hugo","web","template"]},{"content":"That sql has assertions:\nCREATE ASSERTION \u0026lt;Constraint name\u0026gt; CHECK (search condition) [ \u0026lt;constraint attributes\u0026gt; ] see https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement.\nh/t https://www.scattered-thoughts.net/log/0024/ for bringing that to my attention.\nAlso, from the weekend: in postgres, at least, you can call TABLE :table_name; directly to SELECT * FROM :table_name;\nAlso: how to look up a domain name from an ip:\nreverse_ip_lookup() { ip_address=\u0026#34;$1\u0026#34; dig -x $ip_address +noall +answer } Also: how to audit AWS VPC flow logs from CloudWatch Log Insights: use the example queries in the right sidebar.\nAlso: python can execute .zip files directly, like so:\n:; echo \u0026#39;print(\u0026#34;Hello, World!\u0026#34;)\u0026#39; \u0026gt; __main__.py :; zip hello-world.zip __main__.py :; python3 ./hello-world.zip ## Hello, World! h/t https://pradeepchhetri.xyz/til/pythonzip/ for pointing that out.\n","permalink":"https://skalt.github.io/til/2022/05/31/","tags":["sql","sh","networking","dig","python"]},{"content":"That pg_dumpall exists. That you need to use pg_dumpall to dump tablespaces, roles, and subscriptions. That pg_dumpall will dump the postgres role by default, causing resultant dump to fail to restore. Fortunately, I\u0026rsquo;m able to grep -ve '^CREATE ROLE postgres\n","permalink":"https://skalt.github.io/til/2022/06/01/","tags":["postgres","sh","shell","pg_dump"]},{"content":"How to create a JS BigInt value:\nA BigInt value, also sometimes just called a BigInt, is a bigint primitive, created by appending n to the end of an integer literal, or by calling the BigInt() constructor (but without the new operator) and giving it an integer value or string value. \u0026ndash; https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n","permalink":"https://skalt.github.io/til/2022/06/02/","tags":["js"]},{"content":"that chickens are native to tropical jungles in south-east Asia.\nSource: https://www.theguardian.com/science/2022/jun/06/chickens-were-first-tempted-down-from-trees-by-rice-research-suggests\n","permalink":"https://skalt.github.io/til/2022/06/06/","tags":["history","food"]},{"content":"That 1Password has a separate SSH key type! https://developer.1password.com/docs/ssh/manage-keys/\nAlso, that make has a MAKEFLAGS variable that can be used in recursive calls to make: see https://earthly.dev/blog/make-flags/. This also means you can set -r, which eliminates default rules and file actions.\n","permalink":"https://skalt.github.io/til/2022/06/07/","tags":["1password","ssh","make","shell"]},{"content":"that you can write raise SomeException() from prev_exception: see https://docs.python.org/3/reference/simple_stmts.html#raise\n","permalink":"https://skalt.github.io/til/2022/06/08/","tags":["python","exception"]},{"content":"That Array.sort separates floats and ints:\nx = [8, 7.4, 14, 13, 12, 11] // [ 8, 7.4, 14, 13, 12, 11 ] x.sort() // [ 11, 12, 13, 14, 7.4, 8 ] x.sort().reverse() // [ 8, 7.4, 14, 13, 12, 11 ] ","permalink":"https://skalt.github.io/til/2022/06/14/","tags":["js"]},{"content":"That on GitHub, you can add footers like\nstatement[^1] [^1]: footnote See https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/ or https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes\n","permalink":"https://skalt.github.io/til/2022/06/24/","tags":["markdown","footnote"]},{"content":"That in Chrome/chromium you can view the actually-rendered font by\ninspecting an element view computed properties source: https://stackoverflow.com/a/31254584/6571327\n","permalink":"https://skalt.github.io/til/2022/07/01/","tags":["css","font","web"]},{"content":"That you can unescape newlines with printf \u0026quot;%b\u0026quot; 'escaped\\nstring':\nescaped=\u0026#39;a\\nb\u0026#39; printf \u0026#34;%b\u0026#34; \u0026#34;$escaped\u0026#34; # a # b ","permalink":"https://skalt.github.io/til/2022/07/02/","tags":["printf","bash","shell"]},{"content":"How to subset fonts:\n# in a virtualenv pip install fonttools brotli zopfli pyftsubset --help see:\nhttps://fonttools.readthedocs.io/en/latest/subset/index.html#initial-glyph-set-specification https://markoskon.com/creating-font-subsets/#available-tools https://clagnut.com/blog/2418/ https://wakamaifondue.com/beta/ Also, optical-sized variable fonts look great.\n","permalink":"https://skalt.github.io/til/2022/07/04/","tags":["woff2","ttf","opsz","optical size","css","font","typography"]},{"content":"that DNS listens on port 53\n","permalink":"https://skalt.github.io/til/2022/07/06/","tags":["dns","port"]},{"content":"That there\u0026rsquo;s an official 1Password terraform provider: https://registry.terraform.io/providers/1Password/onepassword/latest/docs\n","permalink":"https://skalt.github.io/til/2022/07/08/","tags":["1password","terraform"]},{"content":"CMD+K clears the screen same as clear does!\n","permalink":"https://skalt.github.io/til/2022/07/11/","tags":["iterm"]},{"content":"That there\u0026rsquo;s a npm outdated command that finds packages which are not at their most recent versions! Example:\nnpm outdated --global # Package Current Wanted Latest Location # n 7.5.0 7.5.0 9.0.0 global # npm 6.14.15 6.14.17 8.15.0 global # pnpm 6.15.2 6.33.1 7.6.0 global # yarn 1.22.11 1.22.19 1.22.19 global ","permalink":"https://skalt.github.io/til/2022/07/27/","tags":["npm"]},{"content":"that in bash and zsh, you can put a newline in a variable like so:\nnewline=$\u0026#39;\\n\u0026#39; echo \u0026#34;\u0026gt;\u0026gt;\u0026gt;${newline}\u0026lt;\u0026lt;\u0026lt;\u0026#34; learned from: https://stackoverflow.com/a/4456399/6571327\n","permalink":"https://skalt.github.io/til/2022/07/29/","tags":["sh","bash","zsh"]},{"content":"Of the existence of MDX (MultiDimensional eXpressions), a query language for OLAP cubes. I came across it while researching clickhouse db.\n","permalink":"https://skalt.github.io/til/2022/07/30/","tags":["mdx","sql"]},{"content":"About creating json values using sqlite3\u0026rsquo;s built-in json value support.\nExample:\nSELECT json_object(\u0026#39;foo\u0026#39;, json_object(\u0026#39;bar\u0026#39;, \u0026#39;baz\u0026#39;)); -- {\u0026#34;foo\u0026#34;:{\u0026#34;bar\u0026#34;:\u0026#34;baz\u0026#34;}} SELECT json_object(\u0026#39;foo\u0026#39;, json_array(\u0026#39;bar\u0026#39;, \u0026#39;baz\u0026#39;)); -- {\u0026#34;foo\u0026#34;:[\u0026#34;bar\u0026#34;,\u0026#34;baz\u0026#34;]} -- works with nested queries too SELECT json_object(\u0026#39;foo\u0026#39;, (SELECT json_array(\u0026#39;bar\u0026#39;, \u0026#39;baz\u0026#39;))); -- {\u0026#34;foo\u0026#34;:[\u0026#34;bar\u0026#34;,\u0026#34;baz\u0026#34;]} CREATE TABLE t1(a INTEGER PRIMARY KEY, b, c); INSERT INTO t1 VALUES (1, \u0026#39;A\u0026#39;, \u0026#39;one\u0026#39; ), (2, \u0026#39;B\u0026#39;, \u0026#39;two\u0026#39; ), (3, \u0026#39;C\u0026#39;, \u0026#39;three\u0026#39;), (4, \u0026#39;D\u0026#39;, \u0026#39;one\u0026#39; ), (5, \u0026#39;A\u0026#39;, \u0026#39;two\u0026#39; ), (6, \u0026#39;B\u0026#39;, \u0026#39;three\u0026#39;), (7, \u0026#39;C\u0026#39;, \u0026#39;one\u0026#39; ); SELECT json_group_array(b) FROM t1 GROUP BY c; -- [\u0026#34;A\u0026#34;,\u0026#34;D\u0026#34;,\u0026#34;C\u0026#34;] -- [\u0026#34;C\u0026#34;,\u0026#34;B\u0026#34;] -- [\u0026#34;B\u0026#34;,\u0026#34;A\u0026#34;] Caveat: you sometimes have to wrap nested values from nested queries in json(), else they\u0026rsquo;ll be escaped as json string literals. See https://stackoverflow.com/questions/55421128/how-do-i-get-nested-json-data-out-of-sqlite-with-a-multi-level-group-by.\n","permalink":"https://skalt.github.io/til/2022/07/31/","tags":["sqlite3","sqlite","json"]},{"content":"How to consistently establish relative symlinks within a git repo:\ncd \u0026#34;$target_dir\u0026#34; # the directory in which you want to create the symlink ln -s ../relative/path/to/source.file ./symlink.name https://stackoverflow.com/a/15465514/6571327\n","permalink":"https://skalt.github.io/til/2022/08/06/","tags":["git","symlink"]},{"content":"That you can call docker compose kill to kill all docker-compose containers That there\u0026rsquo;s a timeout shell command in gnu coreutils: https://man7.org/linux/man-pages/man1/timeout.1.html\n","permalink":"https://skalt.github.io/til/2022/08/11/","tags":["docker-compose","sh"]},{"content":"That if you run kubectl logs -n my_namespace $pod_name, you need to pass a container name afterwards. I always forget that pod != container.\n","permalink":"https://skalt.github.io/til/2022/08/15/","tags":["kubectl"]},{"content":"About IfExists AWS IAM conditions: if a condition key might not exist (the resource doesn\u0026rsquo;t have it built-in, or a tag isn\u0026rsquo;t set), you can append IfExists to the condition test. For example StringEquals -\u0026gt; StringEqualsIfExists.\nSee https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_IfExists\n","permalink":"https://skalt.github.io/til/2022/08/22/","tags":["aws","iam"]},{"content":"that you can lsblk to list the block devices that the OS knows about without sudo.\nthat you can sudo growpart to increase a partition size without restarting the machine.\n","permalink":"https://skalt.github.io/til/2022/08/24/","tags":["ubuntu","sh","shell","bash","filesystem","partition"]},{"content":"That the 14kb limit for fast pages comes from TCP sending 10 initial 1500b packets to guess the amount of bandwidth the client can handle. h/t https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/\nI\u0026rsquo;ve heard of the 14-15kb limit before, but this was the clearest explanation I\u0026rsquo;d heard so far of why the limit exists. Also, the author alleges that the limit applies to http/2 and http/3+QUIC.\n","permalink":"https://skalt.github.io/til/2022/08/25/","tags":["tcp","slow-start","14kb"]},{"content":"That you can list the listening ports on a UNIX machine using sudo lsof -i -P -n | grep LISTEN\n","permalink":"https://skalt.github.io/til/2022/08/29/","tags":["lsof","ports","bash"]},{"content":"That the max duration for any AWS assumed role session is 12h.\n--duration-seconds (integer) The duration, in seconds, of the role session. The value specified can range from 900 seconds (15 minutes) up to the maximum session duration set for the role. **The maximum session duration setting can have a value from 1 hour to 12 hours.** If you specify a value higher than this setting or the administrator setting (whichever is lower), the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails. Role chaining limits your Amazon Web Services CLI or Amazon Web Services API role session to a maximum of one hour. When you use the AssumeRole API operation to assume a role, you can specify the duration of your role session with the DurationSeconds parameter. You can specify a parameter value of up to 43200 seconds (12 hours), depending on the maximum session duration setting for your role. However, if you assume a role using role chaining and provide a DurationSeconds parameter value greater than one hour, the operation fails. To learn how to view the maximum value for your role, see View the Maximum Session Duration Setting for a Role in the IAM User Guide . By default, the value is set to 3600 seconds. see https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html#options\nAlso: I learned that is0-8601 defines formats for durations (like PT2H) and time intervals\n","permalink":"https://skalt.github.io/til/2022/08/30/","tags":["aws","iam","sts assume-role","iso-8601"]},{"content":"That linux has a capability system: https://man7.org/linux/man-pages/man7/capabilities.7.html\nI heard about this in a discussion of privileged ports on linux, specifically about PRIV_NET_PRIVADDR.\n","permalink":"https://skalt.github.io/til/2022/08/31/","tags":["linux","networking","privileges"]},{"content":"that \u0026ldquo;cf.\u0026rdquo; stands for \u0026ldquo;conferatur\u0026rdquo;, or \u0026ldquo;to compare\u0026rdquo;\n","permalink":"https://skalt.github.io/til/2022/09/02/","tags":["cf"]},{"content":" Incentive stock options (ISOs): typically taxed only on sale of shares.\nNon-qualifying stock options (NSOs): typically taxed both on exercise and on sale of shares.\nRestricted stock units (RSUs): type of equity grant where you own shares automatically if certain conditions are met (like vesting). More likely to be issued by larger/older companies. Taxed on vesting.\nStock options: A type of equity compensation that gives you the option to buy (\u0026ldquo;exercise\u0026rdquo;) shares at the \u0026ldquo;strike price\u0026rdquo; listed on your equity grant. Startups tend to issue stock options.\nFair market value (FMV): The FMV is the established value of what one share of common stock is worth as of a specific date. It’s typically determined by a 409A valuation\nPost-termination exercise period (PTEP): Period of time your company gives you to exercise your vested options after you leave. Typically 90 days.\n83(b) election: A tax form that you file if you choose to exercise your options early. If you’re permitted to exercise early and you decide to do it, you need to work with your company to file an 83(b) election with the IRS and make sure to follow all their rules.\n409A valuation: An assessment of the FMV of a private company’s common stock. Must be performed by a qualified, independent valuation provider.\n\u0026ndash; https://carta.com/equity/learn/glossary/\n","permalink":"https://skalt.github.io/til/2022/09/19/","tags":["equity","shares","vesting","money","stock","stonks"]},{"content":"A hack to detect if an element is visible/not:\nconst isVisible = (el) =\u0026gt; (el.offsetWidth || el.offsetHeight) \u0026gt; 0; see https://stackoverflow.com/questions/1343237/how-to-check-elements-visibility-via-javascript\n","permalink":"https://skalt.github.io/til/2022/09/20/","tags":["js","html"]},{"content":"that OCSP stands for Online Certificate Status Protocol. See https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol\n","permalink":"https://skalt.github.io/til/2022/09/30/","tags":["ocsp","acronym","networking"]},{"content":"That you can write \u0026gt;\u0026amp; 1 and it still redirects to stdout! example:\nf() { echo \u0026#34;ok\u0026#34; \u0026gt;\u0026amp;2; } f 2\u0026gt;\u0026amp; 1 | grep ok ","permalink":"https://skalt.github.io/til/2022/10/03/","tags":["bash","shell"]},{"content":"STUN: Session Traversal Utilities for NAT. A standardized set of methods, including a network protocol, for traversal of network address translator (NAT) gateways. see https://en.wikipedia.org/wiki/STUN\nDERP: Designated Encrypted Relay for Packets. See https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp\n","permalink":"https://skalt.github.io/til/2022/10/07/","tags":["stun","derp","networkin","acronym"]},{"content":"How to avoid opening live-share sessions in the web vscode version that I hate: https://learn.microsoft.com/en-us/visualstudio/liveshare/quickstart/browser-join#joining-from-the-desktop\n","permalink":"https://skalt.github.io/til/2022/10/10/","tags":["vscode","live-share"]},{"content":"That terraform plan -detailed-exitcode exists: 0 means no diff, 1 means error, 2 means a diff exists.\nAlso, that you can print the source code of a bash function like so:\nprint_fn_src() { declare -f \u0026#34;$1\u0026#34;; } ","permalink":"https://skalt.github.io/til/2022/10/11/","tags":["terraform","bash","sh","cli"]},{"content":"That \u0026ldquo;CWE\u0026rdquo; is a MITRE abbreviation for \u0026ldquo;common weakness enumeration\u0026rdquo;\n","permalink":"https://skalt.github.io/til/2022/10/13/","tags":["cwe"]},{"content":"That BSD arch command found on Macs also supports a -${arch} flag for running universal binaries.\n","permalink":"https://skalt.github.io/til/2022/10/18/","tags":["arch","cli","sh","bash"]},{"content":"that you can easily send asyncio tasks to threads:\n#!/usr/bin/env python3 import asyncio from asyncio.threads import to_thread async def foo(bar: str): asyncio.sleep print(bar) asyncio.run(to_thread(foo, \u0026#34;baz\u0026#34;)) ","permalink":"https://skalt.github.io/til/2022/10/19/","tags":["python","asyncio"]},{"content":"That ARIA stands for Accessible Rich Internet Applications! See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\nThat in linux ls(1) uses the environment variable LS_COLORS to determine the colors in which the filenames are to be displayed. Also, that linux specifies a dir_colors(5) configuration file format for dircolors(1), which exports LS_COLORS\nSee https://man7.org/linux/man-pages/man5/dir_colors.5.html\nThat nix is complicated, which is exactly what my prior research told me.\nOn one hand, it is AWESOME to cd into a project and watch direnv automatically spawn a development shell with all the fixings. On the other, the nix ecosystem is bewildering. I read through a few articles:\nhttps://learnxinyminutes.com/docs/nix/ : covered the expression language\nhttps://xeiaso.net/blog/nix-flakes-1-2022-02-21, part of the https://xeiaso.net/blog/series/nix-flakes series : made a great pitch for using flakes:\nOne of the big annoying parts about getting into Nix is that setting up projects isn\u0026rsquo;t totally a defined science\u0026hellip;Nix flakes helps fix this by doing a few things:\nDefining a flake.nix as the central \u0026ldquo;hub\u0026rdquo; for your project\u0026rsquo;s dependencies, exposed packages, NixOS configuration modules and more. Shipping a set of templates so that you can get projects started easily. Think something like Yeoman but built directly into Nix. You can also define your own templates in your flake.nix. https://nixos.org/guides/declarative-and-reproducible-developer-environments.html : relied on shell.nix\nhttps://nixos.org/guides/towards-reproducibility-pinning-nixpkgs.html introduced niv, a nix package-management cli that differs from nix flake\nhttps://github.com/nix-community/awesome-nix#rust : there are many nix+rust tools, and it\u0026rsquo;s not at all clear to me which (if any) to use\nhttps://xeiaso.net/talks/nixos-pain-2021-11-10 : talks about some pain I\u0026rsquo;ve encountered (e.g. the ambiguity of the term \u0026ldquo;nix\u0026rdquo;, flakes splitting the ecosystem) and some I haven\u0026rsquo;t (NixOs, NixOps troubles \u0026ndash; I don\u0026rsquo;t use those yet.)\nhttps://o.librepush.net/solutions/nix/developing-python-rust-projects-on-nixos/ eschewed flakes since the author wanted to install editable python packages (reasonable)\nThen there are the reasonable-yet-still-more confusing tools like\nhttps://github.com/jetpack-io/devbox : provide development shells https://www.riff.sh/ : provide external linkable libraries for rust projects both of which expose tools to use nix (package manager) to provide development environments without requiring devs to write any nix (the language). Since I\u0026rsquo;m still struggling with the configuration language, I\u0026rsquo;m sympathetic to anyone wanting to avoid writing nix.\nBy dint of procrastinating, I now know that\nsomeone\u0026rsquo;s rewriting nix-the-language? https://tvl.fyi/blog/tvix-status-september-22 someone bolted nix-the-build-system onto Bazel? https://www.tweag.io/blog/2018-03-15-bazel-nix/ pants build currently uses absolute paths for linking some tools into its hermetic build environment? https://github.com/pantsbuild/pants/issues/14492 someone\u0026rsquo;s introducing a new concept, nix cells to make nix flakes easier? https://github.com/divnix/std I\u0026rsquo;m still putting off reading up on nix overlays at the time of writing.\nI could see someone writing SDKs for nix-the-package-manager in non-nix languages that serialize and deserialize to JSON, just like is happening to infrastructure-as-code languages (pulumi, helm, terraform cloud development kit), etc.\nthat you can search for nix package names on https://search.nixos.org/packages\n","permalink":"https://skalt.github.io/til/2022/10/23/","tags":["a11y","aria","nix","direnv","shell","bash","tui","dircolors(1)","LS_COLORS","ls(1)"]},{"content":"That you can list all addresses in terraform state by running\nterraform state list Docs at https://developer.hashicorp.com/terraform/cli/commands/state/list\nAlso, that compgen -v is a function, at least on Mac zsh. Apparently in zsh compgen -v calls something like\nfor var_name in \u0026#34;${(k)parameters[@]}\u0026#34;; do printf \u0026#39;%s\\n\u0026#39; \u0026#34;$var_name\u0026#34; done which is the first time I\u0026rsquo;ve seen that kind of shell syntax. It generates a bad substitution message in bash 3.2, so I can only assume it\u0026rsquo;s zsh-specific.\n","permalink":"https://skalt.github.io/til/2022/10/24/","tags":["terraform","cli","shell","bash","zsh"]},{"content":"That you can have too many SSH keys :)\nWhen I got\nReceived disconnect from 256.256.256.256 port 22:2: too many authentication failures I found the following: https://www.tecmint.com/fix-ssh-too-many-authentication-failures-error/ which advocated adding\nHost * IdentitiesOnly yes to reduce the number of tried keys\n","permalink":"https://skalt.github.io/til/2022/11/01/","tags":["ssh"]},{"content":"that AWS ALB target groups support HTTPS healthcheck targets: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html\nThat FQDN stands for Fully Qualified Domain Name. For example sub.domain.tld. is a FQDN.\n","permalink":"https://skalt.github.io/til/2022/11/07/","tags":["aws","alb","fqdn","acronym"]},{"content":"That the aws_ec2_tag resource can be used to add tags to AWS RAM-shared VPCs and subnets:\nThis resource should only be used in cases where EC2 resources are created outside Terraform (e.g., AMIs), being shared via Resource Access Manager (RAM), or implicitly created by other means (e.g., Transit Gateway VPN Attachments).\nAlso, that\nWhen the source of a module is a version control repository or archive file (generically, a \u0026ldquo;package\u0026rdquo;), the module itself may be in a sub-directory relative to the root of the package. A special double-slash syntax is interpreted by Terraform to indicate that the remaining path after that point is a sub-directory within the package. For example: git::https://example.com/network.git//modules/vpc?ref=v1.2.0\nhttps://developer.hashicorp.com/terraform/language/modules/sources#modules-in-package-sub-directories\n","permalink":"https://skalt.github.io/til/2022/11/08/","tags":["tf","terraform","aws"]},{"content":"That Bitbucket pipelines has pipeline-specific SSH keys available at the path $BITBUCKET_SSH_KEY_FILE. See https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/\nAlso, git rev-parse --show-git-dir yields a relative path to the .git dir for that repo.\n","permalink":"https://skalt.github.io/til/2022/11/10/","tags":["ssh","bitbucket"]},{"content":"that SAN = Subject Alternate Name. A SAN certificate is a TLS certificate that certifies multiple domain names.\nsee https://support.dnsimple.com/articles/what-is-ssl-san/\nthat AWS Certificate Manager and other free-TLS-certificate services can\u0026rsquo;t validate private domain names since ACME (Automated Certificate Management Environment) relies on public DNS or WHOIS records.\nSee also https://docs.aws.amazon.com/acm/latest/userguide/domain-ownership-validation.html.\n","permalink":"https://skalt.github.io/til/2022/11/11/","tags":["san","dns","tls","acronym"]},{"content":"That pg_catalog.pg_shdepend exists, and \u0026ldquo;records the dependency relationships between database objects and shared objects, such as roles.\u0026rdquo; See https://www.postgresql.org/docs/current/catalog-pg-shdepend.html\n","permalink":"https://skalt.github.io/til/2022/11/14/","tags":["postgres"]},{"content":"that you can option+click to change your cursor\u0026rsquo;s location in iterm2 and mac\u0026rsquo;s terminal.app! H/t Vlad Grenkov for this one :)\nAs of Terraform 1.3, you can write\ntype = optional(real_type, default_value) See https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules\n","permalink":"https://skalt.github.io/til/2022/11/30/","tags":["iterm","mac","terminal","Terraform","tf"]},{"content":"That NFC in the context of security keys stands for Near Field Communication: a (usually bluetooth) connection that lets your security key authenticate with a nearby device.\nThat git-worktree(1) is pretty handy! During the process of a refactor, I was able to run\ngit worktree add --checkout $local_path $old_branch Explore some deleted/significantly altered files, then inspect the diff between the current and old state of the files!\nSee also: https://jmtd.net/log/worktrees/ https://git-scm.com/docs/git-worktree\n","permalink":"https://skalt.github.io/til/2022/12/05/","tags":["nfc","abbreviation","git-worktree","worktrees"]},{"content":"That you can include doc-comments in macros:\nmacro_rules! documented { ( $(#[$outer:meta])* $name:ident ) =\u0026gt; { $(#[$outer])* fn $name(\u0026amp;self) {} }; } documented!( /// documented my_function ); my_function(); // hovering \u0026#34;function\u0026#34; now shows that the doc-comment is \u0026#34;documented\u0026#34; h/t https://stackoverflow.com/a/33999625/6571327\n","permalink":"https://skalt.github.io/til/2022/12/10/","tags":["rust","macros","macro_rules","macro_rules!","docs","documentation"]},{"content":"that it\u0026rsquo;s possible to create indices on materialized views in postgres: https://www.postgresql.org/docs/current/rules-materializedviews.html#RULES-MATERIALIZEDVIEWS\n","permalink":"https://skalt.github.io/til/2022/12/14/","tags":["postgres"]},{"content":"That you can group fields in an html form with a \u0026lt;fieldset\u0026gt; tag, and that it accepts a top-level child \u0026lt;legend\u0026gt; tag. Together,\n\u0026lt;fieldset\u0026gt; \u0026lt;legend\u0026gt;Legend\u0026lt;/legend\u0026gt; \u0026lt;div\u0026gt;...\u0026lt;/div\u0026gt; \u0026lt;/fieldset\u0026gt; produces\n┌────legend─────┐ │ │ │ │ │ ... │ │ │ │ │ └───────────────┘ which is simultaneously cool and hard to style.\n","permalink":"https://skalt.github.io/til/2022/12/18/","tags":["html"]},{"content":"That you need to set a value=\u0026quot;number\u0026quot; attribute AND a max=\u0026quot;number\u0026quot; attribute on a html \u0026lt;progress\u0026gt; element in order to display fractional progress.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\n","permalink":"https://skalt.github.io/til/2022/12/26/","tags":["html","progress element"]},{"content":"The difference between triggers and event triggers in postgres:\nUnlike regular triggers, which are attached to a single table and capture only DML events, event triggers are global to a particular database and are capable of capturing DDL events. Like regular triggers, event triggers can be written in any procedural language that includes event trigger support, or in C, but not in plain SQL.\n\u0026ndash; https://www.postgresql.org/docs/current/event-triggers.html\n","permalink":"https://skalt.github.io/til/2023/01/01/","tags":["postgres"]},{"content":"That a directory service doesn\u0026rsquo;t necessarily provide authentication: https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/what-is-a-directory-service describes a directory service as a document database optimized for searches of a hierarchical (directory) tree.\n[Directory] entries are arranged hierarchically in a tree that is structured geographically and organizationally. Global entries, such as countries/regions, reside at the top of the tree, followed by state or national organizations, then organizational units, people, devices, or anything else that might be represented in a directory.\nA directory entry is represented by its entry name, or relative distinguished name (RDN), and by its distinguished name (DN). The DN uniquely identifies each entry on a global level, and is derived by concatenating the RDN of an entry with the RDN of each of its ancestor entries.\nThe LDAP API provides functions that allow LDAP client applications to search for and retrieve information from an LDAP directory server \u0026hellip; There are also [LDAP APIs] that provide access control for servers, by allowing clients to authenticate themselves.\nLDAP doesn\u0026rsquo;t enforce TLS :/ Binding is the step where the LDAP server authenticates the client and, if the client is successfully authenticated, allows the client access to the LDAP server based on that client\u0026rsquo;s privileges.\nTo summarize:\na directory is an ontological tree of people, places, organizations, and phyiscal things LDAP is a protocol for searching a directory LDAP is used for access control (password-only authentication) if the human directory entries have passwords as an attribute. ","permalink":"https://skalt.github.io/til/2023/01/09/","tags":["LDAP","directory service"]},{"content":"that you can set PYTHONDONTWRITEBYTECODE=1 to prevent python from writing pycs (see https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE)\nAlso: that AWS SSO does SCIM actions using the sso-directory:* IAM prefix rather than the sso:* prefix.\n","permalink":"https://skalt.github.io/til/2023/01/17/","tags":["python"]},{"content":"That you need ato git add a flake.nix for the flake\u0026rsquo;s contents to start to work with nix develop\nThis is needed because Nix flakes respects gitignores. If you don\u0026rsquo;t add things to the git staging area, git doesn\u0026rsquo;t know about the files at all, and Nix flakes can\u0026rsquo;t know if it should ignore them. \u0026ndash; https://xeiaso.net/blog/nix-flakes-go-programs\nthat \u0026ldquo;truecolor\u0026rdquo; support in shells is detected with the $COLORTERM env var\n","permalink":"https://skalt.github.io/til/2023/01/28/","tags":["nix","nixos","sh","shell"]},{"content":"how to setup passwordless SSH login:\nssh-copy-id $(whoami)@${other_host} https://linuxize.com/post/how-to-setup-passwordless-ssh-login/\nhow to change a ubuntu machine\u0026rsquo;s computer\u0026rsquo;s hostname:\necho \u0026#34;new-hostname\u0026#34; \u0026gt; sudo tee /etc/hostname; sudo sed -i \u0026#39;s/old-hostname/new-hostname/1\u0026#39; /etc/hosts; sudo hosname \u0026#39;new-hostname\u0026#39;; # \u0026lt;- for changes to take effect prior to reboot h/t https://www.howtogeek.com/197934/how-to-change-your-hostname-computer-name-on-ubuntu-linux/\n","permalink":"https://skalt.github.io/til/2023/01/29/","tags":["ssh","ssh-copy-id","hostname"]},{"content":"That psql et al. support colors:\nexport PG_COLOR=auto # only colorize output to ttys learned from https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html See also:\nhttps://www.postgresql.org/docs/current/color-when.html https://www.postgresql.org/docs/current/color-which.html ","permalink":"https://skalt.github.io/til/2023/01/30/","tags":["psql","postgres","cli","colors"]},{"content":"git restore exists, and works like a more destructive git stash\nSee https://git-scm.com/docs/git-restore\n","permalink":"https://skalt.github.io/til/2023/02/01/","tags":["git"]},{"content":"That in Rust, assert! runs in both debug and release builds. For debug-only assertions, use debug_assert!. See https://doc.rust-lang.org/stable/std/macro.debug_assert.html.\nThat in Python, you can call isinstance(thing, (tuple, OfMany, DifferentClasses)) to check if a variable is an instance of many possible classes. See https://docs.python.org/3/library/functions.html?highlight=isinstance#isinstance.\n","permalink":"https://skalt.github.io/til/2023/02/08/","tags":["rust","python"]},{"content":"That properties of a NamedTuple can have docstrings:\nclass FooBar(NamedTuple): foo: str \u0026#34;\u0026#34;\u0026#34;Foo\u0026#34;\u0026#34;\u0026#34; bar: int \u0026#34;\u0026#34;\u0026#34;Bar\u0026#34;\u0026#34;\u0026#34; As seen in https://github.com/sqlalchemy/sqlalchemy/blob/main/lib/sqlalchemy/sql/compiler.py#L348\n","permalink":"https://skalt.github.io/til/2023/02/21/","tags":["python","NamedTuple"]},{"content":"How to make a self-signed TLS certificate:\n#!/usr/bin/env bash # stolen from https://stackoverflow.com/questions/10175812/how-to-generate-a-self-signed-ssl-certificate-using-openssl openssl \\ req -x509 \\ -newkey rsa:4096 \\ -keyout key.pem \\ -out cert.pem \\ -sha256 -days 365 -nodes -subj \u0026#39;/CN=localhost\u0026#39; ","permalink":"https://skalt.github.io/til/2023/02/22/","tags":["openssl","ssl","self-signed certificate","tls"]},{"content":"that there\u0026rsquo;s a git commit --trailer \u0026lt;token\u0026gt;:\u0026lt;value\u0026gt; flag.\nhttps://git-scm.com/docs/git-commit#Documentation/git-commit.txt---trailerlttokengtltvaluegt\n","permalink":"https://skalt.github.io/til/2023/03/02/","tags":["git","git-commit","git-trailer"]},{"content":" The string \u0026ldquo;0.1.12\u0026rdquo; is a version requirement. Although it looks like a specific version of the time crate, it actually specifies a range of versions and allows SemVer compatible updates.\n\u0026ndash; https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html\nInstead, in order to lock to a specific version of a crate, you need to write = 0.1.2.\n","permalink":"https://skalt.github.io/til/2023/03/04/","tags":["cargo","rust","semver"]},{"content":"This was a bit of a rollercoaster morning: (1) I tried git worktree add $branch, and it was pretty convenient! (2) until I got a pre-commit error, then I got error: unable to read $HASH on git status (3) which led me to discover git fsck --full --name-objects, which is currently yelling about error: $HASH: invalid sha1 pointer in cache-tree\n","permalink":"https://skalt.github.io/til/2023/03/09/","tags":["git","git-fsck","git-worktree"]},{"content":"That you can use a .gitattributes file to prevent files from appearing in GitHub diffs like so:\ngenerated/**/* linguist-generated=true See https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github\n","permalink":"https://skalt.github.io/til/2023/03/19/","tags":["gitattributes","github"]},{"content":"About the precedent for deriving serde from serialize/deserialize:\nA codec is a device or computer program that encodes or decodes a data stream or signal. Codec is a portmanteau of coder/decoder. In electronic communications, an endec is a device that acts as both an encoder and a decoder on a signal or data stream, and hence is a type of codec. Endec is a portmanteau of encoder/decoder. \u0026ndash; https://en.wikipedia.org/wiki/Codec\n","permalink":"https://skalt.github.io/til/2023/05/09/","tags":["etymology","codec"]},{"content":"That powerline networking kits exist: they send signals over home electrical wiring to extend your home network. Similarly, MoCA (Multimedia over Coaxial Alliance) sends signals over coax cable.\n","permalink":"https://skalt.github.io/til/2023/05/15/","tags":["powerline","networking"]},{"content":"That there are instances where a git commit-message can start with a #:\nset -eu experiment=\u0026#34;$(mkdtemp -d)\u0026#34; cd \u0026#34;$experiment\u0026#34; git init# touch readme \u0026amp;\u0026amp; git add readme git commit -m \u0026#34;# not a comment, apparently\u0026#34; actual=\u0026#34;$(cat ./.git/COMMIT_EDITMSG)\u0026#34; expected=\u0026#34;# not a comment, apparently\u0026#34; test \u0026#34;$actual\u0026#34; = \u0026#34;$expected\u0026#34; git log # \u0026lt;hash\u0026gt; # # not a comment, apparently ","permalink":"https://skalt.github.io/til/2023/05/16/","tags":["git"]},{"content":"That you can destructure struct values:\nstruct Point { x: i32, y: i32, } fn main() { let p = Point { x: 0, y: 7 }; let Point { x: a, y: b } = p; assert_eq!(0, a); assert_eq!(7, b); } see https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-structs\n","permalink":"https://skalt.github.io/til/2023/05/24/","tags":["rust"]},{"content":"That you can list the files in a zipfile using unzip -l path/to/file.zip. Also, that VSIX (Visual Studio and VSCode extension packaging files) are zipfiles with an XML manifest.\n","permalink":"https://skalt.github.io/til/2023/05/27/","tags":["zip"]},{"content":"type NonEmptyArray\u0026lt;T\u0026gt; = [T, ...T[]]; First seen at https://github.com/rust-lang/rust-analyzer/blob/master/editors/code/src/util.ts#L24\n","permalink":"https://skalt.github.io/til/2023/05/28/","tags":["typescript"]},{"content":"During some research on build systems, I began re-reading Build Systems a la Carte (repo, paper). I found the Haskell even more confusing than I remembered, so I set out to translate the Haskell types to Typescript, Rust, and other type systems I know. When I got into the translation, I realized I only know enough to get the vibe of what Haskell code\u0026rsquo;s saying :/.\nThe following are my notes on the 2021 open-source update to Learn You A Haskell for Great Good.\nStarting out https://learnyouahaskell.github.io/starting-out.html#an-intro-to-lists\nWhat is the underlying datatype of a list? A linked list? Growable Vec\u0026lt;T\u0026gt;?\n++ :\nI already need a language server for figuring out operator definitions.\nList comprehension syntax:\n[ output var | var \u0026lt;- inputSet] -- ^^^^^^^^^ -- the output function -- also valid: [ output var | var \u0026lt;- inputSet, filterFn var, otherFilterFn var] -- also valid: triangles = [ (a,b,c) | c \u0026lt;- [1..10], b \u0026lt;- [1..10], a \u0026lt;- [1..10] ] Lists are homogenous, tuples can be heterogenous.\nRange syntax seems to be the same as Rust.\nTypes \u0026amp; Typeclasses The [Char] type is synonymous with String\n-- function type declaration addThree :: Int -\u0026gt; Int -\u0026gt; Int -\u0026gt; Int addThree x y z = x + y + z -- fn definition Looks like functions are curried.\nFun fact: Haskell was named after Haskell Curry\nA typeclass is a sort of interface that defines some behavior. If a type is a part of a typeclass, that means that it supports and implements the behavior the typeclass describes.\nSo like a typescript interface or a rust trait\nEverything before the =\u0026gt; symbol is called a class constraint.\nSyntax in Functions Looks like hitting an un-handled branch of pattern matching throws an exception. There are probably lints for such omissions.\nLooks like _ is used as the ignored variable.\nGuards are indicated by pipes that follow a function\u0026rsquo;s name and its parameters. Usually, they\u0026rsquo;re indented a bit to the right and lined up. A guard is basically a boolean expression. If it evaluates to True, then the corresponding function body is used. If it evaluates to False, checking drops through to the next guard and so on.\nNeat!\nwhere bindings are a syntactic construct that let you bind to variables at the end of a function and the whole function can see them, including all the guards. let bindings let you bind to variables anywhere and are expressions themselves, but are very local, so they don\u0026rsquo;t span across guards.\nx = let a = 1 in a + 1 -- x == 2 If we want to bind to several variables inline [\u0026hellip;] we can separate them with semicolons.\n(let a = 100; b = 200; c = 300 in a*b*c, let foo=\u0026#34;Hey \u0026#34;; bar = \u0026#34;there!\u0026#34; in foo ++ bar) -- (6000000,\u0026#34;Hey there!\u0026#34;) case expressions seem to be directly analogous to rust\u0026rsquo;s match expressions:\ncase expression of pattern -\u0026gt; result pattern -\u0026gt; result pattern -\u0026gt; result ... Higher order functions Infix functions can also be partially applied by using sections. To section an infix function, simply surround it with parentheses and only supply a parameter on one side. That creates a function that takes one parameter and then applies it to the side that\u0026rsquo;s missing an operand.\ndivideByTen :: (Floating a) =\u0026gt; a -\u0026gt; a divideByTen = (/10) \u0026ldquo;lambdas\u0026rdquo; = anonymous fns; written like\n-- v starting \\ (\\arg -\u0026gt; result expr) -- ^ ^ always parenthesized [Haskell does] function composition with the . function, which is defined like so:\n(.) :: (b -\u0026gt; c) -\u0026gt; (a -\u0026gt; b) -\u0026gt; a -\u0026gt; c f . g = \\x -\u0026gt; f (g x) ($) :: (a -\u0026gt; b) -\u0026gt; a -\u0026gt; b f $ x = f x Whereas normal function application (putting a space between two things) has a really high precedence, the $ function has the lowest precedence. Function application with a space is left-associative (so f a b c is the same as ((f a) b) c)), function application with $ is right-associative. \u0026hellip; Most of the time, $\u0026rsquo;s a convenience function so that we don\u0026rsquo;t have to write so many parentheses. When a $ is encountered, the expression on its right is applied as the parameter to the function on its left. How about sqrt 3 + 4 + 9? This adds together 9, 4 and the square root of 3. If we want to get the square root of 3 + 4 + 9, we\u0026rsquo;d have to write sqrt (3 + 4 + 9) or if we use $ we can write it as sqrt $ 3 + 4 + 9 because $ has the lowest precedence of any operator. That\u0026rsquo;s why you can imagine a $ being sort of the equivalent of writing an opening parenthesis and then writing a closing one on the far right side of the expression.\n^ this clears up a lot!\nModules Note: the Prelude module is imported by default. Note: module paths are separated by .s, e.g. Data.List.\nimport Data.List (nub, sort) import Data.List hiding (nub) import qualified Data.Map -- if we want to reference Data.Map\u0026#39;s filter function, we have to -- do `Data.Map.filter` import qualified Data.Map as M -- `M.filter` module ModName ( -- must be same name as file.hs? MUST be capitalized exported , fn , names , Thing(..) -- all the value constructors for Thing ) where Multi-module groups are directories of ModName.hs files, imported like import GroupName.ModName.\nmaking our own types and typeclasses if we add deriving (Show) at the end of a data declaration, Haskell automagically makes that type part of the Show typeclass.\ndata Person = Person { firstName :: String , lastName :: String , age :: Int , height :: Float , phoneNumber :: String , flavor :: String } deriving (Show) type constructors can take types as parameters to produce new types\ndata Maybe a = Nothing | Just a -- type ^ parameter A type can be made an instance of a typeclass if it supports that behavior. Example: the Int type is an instance of the Eq typeclass because the Eq typeclass defines behavior for stuff that can be equated.\n\u0026ndash; derived instances\nWhen I talk about concrete types I mean like fully applied types\nSo concrete types don\u0026rsquo;t have any free type parameters, but type constructors may have further free type parameters.\nclass Eq equatable where ... ^ this is how to define a typeclass, noting that equatable is a type parameter.\nclass (Eq a) =\u0026gt; Num a where ... instance Eq (Maybe m) where ... ^ defining instances / implementations of a typeclass.\nthe Functor typeclass, which is basically for things that can be mapped over. \u0026hellip;\nclass Functor f where fmap :: (a -\u0026gt; b) -\u0026gt; f a -\u0026gt; f b the f is not a concrete type (a type that a value can hold, like Int, Bool or Maybe String), but a type constructor that takes one type parameter.\nThis is enough for me to read further, so I\u0026rsquo;m stopping for now.\n","permalink":"https://skalt.github.io/til/2023/05/29/","tags":["haskell"]},{"content":"That there\u0026rsquo;s a Linux command to do sql-like JOINs of lines in files, possibly based on a field in each line: join(1)\n","permalink":"https://skalt.github.io/til/2023/05/30/","tags":["sh","shell","bash","linux","join"]},{"content":" WebDAV (Web Distributed Authoring and Versioning) is a set of extensions to the Hypertext Transfer Protocol (HTTP)[. WebDAV provides] concurrency control and namespace operations \u0026hellip; WebDAV is defined in IETF RFC 4918.\n\u0026ndash; https://en.wikipedia.org/wiki/WebDAV\nApparently, Bazel, Gradle, and CCache all have support for a WebDAV-based remote cache: https://github.com/mozilla/sccache/blob/main/docs/Webdav.md\n","permalink":"https://skalt.github.io/til/2023/05/31/","tags":["webdav"]},{"content":"That k8s can run \u0026ldquo;init containers\u0026rdquo; before a pod\u0026rsquo;s app containers: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/. This provides setup-script functionality, and Cloudflare Pages uses multiple init containers for cloning, installing toolchains, and building pages: https://blog.cloudflare.com/moderizing-cloudflare-pages-builds-toolbox/#our-modular-and-scalable-architecture\n","permalink":"https://skalt.github.io/til/2023/06/04/","tags":["k8s"]},{"content":"SPF (Sender Policy Framework) records are DNS TXT records like v=spf1 _include=${email_server_domain} ~all. SPF records help email servers verify that another email server is allowed to send messages from a domain (e.g. foo@domain.com should only be sent by servers listed in an SPF record on a DNS server with authority over domain.com). More info at https://www.cloudflare.com/learning/dns/dns-records/dns-spf-record/\nDKIM is another TXT record that issues public keys to check signature headers in email: https://www.cloudflare.com/learning/dns/dns-records/dns-dkim-record/\n","permalink":"https://skalt.github.io/til/2023/06/05/","tags":["email","dns","spf","dkim"]},{"content":"That\nuuids are 128 bits long in uuid v1, only the first 8 hex digits (32 bits) are randomly generated in uuid v4, the entire 128 bits are randomly generated uuid v5 derives all 128 bits deterministically from the hash of a seed uuid and some input bytes See https://www.sohamkamani.com/uuid-versions-explained/\n","permalink":"https://skalt.github.io/til/2023/06/13/","tags":["uuid"]},{"content":"By default, a closure seems to live as long as its parent function unless you use the move keyword.\nfn unmoved\u0026lt;\u0026#39;a\u0026gt;(arg: \u0026amp;\u0026#39;a str) -\u0026gt; impl Fn() + \u0026#39;a { let f = || println!(\u0026#34;unmoved: {}\u0026#34;, arg); f } fn moved\u0026lt;\u0026#39;a\u0026gt;(arg: \u0026amp;\u0026#39;a str) -\u0026gt; impl Fn() + \u0026#39;a { let f = move || println!(\u0026#34;moved: {}\u0026#34;, arg); f } fn main() { unmoved(\u0026#34;a\u0026#34;)() // does not compile moved(\u0026#34;b\u0026#34;)() // works fine } \u0026ndash; playground link\n","permalink":"https://skalt.github.io/til/2023/06/18/","tags":["rust","closure","move"]},{"content":"That Option\u0026lt;T\u0026gt; costs ~1x the alignment value of T. I also learned Vec\u0026lt;T\u0026gt;\u0026rsquo;s size and alignment don\u0026rsquo;t reflect the size and alignment of T since the Vec is tracking an owned buffer on the heap which isn\u0026rsquo;t counted in the Vec\u0026rsquo;s own size.\nstruct Alone8(u8); // size= 1, align=1 struct Opt8(Option\u0026lt;u8\u0026gt;); // size= 2, align=1 struct Vec8(Vec\u0026lt;u8\u0026gt;); // size=24; align=8 struct Alone64(u64); // size= 8, align=8 struct Opt64(Option\u0026lt;u64\u0026gt;); // size=16, align=8 struct Vec64(Vec\u0026lt;u64\u0026gt;); // size=24; align=8 That Firefox bundles process and task managers for performance monitoring, available at about:processes and about:tasks, respectively https://support.mozilla.org/en-US/kb/task-manager-tabs-or-extensions-are-slowing-firefox\n","permalink":"https://skalt.github.io/til/2023/06/19/","tags":["rust","alignment","vec","opt","ff","firefox","perf"]},{"content":"That you can send texts to email and recieve emails from texts. When recieving an email from a text client, the emaio sender will be an email address at the text-sender\u0026rsquo;s carrier domain (e.g. +1234567890@carrier.domain).\n","permalink":"https://skalt.github.io/til/2023/06/22/","tags":["sms","email"]},{"content":"I guessed that not all data centers were created equal, but I hadn\u0026rsquo;t heard of an official ranking system before now.\nApparently the Uptime Institute provides international rankings of trustworthiness based on uptime guarantees, redundancy, security measures, etc.\nThe tiers of data centers:\nTier 1: A data center with a single path for power and cooling, and no backup components. This tier has an expected uptime of 99.671% per year.\nTier 2: A data center with a single path for power and cooling, and some redundant and backup components. This tier offers an expected uptime of 99.741% per year.\nTier 3: A data center with multiple paths for power and cooling, and redundant systems that allow the staff to work on the setup without taking it offline. This tier has an expected uptime of 99.982% per year.\nTier 4: A completely fault-tolerant data center with redundancy for every component. This tier comes with an expected uptime of 99.995% per year.\n\u0026ndash; https://phoenixnap.com/blog/data-center-tiers-classification\n","permalink":"https://skalt.github.io/til/2023/07/09/","tags":[]},{"content":"That in vscode, you can make your keypresses display on-screen using the \u0026ldquo;Developer: Toggle screencast mode\u0026rdquo; command.\n","permalink":"https://skalt.github.io/til/2023/07/10/","tags":["vscode"]},{"content":"How to create subtables in a table in an array in TOML: [table_name.subtable_name].\nAny reference to an array of tables points to the most recently defined table element of the array. This allows you to define sub-tables, and even sub-arrays of tables, inside the most recent table.\n\u0026ndash; https://toml.io/en/v1.0.0#array-of-tables\n","permalink":"https://skalt.github.io/til/2023/07/12/","tags":["toml"]},{"content":"Getting the top-level directory of the relevant git worktree #!/usr/bin/env bash # set up a dummy repo set -euo pipefail experiment_dir=\u0026#34;$(mktemp -d --tmpdir test_repo.XXX)\u0026#34; git clone --recurse-submodules git@github.com:SKalt/dummy_repo.git \u0026#34;$experiment_dir\u0026#34; cd \u0026#34;$experiment_dir\u0026#34; git pull --recurse-submodules=yes git checkout -b brnch \u0026amp;\u0026amp; git checkout - # set up a dummy branch git worktree add wrktr brnch # add a wortree cd wrktr \u0026amp;\u0026amp; git submodule update --init --recursive # init the recursive submodules in the worktree tree . . ├── LICENSE ├── nested │ └── file.txt ├── README.md ├── submod │ ├── LICENSE │ ├── nested │ │ └── file.txt │ ├── README.md │ └── submod │ ├── LICENSE │ ├── nested │ │ └── file.txt │ └── README.md └── wrktr ├── LICENSE ├── nested │ └── file.txt ├── README.md └── submod ├── LICENSE ├── nested │ └── file.txt ├── README.md └── submod ├── LICENSE ├── nested │ └── file.txt └── README.md 11 directories, 18 files tree .git ./.git ├── branches ├── config ├── description ├── HEAD ├── hooks/... ├── index ├── info/... ├── logs/... ├── modules │ └── submod │ ├── branches │ ├── config │ ├── description │ ├── HEAD │ ├── hooks/... │ ├── index │ ├── info/... │ ├── logs/... │ ├── modules │ │ └── submod │ │ ├── branches │ │ ├── config # \u0026lt;- contains relative path in core.worktree │ │ ├── description │ │ ├── HEAD │ │ ├── hooks/... │ │ ├── index │ │ ├── info/... │ │ ├── logs/... │ │ ├── objects/... │ │ ├── packed-refs │ │ └── refs/... │ ├── objects/... │ ├── packed-refs │ └── refs/... ├── objects/... ├── packed-refs ├── refs │ ├── heads │ │ ├── brnch │ │ └── main │ ├── remotes │ │ └── origin │ │ └── HEAD │ └── tags └── worktrees └── wrktr ├── commondir ├── gitdir ├── HEAD ├── index ├── logs │ └── HEAD ├── modules │ └── submod │ ├── branches │ ├── config │ ├── description │ ├── HEAD │ ├── hooks/... │ ├── index │ ├── info/... │ ├── logs/... │ ├── modules │ │ └── submod │ │ ├── branches │ │ ├── config │ │ ├── description │ │ ├── HEAD │ │ ├── hooks/... │ │ ├── index │ │ ├── info/... │ │ ├── logs/... │ │ ├── objects/... │ │ ├── packed-refs │ │ └── refs/... │ ├── objects/... │ ├── packed-refs │ └── refs/... └── ORIG_HEAD 91 directories, 133 files args=( --git-common-dir --git-dir --is-inside-git-dir --is-inside-work-tree --show-toplevel ); padding() { local delimiter=\u0026#34;$1\u0026#34; # must be 1ch local message=\u0026#34;$2\u0026#34; local width=\u0026#34;${3:-78}\u0026#34; printf -- \u0026#34;${delimiter}%.0s\u0026#34; $(seq 0 $(($width - ${#message}))) } header() { message=\u0026#34;$(printf \u0026#34;%s \u0026#34; \u0026#34;$1\u0026#34;)\u0026#34; echo printf \u0026#34;%s\u0026#34; \u0026#34;$message\u0026#34;; padding \u0026#34;#\u0026#34; \u0026#34;$message\u0026#34;; echo echo } indent() { padding \u0026#34; \u0026#34; \u0026#34;$1\u0026#34; 22; printf \u0026#34;%s = \u0026#34; \u0026#34;$1\u0026#34;; } explore() { local to_explore=\u0026#34;$1\u0026#34; { cd \u0026#34;$to_explore\u0026#34; header \u0026#34;$to_explore\u0026#34; for arg in \u0026#34;${args[@]}\u0026#34;; do indent \u0026#34;$arg\u0026#34;; git --no-pager rev-parse \u0026#34;$arg\u0026#34; 2\u0026gt;\u0026amp;1 || true; done indent \u0026#34;config#core.worktree\u0026#34; git --no-pager config core.worktree || echo \u0026#34;\u0026lt;missing\u0026gt;\u0026#34; indent \u0026#34;./config#core.worktree\u0026#34; 22 if [ -f ./config ]; then git --no-pager config --file ${PWD}/config core.worktree || echo \u0026#34;\u0026lt;missing\u0026gt;\u0026#34; else echo fi indent \u0026#34;./gitdir\u0026#34; if [ -f ./gitdir ]; then cat ./gitdir; else echo fi } | sed \u0026#39;s/^/# /g\u0026#39; | sed \u0026#34;s#${PWD}#\\${PWD}#g\u0026#34; } paths_to_explore=( \u0026#34;${PWD}\u0026#34; \u0026#34;${PWD}/nested\u0026#34; \u0026#34;${PWD}/.git\u0026#34; \u0026#34;${PWD}/.git/worktrees\u0026#34; \u0026#34;${PWD}/.git/worktrees/wrktr\u0026#34; \u0026#34;${PWD}/.git/worktrees/wrktr/modules/submod\u0026#34; \u0026#34;${PWD}/wrktr\u0026#34; \u0026#34;${PWD}/wrktr/submod\u0026#34; \u0026#34;${PWD}/submod\u0026#34; \u0026#34;${PWD}/.git/modules/submod\u0026#34; ) for p in \u0026#34;${paths_to_explore[@]}\u0026#34;; do explore \u0026#34;$p\u0026#34;; done # # ${PWD} ############################################################ # # --git-common-dir = .git # --git-dir = .git # --is-inside-git-dir = false # --is-inside-work-tree = true # --show-toplevel = ${PWD} # config#core.worktree = \u0026lt;missing\u0026gt; # ./config#core.worktree = # ./gitdir = # # ${PWD}/nested ##################################################### # # --git-common-dir = ../.git # --git-dir = ${PWD}/.git # --is-inside-git-dir = false # --is-inside-work-tree = true # --show-toplevel = ${PWD} # config#core.worktree = \u0026lt;missing\u0026gt; # ./config#core.worktree = # ./gitdir = # # ${PWD}/.git ####################################################### # # --git-common-dir = . # --git-dir = . # --is-inside-git-dir = true # --is-inside-work-tree = false # --show-toplevel = fatal: this operation must be run in a work tree # config#core.worktree = \u0026lt;missing\u0026gt; # ./config#core.worktree = \u0026lt;missing\u0026gt; # ./gitdir = # # ${PWD}/.git/worktrees ############################################# # # --git-common-dir = ${PWD}/.git # --git-dir = ${PWD}/.git # --is-inside-git-dir = true # --is-inside-work-tree = false # --show-toplevel = fatal: this operation must be run in a work tree # config#core.worktree = \u0026lt;missing\u0026gt; # ./config#core.worktree = # ./gitdir = # # ${PWD}/.git/worktrees/wrktr ####################################### # # --git-common-dir = ${PWD}/.git # --git-dir = . # --is-inside-git-dir = true # --is-inside-work-tree = false # --show-toplevel = fatal: this operation must be run in a work tree # config#core.worktree = \u0026lt;missing\u0026gt; # ./config#core.worktree = # ./gitdir = ${PWD}/wrktr/.git # # ${PWD}/.git/worktrees/wrktr/modules/submod ######################## # # --git-common-dir = . # --git-dir = . # --is-inside-git-dir = false # --is-inside-work-tree = false # --show-toplevel = ${PWD}/wrktr/submod # config#core.worktree = ../../../../../wrktr/submod # ./config#core.worktree = ../../../../../wrktr/submod # ./gitdir = # # ${PWD}/wrktr ###################################################### # # --git-common-dir = ${PWD}/.git # --git-dir = ${PWD}/.git/worktrees/wrktr # --is-inside-git-dir = false # --is-inside-work-tree = true # --show-toplevel = ${PWD}/wrktr # config#core.worktree = \u0026lt;missing\u0026gt; # ./config#core.worktree = # ./gitdir = # # ${PWD}/wrktr/submod ############################################### # # --git-common-dir = ${PWD}/.git/worktrees/wrktr/modules/submod # --git-dir = ${PWD}/.git/worktrees/wrktr/modules/submod # --is-inside-git-dir = false # --is-inside-work-tree = true # --show-toplevel = ${PWD}/wrktr/submod # config#core.worktree = ../../../../../wrktr/submod # ./config#core.worktree = # ./gitdir = # # ${PWD}/submod ##################################################### # # --git-common-dir = ${PWD}/.git/modules/submod # --git-dir = ${PWD}/.git/modules/submod # --is-inside-git-dir = false # --is-inside-work-tree = true # --show-toplevel = ${PWD}/submod # config#core.worktree = ../../../submod # ./config#core.worktree = # ./gitdir = # # ${PWD}/.git/modules/submod ######################################## # # --git-common-dir = . # --git-dir = . # --is-inside-git-dir = false # --is-inside-work-tree = false # --show-toplevel = ${PWD}/submod # config#core.worktree = ../../../submod # ./config#core.worktree = ../../../submod # ./gitdir = explore_tab() { local to_explore=\u0026#34;$1\u0026#34; { cd \u0026#34;$to_explore\u0026#34; printf \u0026#39;|`%s`\u0026#39; \u0026#34;$to_explore\u0026#34; for arg in \u0026#34;${args[@]}\u0026#34;; do _result=\u0026#34;$(git --no-pager rev-parse \u0026#34;$arg\u0026#34; 2\u0026gt;\u0026amp;1 || true)\u0026#34; printf \u0026#39;|`%s`\u0026#39; \u0026#34;$_result\u0026#34; done # config#core.worktree printf \u0026#39;|`%s`\u0026#39; \u0026#34;$(git --no-pager config core.worktree || echo \u0026#34;\u0026lt;missing\u0026gt;\u0026#34;)\u0026#34; # ./config#core.worktree printf \u0026#39;|\u0026#39; if [ -f ./config ]; then printf \u0026#39;`%s`\u0026#39; \u0026#34;$( git --no-pager config --file ${PWD}/config core.worktree || echo \u0026#34;\u0026lt;missing\u0026gt;\u0026#34; )\u0026#34; fi # ./gitdir printf \u0026#34;|\u0026#34; if [ -f ./gitdir ]; then printf \u0026#39;`%s`\u0026#39; \u0026#34;$(cat ./gitdir)\u0026#34;; fi echo \u0026#34;|\u0026#34; } } _headers=( \u0026#34;pwd\u0026#34; \u0026#34;${args[@]}\u0026#34; \u0026#34;config#core.worktree\u0026#34; ./config#core.worktree ./gitdir ) for i in \u0026#34;${_headers[@]}\u0026#34;; do printf \u0026#39;|`%s`\u0026#39; \u0026#34;$i\u0026#34;; done echo \u0026#34;|\u0026#34; for i in \u0026#34;${_headers[@]}\u0026#34;; do printf \u0026#34;|-\u0026#34;; done echo \u0026#34;|\u0026#34; for p in \u0026#34;${paths_to_explore[@]}\u0026#34;; do explore_tab \u0026#34;$p\u0026#34; | sed \u0026#34;s#${PWD}#\\${PWD}#g\u0026#34;; done pwd --git-common-dir --git-dir --is-inside-git-dir --is-inside-work-tree --show-toplevel config#core.worktree ./config#core.worktree ./gitdir ${PWD} .git .git false true ${PWD} \u0026lt;missing\u0026gt; ${PWD}/nested ../.git ${PWD}/.git false true ${PWD} \u0026lt;missing\u0026gt; ${PWD}/.git . . true false fatal: this operation must be run in a work tree \u0026lt;missing\u0026gt; \u0026lt;missing\u0026gt; ${PWD}/.git/worktrees ${PWD}/.git ${PWD}/.git true false fatal: this operation must be run in a work tree \u0026lt;missing\u0026gt; ${PWD}/.git/worktrees/wrktr ${PWD}/.git . true false fatal: this operation must be run in a work tree \u0026lt;missing\u0026gt; ${PWD}/wrktr/.git ${PWD}/.git/worktrees/wrktr/modules/submod . . false false ${PWD}/wrktr/submod ../../../../../wrktr/submod ../../../../../wrktr/submod ${PWD}/wrktr ${PWD}/.git ${PWD}/.git/worktrees/wrktr false true ${PWD}/wrktr \u0026lt;missing\u0026gt; ${PWD}/wrktr/submod ${PWD}/.git/worktrees/wrktr/modules/submod ${PWD}/.git/worktrees/wrktr/modules/submod false true ${PWD}/wrktr/submod ../../../../../wrktr/submod ${PWD}/submod ${PWD}/.git/modules/submod ${PWD}/.git/modules/submod false true ${PWD}/submod ../../../submod ${PWD}/.git/modules/submod . . false false ${PWD}/submod ../../../submod ../../../submod pwd --git-common-dir --git-dir --is-inside-git-dir --is-inside-work-tree --show-toplevel config#core.worktree ./config#core.worktree ./gitdir ${PWD}/.git . . true false fatal: this operation must be run in a work tree \u0026lt;missing\u0026gt; \u0026lt;missing\u0026gt; ${PWD}/.git/worktrees ${PWD}/.git ${PWD}/.git true false fatal: this operation must be run in a work tree \u0026lt;missing\u0026gt; ${PWD}/.git/worktrees/wrktr ${PWD}/.git . true false fatal: this operation must be run in a work tree \u0026lt;missing\u0026gt; ${PWD}/wrktr/.git ${PWD}/.git/worktrees/wrktr/modules/submod . . false false ${PWD}/wrktr/submod ../../../../../wrktr/submod ../../../../../wrktr/submod ${PWD}/.git/modules/submod . . false false ${PWD}/submod ../../../submod ../../../submod ","permalink":"https://skalt.github.io/til/2023/07/30/","tags":["git","git-worktree","git-submodule"]},{"content":"On ubuntu:\n# X11 keyboard options contain the codes that can be passed as options man xkeyboard-config # dconf controls how your keyboard(s) behave -- including lighting the caps-lock # indicator dconf_opts=\u0026#34;/org/gnome/desktop/input-sources/xkb-options\u0026#34; dconf read $dconf_opts dconf write $dconf_opts \u0026#34;[$values]\u0026#34; # where values are taken from `man xkeyboard-config` # notably, dconf\u0026#39;s settings clobber those set by `setxkbmap` and # `/etc/default/keyboard`\u0026#39;s XKBOPTIONS variable setxkbmap -query # prints the current key-map settings setxkbmap -option $values # \u0026lt;- these changes show up in Settings\u0026gt;Keyboard\u0026gt;${CurrentLayout} cat /etc/default/keyboard | grep XKBOPTIONS xev # opens a window and prints the events it sees -- including keypress events # with key codes https://unix.stackexchange.com/a/331210/234355\n","permalink":"https://skalt.github.io/til/2023/08/02/","tags":["x11","keyboard","dconf"]},{"content":"sqlite3 has a .import [--csv] [--skip 1] FILE [TABLE] meta-command (docs). Also, for some reason my version of sqlite3 doesn\u0026rsquo;t respect any flags.\nAlso, sqlite3 has a .dump meta-command that out puts pure SQL (plus a few sqlite PRAGMAs): docs\n","permalink":"https://skalt.github.io/til/2023/08/08/","tags":["sqlite","import","dump"]},{"content":"That you can cancel/reset timeouts in JS using clearTimeout\n","permalink":"https://skalt.github.io/til/2023/08/09/","tags":["js","timeout","setTimeout","clearTimeout"]},{"content":"That the authorative database of top-level domains is published by the IANA at https://www.iana.org/domains/root/db\n","permalink":"https://skalt.github.io/til/2023/08/18/","tags":["dns","iana"]},{"content":"That there\u0026rsquo;s a JSON schema for job postings that usually gets included in job-posting pages as a \u0026lt;script type=\u0026quot;application/ld+json\u0026quot;\u0026gt;.\n","permalink":"https://skalt.github.io/til/2023/08/20/","tags":["schema.org","jobPosting"]},{"content":"That sometimes ssh sessions with x-forwarding don\u0026rsquo;t unlock the GNOME \u0026ldquo;login\u0026rdquo; keyring. This can lead to \u0026ldquo;Cannot create an item in a locked collection\u0026rdquo; errors. The way to fix the problem is to:\nprintf \u0026#34;password: \u0026#34; read -s password printf \u0026#34;%s\u0026#34; \u0026#34;$password\u0026#34; | gnome-keyring-daemon --replace --unlock ","permalink":"https://skalt.github.io/til/2023/08/26/","tags":["ssh","keyring","gnome"]},{"content":"(1) that gnu ld, part of gnu\u0026rsquo;s binutils suite, is the de-facto standard interface for linker CLIs. Thus, all of gold (elf-only ld), mold/sold, and lld also try to expose ld-compatible CLIs.\n(2) that ld has several modes of adding a build id to an executable:\n--build-id[=style]\n[Create a ] .note.gnu.build-id ELF note section or a .buildid COFF section. The contents of the note are unique bits identifying this linked file. style can be\nuuid to use 128 random bits, sha1 to use a 160-bit SHA1 hash on the normative parts of the output contents, md5 to use a 128-bit MD5 hash on the normative parts of the output contents, or 0xHEXSTRING to use a chosen bit string specified as an even number of hexadecimal digits (- and : characters between digit pairs are ignored). If style is omitted, sha1 is used.\nlld adds a --build-id=tree style as an alias for --build-id=sha1, and an extra --build-id=fast style.\nmold add a --build-id=sha256 style and defaults to that.\n","permalink":"https://skalt.github.io/til/2023/09/08/","tags":["linker","debuginfo","ld","build-id"]},{"content":"To add JSON schema validation to e.g. Cargo.toml files in VSCode using tamasfe.even-better-toml, you can add a special comment:\n#:schema https://json.schemastore.org/cargo.json # see https://taplo.tamasfe.dev/configuration/directives.html#the-schema-directive That there\u0026rsquo;s such a thing as \u0026ldquo;canadian compilation\u0026rdquo;:\nIf build, host, and target are all the same, this is called a native. If build and host are the same but target is different, this is called a cross. If build, host, and target are all different this is called a canadian (for obscure reasons dealing with Canada’s political party and the background of the person working on the build at that time).\n\u0026ndash; https://gcc.gnu.org/onlinedocs/gccint/Configure-Terms.html\n","permalink":"https://skalt.github.io/til/2023/09/09/","tags":["toml","vscode","better-toml","gcc","autoconf","canadian"]},{"content":" Start typing your search with\u0026hellip;\n^ to show only matches in your browsing history.\n* to show only matches in your bookmarks.\n+ to show only matches in bookmarks you’ve tagged.\n% to show only matches in your currently open tabs.\n# to show only matches where every search term is part of the title or part of a tag.\n$ to show only matches where every search term is part of the web address (URL). The text https:// or http:// in the URL is ignored but not file:///.\nAdd ? to show only search suggestions.\nHitting Ctrl-enter in the URL bar works like autocomplete;\u0026ldquo;mozilla\u0026rdquo; go straight to www.mozilla.com, for example. Shift-enter will open a URL in a new tab.\n\u0026ndash; https://exple.tive.org/blarg/2020/10/25/navigational-instruments/\nalso, about:crashparent is an intentional crash in case you want to restart the browser.\nSee also: https://support.mozilla.org/en-US/kb/address-bar-autocomplete-firefox\n","permalink":"https://skalt.github.io/til/2023/09/12/","tags":["firefox"]},{"content":"The meaning of the tags\n#LI-Remote: Remote #LI-Hybrid: Hybrid #LI-Onsite: Onsite #LI-DNI: To prevent jobs from displaying on LinkedIn completely. (DNI = Do Not Ingest) #LI-DNP: To prevent jobs from filling a job slot, use this tag or use the ‘block job’ functionality. \u0026ndash; https://www.reddit.com/r/AskHR/comments/ifrayb/what_does_liremote_in_a_job_description_mean/\n","permalink":"https://skalt.github.io/til/2023/09/20/","tags":["job posting","linkedin"]},{"content":"How to position an element relative to its parent without affecting the flow of other sibling elements:\nyou\u0026rsquo;re most likely interested in position: absolute which will position an element relative to a container. By default, the container is the browser window, but if a parent element either has position: relative or position: absolute set on it, then it will act as the parent for positioning coordinates for its children.\n\u0026ndash; https://stackoverflow.com/a/105035/6571327\nSee also: https://developer.mozilla.org/en-US/docs/Web/CSS/position#relative\n","permalink":"https://skalt.github.io/til/2023/09/22/","tags":["css"]},{"content":" Acronym Meaning DSO distribution system operators AGR aggregator TSO transmission system operator MCM market-based coordination mechanism \u0026ndash; https://lfenergy.org/projects/shapeshifter/\n","permalink":"https://skalt.github.io/til/2023/09/25/","tags":["LF Energy","acronym","TLA"]},{"content":" Executables, dynamic libraries and debug companions on all Apple platforms use the Mach Object, or short Mach-O, container format. This applies to iOS, iPadOS, tvOS, watchOS, and macOS.\nExecutables do not carry a file extension. For desktop applications, they are often placed in app bundle structures with the .app suffix. Unless stripped manually, executables contain unwind information and a symbol table. Debug information is never stored in executables. Dynamic Libraries use the .dylib extension, and otherwise behave exactly the same as executables. Debug Companions are placed in a folder structure with the .dSYM extension, and are located at \u0026lt;name\u0026gt;.dSYM/Contents/Resources/DWARF/\u0026lt;name\u0026gt;. They usually contain a symbol table and debug information, but rarely unwind information. \u0026ndash; https://docs.sentry.io/platforms/apple/data-management/debug-files/file-formats/\n","permalink":"https://skalt.github.io/til/2023/09/28/","tags":["MachO","dSYM"]},{"content":"That out of ~51672 extensions on the VSCode marketplace, there are only 31 that are marked as commercial software: \u0026ldquo;Trial\u0026rdquo; rather than \u0026ldquo;Free\u0026rdquo;.\n# date extension publisher license kind 1 2020-04-18 Redis Weijan Chen MIT db 2 2020-04-21 SSH Client Weijan Chen MIT db 3 2020-05-05 MySQL Weijan Chen MIT db 4 2021-01-27 ElasticSearch Weijan Chen MIT db 5 2021-01-27 PostgreSQL Weijan Chen MIT db 6 2021-02-05 Database Client Weijan Chen MIT db 7 2021-06-20 JS Refactoring Assistant P42 MIT ai 8 2021-06-29 GitHub Copilot GitHub commercial ai 9 2021-11-22 Local CI Local CI GPL-2 tool 10 2021-12-01 SQl Server Client(mssql) Weijan Chen MIT db 11 2022-01-18 DVT IDE for Visual Studio Code AMIQ EDA s.r.l. commercial tool 12 2022-06-27 TestExtension Prashant experiment 13 2022-11-09 GitHub Copilot Voice GitHub commercial ai 14 2022-11-25 UPG Code Generator for VS Code GPT Labs commercial ai 15 2022-12-14 SkyCode singularity-ai commercial ai 16 2023-01-01 Software Testing AI Software Testing AI ai 17 2023-01-06 arandomtheme MiloTilo experiment 18 2023-01-19 CodeAssist CodeAssist ai 19 2023-01-27 DuckDB Sql Tools Random Fractals Inc. commercial db 20 2023-03-28 Polyverse Boost AI: Complexity Simplified Polyverse Corporation commercial ai 21 2023-04-12 Merlin: GPT Assistant for VS Code Spellcraft commercial ai 22 2023-04-27 GitHub Copilot Chat GitHub commercial ai 23 2023-07-03 Grappl Grappl commercial tool 24 2023-07-16 Bask Scious commercial dsl 25 2023-07-17 Data Sync Nguyen Ngoc Long MIT db 26 2023-07-19 FnMap yicode.tech GPL-3 tool 27 2023-08-10 Taskfy Taskfy commercial tool The paying for use of an extension is usually predicated on using a remote API (i.e. remote LLM services) using a paid API key or a subscription associated with an OIDC identity (e.g. a GitHub user account). Most common yet is no monetization scheme, which is understandable \u0026ndash; setting up payments isn\u0026rsquo;t trivial. However, occasionally monetization schemes occasionally appear:\nextension publisher license payment Database Client Weijan Chen MIT On site, with API call for subscription check DuckDB Sql Tools Random Fractals Inc. commercial GitHub sponsors (probably not checked) Data Sync Nguyen Ngoc Long MIT various sponsors (probably not checked) DVT IDE AMIQ EDA s.r.l. commercial On-site license purchase Local CI Local CI GPL-2 subscription on website; issues license keys ","permalink":"https://skalt.github.io/til/2023/10/03/","tags":["vscode"]},{"content":"About the hot-off-the-press OAuth2 DPoP specification: https://datatracker.ietf.org/doc/html/rfc9449. DPoP is a \u0026ldquo;sender constraint\u0026rdquo;: a way of checking that the sender of an access (JW) token is the same as the entity to whom the access token was issued.\nMy simplified understanding of DPoP is as follows:\nthe client generates a private/public key pair the client generates a request for an access token. The request includes: the client\u0026rsquo;s public key the the authorization endpoint\u0026rsquo;s URL the client signs the request with the client\u0026rsquo;s private key the authorization server validates the request (signature and all) and issues an access (JW) token including the thumbprint of the client\u0026rsquo;s public key. As is normal in OAuth2, the access token is signed by the authorization server\u0026rsquo;s private key. the client generates a new proof including the client\u0026rsquo;s public key and the intended API endpoint, attaches that to the access token (remember, the access token also includes the thumbprint of the client\u0026rsquo;s public key). The client sends the proof and access token to the API. The API validates the proof was signed by the client\u0026rsquo;s public key the client\u0026rsquo;s public key matches the thumbprint in the access token and the access key was signed by the and the authorization server\u0026rsquo;s public key This seems much easier to manage than MTLS, which (I think) involves maintaining long-lived X509 certificates, signing infrastructure, and chains of trust.\n","permalink":"https://skalt.github.io/til/2023/10/09/","tags":["oauth2","dpop"]},{"content":"\u0026ldquo;relationship-based access control model (ReBAC).\u0026rdquo;\n","permalink":"https://skalt.github.io/til/2023/10/17/","tags":["authn","authz","auth"]},{"content":" RFCs are labeled with different statuses:\nInternet Standard (e.g. HTTP/1.1) Proposed Standard (e.g. HTTP/3, HTTP/2) Best Current Practice Experimental Informational Historic [\u0026hellip;]\nRFCs usually begin as Internet-Drafts (I-Ds) written by an individual or a small group. In the IETF, these are then usually adopted by a working group, and improved and revised.\n\u0026ndash; https://www.ietf.org/standards/rfcs/\nClass fields are public by default, but private class members can be created by using a hash # prefix. The privacy encapsulation of these class features is enforced by JavaScript itself.\n\u0026ndash; https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields\n","permalink":"https://skalt.github.io/til/2023/10/18/","tags":["ietf","rfc","js"]},{"content":"First, that hugo supports goat ascii diagrams out-of-the box.\nSecond, about OAuth 2.0 authentication + authorization flows:\nAuthorization Code Flow From https://tools.ietf.org/html/rfc6749#section-4.1 and https://auth0.com/docs/get-started/authentication-and-authorization-flow/authorization-code-flow\nU U s s e c e r l r i c k l o g C i C l n l i i e P O e n O r T n t S e P t T d , A i c c r c c l e l e i c i s e t e s n L n t t o t t o g o I I k D I i O D e , d n T , n P t P , r o c e l I d I i D i d e A r P n t A u e t o u t c k t h t s e h o e n o r U c r i R r i z I e z a t a t t i i o o n I n D S S e t e r o r v k v e e e r n r I I d d P P Note: IdP = \u0026ldquo;Identity Provider\u0026rdquo;. Also note that the OAuth 2.0 spec separates the user from the \u0026ldquo;user-agent\u0026rdquo;, which is typically the browser. For my notes I\u0026rsquo;m calling the human user the same thing as their browser.\nAuthorization Code flow with Proof Key for Code Exchange (PKCE) Specified in https://www.rfc-editor.org/rfc/rfc7636 See also: https://auth0.com/docs/get-started/authentication-and-authorization-flow/authorization-code-flow-with-proof-key-for-code-exchange-pkce\nU U s s e c e r l r i c k l o g C i C l n l i i e P e n O n t S t T c l i e r n e t d i A I r c D e O c , c T e t P s r , s e t L d o o c t i g o o r I O d k e d i T e e c P n P n t t v , o e U r I R I i D I d f , P i t e o c r k o e d n e A c A u h u t a t h l h o l o r e r i n i z g z a e a t t i i o o n I n D S S e t e r o r v k v e e e r n r I I d d P P Note that the \u0026ldquo;code challenge\u0026rdquo; and \u0026ldquo;code verifier\u0026rdquo; are roughly equivalent to public and private keys, respectively. However, no specific cryptographic method is specified. The \u0026ldquo;code challenge\u0026rdquo; might be the hash of the \u0026ldquo;code validator\u0026rdquo;, etc.\nDifferences with vanilla Authorization Code Flow --- Authorization code flow +++ Authorization code flow with PKCE @@ -1,8 +1,8 @@ User -\u0026gt; Client : click login -Client -\u0026gt; Authorization Server : POST client ID, redirect URI +Client -\u0026gt; Authorization Server : POST client ID, redirect URI, code challenge Authorization Server -\u0026gt; User : redirect to IdP User -\u0026gt; IdP : Log into IdP IdP -\u0026gt; Authorization Server : ID token Authorization Server -\u0026gt; Client : OTP -Client -\u0026gt; Authorization Server : OTP, client ID, client secret +Client -\u0026gt; Authorization Server : OTP, code verifier Authorization Server -\u0026gt; Client : Access token, ID token ","permalink":"https://skalt.github.io/til/2023/10/20/","tags":["goat","OAuth2","OIDC"]},{"content":"About the three VCard specifications:\n2.1 3.0 4.0 (2011) I also learned that iPhones can import contacts from a v4.0-formatted vcf file, but a (Samsung) android phne will only import portions of the same file. Exporting contacts from my android phone seems to use v2.1.\n","permalink":"https://skalt.github.io/til/2023/10/23/","tags":["vcard"]},{"content":"That POSIX shell has configuration option, set -a or set -o allexport that exports all assigned variables. This simplifies using .env files in .envrc files:\n# evaluate a .env file, if it exists if [ -f .env ]; then set -a # assigning a variable exports the variable # shellcheck disable=SC1091 source .env set +a fi That JS has a String.raw template literal tag function that unescapes escape sequences in a backtick-string:\nString.raw`\\t\\r\\n` // =\u0026gt; \u0026#34;\\\\t\\\\r\\\\n\u0026#34; ","permalink":"https://skalt.github.io/til/2023/10/31/","tags":["sh","posix","js"]},{"content":"How to type a decorator function or decorator factory in Python: see https://mypy.readthedocs.io/en/stable/generics.html##declaring-decorators\n","permalink":"https://skalt.github.io/til/2023/11/02/","tags":["python","mypy","typing"]},{"content":"TL;DR: slap copyright comments on files and vendor licenses into a top-level LICENSES/${spdx_id}.${ext} directory.\nThe SPDX spec v2.3 references the REUSE spec v3.\nAlternatively, you can use aLicenseRef-custom license identifier to refer to a license that is not on the SPDX License List, such as the following:\nSPDX-License-Identifier: LicenseRef-my-special-license TheLicenseRef-format is defined in AnnexD. When using a customLicenseRef-identifier, you will also need to provide a way for others to determine what license text corresponds to it.Version 3.0 of the REUSE Software Specificationprovides a standardized format that can optionally be used for providing the corresponding license text for these identifiers.\nThe REUSE spec has the following interesting points:\nA Project MUST include a License File for every license under which Covered Files are licensed.\nEach License File MUST be placed in theLICENSES/directory in the root of the Project. The name of the License File MUST be the SPDX License Identifier of the license followed by an appropriate file extension (example:LICENSES/GPL-3.0-or-later.txt). The License File MUST be in plain text format.\nIf a license does not exist in the SPDX License List, its SPDX License Identifier MUST beLicenseRef-[idstring]as defined by the SPDX Specification, Section 6 \u0026hellip;\nEach Covered File MUST have Copyright and Licensing Information associated with it. There are two ways to associate Copyright and Licensing Information with a file.\nComment Headers To implement this method, each plain text file that can contain comments MUST contain comments at the top of the file (comment header) that declare that file’s Copyright and Licensing Information.\nIf a file is not a plain text file or does not permit the inclusion of comments, the comment header that declares the file’s Copyright and Licensing Information SHOULD be in an adjacent file of the same name with the additional extension.license(example:cat.jpg.licenseif the original file iscat.jpg).\nThe comment header MUST contain one or moreSPDX-FileCopyrightTexttags, and one or moreSPDX-License-Identifiertags. A tag is followed by a colon, followed by a text value, and terminated by a newline.\nInstead of the SPDX-FileCopyrightText tag, the symbol©, or the word Copyright MAY be used, in which case a colon is not needed.\n# SPDX-FileCopyrightText: 2016, 2018-2019 Jane Doe \u0026lt;jane@example.com\u0026gt; # SPDX-FileCopyrightText: 2019 Example Company # # SPDX-License-Identifier: GPL-3.0-or-later [\u0026hellip;]\n© Example Corporation \u0026lt;https://corp.example.com\u0026gt; Copyright 2016, 2018-2019 Joe Anybody Copyright (c) Alice Dep5 Alternatively, Copyright and Licensing Information MAY be associated with a file through a DEP5 file.[\u0026hellip;]\nThe DEP5 file MUST be nameddep5and stored in the.reuse/directory in the root of the Project (i.e..reuse/dep5).\nAn example of a DEP5 file:\nFormat: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/ Upstream-Name: Project Upstream-Contact: Jane Doe \u0026lt;jane@example.com\u0026gt; Source: https://example.com/jane/project Files: po/* Copyright: 2019 Translation Company License: GPL-3.0-or-later ","permalink":"https://skalt.github.io/til/2023/12/12/","tags":["copyright","reuse"]},{"content":"That\nAny value in an array may be semantically null, whether primitive or nested type.\n[\u0026hellip;]\nArrays having a 0 null count may choose to not allocate the validity bitmap; how this is represented depends on the implementation\n\u0026ndash; https://arrow.apache.org/docs/format/Columnar.html#null-count\nWhich is frustrating. I usually think of arrays or database columns as NOT NULL by default, so I\u0026rsquo;m disappointed that I need to watch out for that footgun again when writing in-memory DBs.\n","permalink":"https://skalt.github.io/til/2023/12/15/","tags":["arrow"]},{"content":"Turns out Rust does support Any-types and downcasting: see https://doc.rust-lang.org/std/any/index.html and https://doc.rust-lang.org/std/any/struct.TypeId.html .\n","permalink":"https://skalt.github.io/til/2023/12/23/","tags":["rust","TypeId"]},{"content":" Bayer and McCreight never explained what, if anything, the B stands for: Boeing, balanced, between, broad, bushy, and Bayer have been suggested. McCreight has said that \u0026ldquo;the more you think about what the B in B-trees means, the better you understand B-trees.\u0026rdquo;\n\u0026ndash; https://en.wikipedia.org/wiki/B-tree#History\n","permalink":"https://skalt.github.io/til/2023/12/24/","tags":["b-tree","etymology"]},{"content":" bit bucket n.\n(very common) 1. The universal data sink (originally, the mythical receptacle used to catch bits when they fall off the end of a register during a shift instruction). Discarded, lost, or destroyed data is said to have \u0026ldquo;gone to the bit bucket\u0026rdquo;. On Unix, often used for /dev/null. Sometimes amplified as \u0026ldquo;the Great Bit Bucket in the Sky\u0026rdquo;.\nThe place where all lost mail and news messages eventually go. [\u0026hellip;] The ideal location for all unwanted mail responses. Another variant of this legend has it that, as a consequence of the \u0026ldquo;parity preservation law\u0026rdquo;, the number of 1 bits that go to the bit bucket must equal the number of 0 bits. Any imbalance results in bits filling up the bit bucket. A qualified computer technician can empty a full bit bucket as part of scheduled maintenance.\n\u0026ndash; https://www.gutenberg.org/files/3008/3008-h/3008-h.htm#bitbucket\n","permalink":"https://skalt.github.io/til/2024/01/03/","tags":["etymology"]},{"content":"That 401 Unauthorized responses are supposed to include a www-authenticate header with a value indicating how to obtain a valid token. See https://datatracker.ietf.org/doc/html/rfc6750#section-3 for more details.\n","permalink":"https://skalt.github.io/til/2024/01/28/","tags":["oauth2"]},{"content":"Typographic Units Absolute distance Name CSS Unit length Picas pc 1/6 inch Points pt 1/72 inches \u0026ndash; https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units\nFont-relative units em:\nIn metal type, the point size (and hence the em, from em quadrat) was equal to the line height of the metal body from which the letter rises. [\u0026hellip;] In some older texts, but not all, the em is defined, or said to have been defined, as the width of the capital \u0026lsquo;M\u0026rsquo; in the current typeface and point size. [\u0026hellip;] In [CSS] the em unit is the height of the font in nominal points or inches.\nIn digital type, the relationship of the height of particular letters to the em is arbitrarily set by the typeface designer. However, as a very rough guideline, an \u0026ldquo;average\u0026rdquo; font might have a cap height of 70% of the em, and an x-height of 48% of the em.\n\u0026ndash; https://en.wikipedia.org/wiki/Em_(typography)\nFont size of the parent, in the case of typographical properties like font-size, and font size of the element itself, in the case of other properties like width.\n\u0026ndash; MDN: CSS relative units\nhistorically the em unit was derived from the width of a capital \u0026ldquo;M\u0026rdquo; in a given typeface.\n\u0026ndash; MDN: CSS font-size\nex:\nx-height of the element\u0026rsquo;s font.\n\u0026ndash; MDN: CSS relative units\nwhen setting the font-size property using ex units, the font-size equals the x-height of the first available font used on the page.\n\u0026ndash; MDN: CSS font-size\nLines \u0026amp; measurements Cap height Cap height refers to the height of a typeface’s flat capital letters (such as M or I) measured from the baseline.\n\u0026ndash; Material Design: typographic properties reference\nascender _ cap height _______________ /\\ | median _ / \\ | / /\\ \\ | / ____ \\ | baseline _ /_/____\\_\\_|_ descender _ x-height X-height refers to the height of the lowercase x for a typeface, and it indicates how tall or short each glyph in a typeface will be.\n\u0026ndash; Material Design: typographic properties\nascender _ cap height _ median _____________ \\ \\/ / | \u0026gt; \u0026lt; | baseline ____/_/\\_\\_|_ descender _ Descender height ascender _ cap height _ median _ _ __ | \u0026#39;_ \\ | |_) | baseline______| .__/_____ | | | descender_____|_|______|_ Ascender height ascender _________ cap height _ | | | | median _ | |__ | \u0026#39;_ \\ | |_) | baseline _ |_.__/ descender _ Language categories For ease of internationalization, Google has categorized languages into three categories: English-like, tall, and dense.\nTall: Language scripts that require extra line height to accommodate larger glyphs \u0026hellip; like Arabic, Hindi, Telugu, Thai, and Vietnamese. Dense: Language scripts that require extra line height to accommodate larger glyphs but have different metrics from tall scripts. Includes Chinese, Japanese, and Korean. \u0026ndash; Material Design: Language categories\n","permalink":"https://skalt.github.io/til/2024/01/29/","tags":["typography","css"]},{"content":"That SQL implementations with recursive CTEs are Turing-complete! It makes sense: recursion and conditionals are all that is required for Turing completeness.\nSee https://learnsql.com/blog/sql-subquery-cte-difference/\n","permalink":"https://skalt.github.io/til/2024/01/31/","tags":["sql"]},{"content":"That a *.tiff file:\nwas specified in 1986 by a company later consumed by Adobe was originally intended for scanner interop starts with an 8-byte header that includes a 2-byte magic number, a 2-byte endianness flag, and a 4-byte pointer to the first Image File Directory entry the max tiff size is 2^32 bytes due to the u32 pointer size Each IFD starts with a u16 count of entries, then a sequence of 12-byte ields, then another 4-byte offset of the next IFD entry (0 = none) each IFD entry (= \u0026ldquo;field\u0026rdquo;) has a 2-byte tag, 2 bytes of field type, 4-byte count, and 4-byte offset of the value(s) of the field. values may occur pretty much anywhere in the file, even before the IFD each \u0026ldquo;subfile\u0026rdquo; may have one of several encodings (e.g. black/white, grayscale, rgb, etc) \u0026ndash; https://docs.fileformat.com/image/tiff/\n","permalink":"https://skalt.github.io/til/2024/02/05/","tags":["tiff"]},{"content":" In signal processing, the Nyquist rate, named after Harry Nyquist, is a value (in units of samples per second or hertz, Hz) equal to twice the highest frequency (bandwidth) of a given function or signal. When the function is digitized at a higher sample rate (see \u0026ldquo;Critical frequency\u0026rdquo;), the resulting discrete-time sequence is said to be free of the distortion known as aliasing.\n\u0026ndash; https://en.wikipedia.org/wiki/Nyquist_rate\nIn signal processing and related disciplines, aliasing is the overlapping of frequency components resulting from a sample rate below the Nyquist rate. This overlap results in distortion or artifacts when the signal is reconstructed from samples which causes the reconstructed signal to differ from the original continuous signal. Aliasing that occurs in signals sampled in time, for instance in digital audio or the stroboscopic effect, is referred to as temporal aliasing. Aliasing in spatially sampled signals (e.g., moiré patterns in digital images) is referred to as spatial aliasing.\n\u0026ndash; https://en.wikipedia.org/wiki/Aliasing\nAnti-aliasing means removing signal components that have a higher frequency than is able to be properly resolved by the recording (or sampling) device. This removal is done before (re)sampling at a lower resolution. When sampling is performed without removing this part of the signal, it causes undesirable artifacts such as black-and-white noise.\nThe anti-aliasing filter essentially blurs the image slightly in order to reduce the resolution to or below that achievable by the digital sensor (the larger the pixel pitch, the lower the achievable resolution at the sensor level).\n\u0026ndash; https://en.wikipedia.org/wiki/Spatial_anti-aliasing\nDot pitch (sometimes called line pitch, stripe pitch, or phosphor pitch) is a specification for a computer display, computer printer, image scanner, or other pixel-based devices that describe the distance, for example, between dots (sub-pixels) on a display screen.[1][2]\n\u0026ndash;\nIn the case of an RGB color display, the derived unit of pixel pitch is a measure of the size of a triad plus the distance between triads.\n\u0026ndash; https://en.wikipedia.org/wiki/Dot_pitch\n","permalink":"https://skalt.github.io/til/2024/02/08/","tags":["signal processing","aliasing"]},{"content":"That rust has built-in numeric types named like NonZero* that reserve the bit-pattern of 0 as a niche: see https://doc.rust-lang.org/core/num/index.html.\nThis is useful since that niche will absorb the cost of wrapping a NonZero int with Option:\nuse core::num::NonZeroU8; use std::mem::size_of; struct Struct\u0026lt;T\u0026gt;{ // has alignment 2, size 4 a: u16, b: T, } fn main() { println!(\u0026#34; NonZeroU8: {}\u0026#34;, size_of::\u0026lt;NonZeroU8\u0026gt;()); println!(\u0026#34; Option\u0026lt;NonZeroU8\u0026gt;: {}\u0026#34;, size_of::\u0026lt;Option\u0026lt;NonZeroU8\u0026gt;\u0026gt;()); println!(\u0026#34; Struct\u0026lt;NonZeroU8\u0026gt;: {}\u0026#34;, size_of::\u0026lt;Struct\u0026lt;NonZeroU8\u0026gt;\u0026gt;()); println!(\u0026#34;Option\u0026lt;Struct\u0026lt;NonZeroU8\u0026gt;: {}\u0026#34;, size_of::\u0026lt;Option\u0026lt;Struct\u0026lt;NonZeroU8\u0026gt;\u0026gt;\u0026gt;()); } # NonZeroU8: 1 # Option\u0026lt;NonZeroU8\u0026gt;: 1 # Struct\u0026lt;NonZeroU8\u0026gt;: 4 # Option\u0026lt;Struct\u0026lt;NonZeroU8\u0026gt;: 4 playground link\n","permalink":"https://skalt.github.io/til/2024/02/12/","tags":["rust","NonZero"]},{"content":"A more concise way to implement light/dark modes:\n:root { color-scheme: light dark; } which saves a few more bytes than my usual\n:root { --fg: #000; --bg: #fff; } @media (prefers-color-scheme: dark) { :root { --fg: #fff; --bg: #000; } } \u0026ndash; https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences\nI also learned that CSS has special syntax for systmem-provided colors, notably:\nCanvas: the default background color CanvasText: the default text color \u0026ndash; https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax\n","permalink":"https://skalt.github.io/til/2024/02/14/","tags":["css","color-scheme"]},{"content":"That CSS can adjust any font\u0026rsquo;s aspect value using font-size-adjust \u0026ndash; the ratio between the cap height and the x-height, NOT the aspect ratio.\n","permalink":"https://skalt.github.io/til/2024/02/19/","tags":["css","font-size-adjust"]},{"content":"That go mod tidy needs to be followed by go mod vendor to keep ./vendor/modules.txt up-to-date. That go mod vendor only pulls in files that are referenced by your current project.\nSee https://go.dev/ref/mod#vendoring\n","permalink":"https://skalt.github.io/til/2024/03/07/","tags":["go"]},{"content":"That OpenTelemetry HTTP reciever endpoints tend to have port 4318\n","permalink":"https://skalt.github.io/til/2024/03/08/","tags":["otel"]},{"content":"That you can add #![warn(missing_docs)] at the top of a lib.rs file to lint for undocumented public methods.\n","permalink":"https://skalt.github.io/til/2024/03/10/","tags":["rust","docs"]},{"content":"Common Platform Enumeration, a syntax for identifying \u0026ldquo;IT stuff\u0026rdquo;:\ncpe :\u0026lt;cpe_version\u0026gt; :\u0026lt;part\u0026gt; :\u0026lt;vendor\u0026gt; :\u0026lt;product\u0026gt; :\u0026lt;version\u0026gt; :\u0026lt;update\u0026gt; :\u0026lt;edition\u0026gt; :\u0026lt;language\u0026gt; :\u0026lt;sw_edition\u0026gt; :\u0026lt;target_sw\u0026gt; :\u0026lt;target_hw\u0026gt; :\u0026lt;other\u0026gt; Notably, part can only be a|h|o = app | hardware | OS, not \u0026ldquo;documentation\u0026rdquo;.\nSee https://en.wikipedia.org/wiki/Common_Platform_Enumeration\n","permalink":"https://skalt.github.io/til/2024/03/13/","tags":["cpe"]},{"content":" Alerts are an extension of Markdown used to emphasize critical information. On GitHub, they are displayed with distinctive colors and icons to indicate the importance of the content.\nAn example of all five types:\n\u0026gt; [!NOTE] \u0026gt; Highlights information that users should take into account, even when skimming. \u0026gt; [!TIP] \u0026gt; Optional information to help a user be more successful. [!IMPORTANT]\nCrucial information necessary for users to succeed.\n[!WARNING]\nCritical content demanding immediate user attention due to potential risks.\n[!CAUTION] Negative potential consequences of an action.\nSee https://github.com/orgs/community/discussions/16925\n","permalink":"https://skalt.github.io/til/2024/03/18/","tags":["github","markdown"]},{"content":"that depends_on: [ service ] waits for service to be started, not for service to be healthy.\nOn startup, Compose does not wait until a container is \u0026ldquo;ready\u0026rdquo;, only until it\u0026rsquo;s running.\nThe solution for detecting the ready state of a service is to use the condition attribute with one of the following options:\nservice_started service_healthy. This specifies that a dependency is expected to be “healthy”, which is defined with healthcheck, before starting a dependent service. service_completed_successfully. This specifies that a dependency is expected to run to successful completion before starting a dependent service. \u0026ndash; https://docs.docker.com/compose/startup-order/\n","permalink":"https://skalt.github.io/til/2024/03/21/","tags":["docker-compose"]},{"content":"The authoritative list of TLDs can be found at https://data.iana.org/TLD/tlds-alpha-by-domain.txt\n","permalink":"https://skalt.github.io/til/2024/03/25/","tags":["tld"]},{"content":"That you can specify an alternate .terraformrc file using the environment variable TF_CLI_CONFIG_FILE=$ABSOLUTE_PATH. This can help with local provider development. See https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file\n","permalink":"https://skalt.github.io/til/2024/03/26/","tags":["terraform","cli"]},{"content":"That BuildKit supports the using OpenTelemetry to trace builds with context from the $TRACEPARENT and $TRACESTATE environment variables (directly equivalent to their w3c header counterparts): https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41\n","permalink":"https://skalt.github.io/til/2024/04/03/","tags":["otel","buildkit"]},{"content":"That any function named func init(){ ... } runs on load of a module. See https://go.dev/ref/spec#Package_initialization. See also https://www.digitalocean.com/community/tutorials/understanding-init-in-go.\n","permalink":"https://skalt.github.io/til/2024/04/07/","tags":["go"]},{"content":"That select can only be used to race communications operations (e.g. \u0026lt;- myChan). See https://go.dev/ref/spec#Select_statements\n","permalink":"https://skalt.github.io/til/2024/04/08/","tags":["go"]},{"content":"That you can write\nfn foo\u0026lt;const N: usize\u0026gt;(arr: \u0026amp;[u8; N]) { todo!() } to specialize a function for different array sizes, etc. You can use the following types in const generics:\nu8, u16, u32, u64, u128, usize i8, i16, i32, i64, i128, isize char bool See https://doc.rust-lang.org/reference/items/generics.html#const-generics See also https://blog.cocl2.com/posts/const-currying-rs/\n","permalink":"https://skalt.github.io/til/2024/04/13/","tags":["rust","const generics"]},{"content":"That shasum(1) is implemented in perl: https://linux.die.net/man/1/shasum, though shaXXXsum et al. seem to be implemented in C: https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103\n","permalink":"https://skalt.github.io/til/2024/04/17/","tags":["shell"]},{"content":"That \u0026ldquo;SASL\u0026rdquo; stands for \u0026ldquo;Simple Authentication and Security Layer\u0026rdquo;, which may/not be a misnomer: it\u0026rsquo;s a set of challenges and responses that can be embedded within a protocol. Notably, one challenge is \u0026ldquo;OAUTHBEARER\u0026rdquo;, a standard Oauth 2.0 bearer token challenge.\nSee https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer See https://www.rfc-editor.org/rfc/rfc4422\n","permalink":"https://skalt.github.io/til/2024/04/18/","tags":["sasl"]},{"content":"That git will place a file with the (absolute?) path to the actual git dir if initialized with git init --separate-git-dir. This is intended as an FS-agnostic symlink.\nThe lesson here is to never assume repo/.git exists and is a directory; use\ngit rev-parse --absolute-git-dir docs\n","permalink":"https://skalt.github.io/til/2024/04/20/","tags":["git"]},{"content":"That Go has labels and can goto label. I\u0026rsquo;m not entirely sure what the usefulness of these is outside of switch statements, but it\u0026rsquo;s still cool!\n","permalink":"https://skalt.github.io/til/2024/04/22/","tags":["go","goto"]},{"content":"That you can add a [workspace.dependencies] table in your top-level Cargo.toml specifying paths to internal crates:\n# ${PROJECT_DIR}/Cargo.toml [workspace] members = [\u0026#34;path/to/my_crate\u0026#34;] [workspace.dependencies] my_crate = { path = \u0026#34;path/to/my_crate\u0026#34; } # ${PROJECT_DIR}/path/to/other_crate/Cargo.toml [dependencies] my_crate = { workspace = true} See https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table. See also https://doc.rust-lang.org/cargo/reference/workspaces.html.\nworkspace = true can also help share external dependencies within multiple internal crates; see https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace.\nAlso, that u32 and u64 don\u0026rsquo;t implement Into\u0026lt;usize\u0026gt;! I guess rust supports 16-bit pointer sizes.\n","permalink":"https://skalt.github.io/til/2024/04/27/","tags":["cargo","workspaces"]},{"content":"That zsh lazily+automatically loads scripts found in directories in $FPATH: https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/\n","permalink":"https://skalt.github.io/til/2024/05/03/","tags":["zsh"]},{"content":"That a go.work file can point to local \u0026ldquo;main modules\u0026rdquo; used for minimum-version selection. go will maintain a separate go.work.sum file with the checksums of the workspace\u0026rsquo;s dependencies. go work {init,use,edit} manages the work-files. $GOWORK pointing to a file named like *.work can switch between multiple workspace files. See https://go.dev/ref/mod#workspaces; the syntax of *.work files is roughly equivalent to the syntax in go.mod.\nThat none of the following options ensure unused debug info is not included in rust wasm output:\n[profile.release] opt-level = \u0026#34;z\u0026#34; lto = true codegen-units = 1 panic = \u0026#34;abort\u0026#34; Commenting each line and rebuilding with --target=wasm32-unknown-unknown --release resulted in 0% change in output .wasm size. In each experiment, twiggy garbage ./target/wasm*/release/my_lib.wasm reported\nBytes │ Size % │ Garbage Item ────────┼────────┼───────────────────────────────────────── 280220 ┊ 33.30% ┊ custom section \u0026#39;.debug_str\u0026#39; 181364 ┊ 21.55% ┊ custom section \u0026#39;.debug_info\u0026#39; 159353 ┊ 18.94% ┊ custom section \u0026#39;.debug_line\u0026#39; 96881 ┊ 11.51% ┊ custom section \u0026#39;.debug_pubnames\u0026#39; 87936 ┊ 10.45% ┊ custom section \u0026#39;.debug_ranges\u0026#39; 2030 ┊ 0.24% ┊ custom section \u0026#39;.debug_abbrev\u0026#39; 342 ┊ 0.04% ┊ custom section \u0026#39;.debug_pubtypes\u0026#39; 67 ┊ 0.01% ┊ custom section \u0026#39;producers\u0026#39; 28 ┊ 0.00% ┊ custom section \u0026#39;target_features\u0026#39; 808221 ┊ 96.05% ┊ Σ [9 Total Rows] I cut those sections out using the 2-year-old recipe from https://github.com/Xe/x/blob/c87eb51e0afe78a958eecaffb83318f91c6f78dd/web/mastosan/README.md:\nwasm-opt -oZ ... wasm-snip \\ --skip-producers-section \\ --snip-rust-panicking-code \\ --snip-rust-fmt-code \\ ... ","permalink":"https://skalt.github.io/til/2024/05/04/","tags":["go","workspaces","rust","wasm"]},{"content":"That hosting websites in S3 will redirect / to /index.html if you configure index.html as in index document: https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html\n","permalink":"https://skalt.github.io/til/2024/06/12/","tags":["s3"]},{"content":"That MAC can stand for \u0026ldquo;Message Authentication Code\u0026rdquo; in a security context.\n","permalink":"https://skalt.github.io/til/2024/06/13/","tags":["mac","acronym"]},{"content":"That you can use the .gitmodules document in the parent repo to configure a submodule to track a branch with the same name as the parent repo\u0026rsquo;s current branch:\nsubmodule..branch\n[\u0026hellip;] A special value of . is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository.\n\u0026ndash; https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch\n","permalink":"https://skalt.github.io/til/2024/06/17/","tags":["git","git-submodules"]},{"content":"That a cargo package can have only one library: see https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library.\n","permalink":"https://skalt.github.io/til/2024/06/23/","tags":["rust","cargo","config"]},{"content":"That Python mangles class attributes named like __name:\nPython mangles these names with the class name: if class Foo has an attribute named __a, it cannot be accessed by Foo.__a. (An insistent user could still gain access by calling Foo._Foo__a.) Generally, double leading underscores should be used only to avoid name conflicts with attributes in classes designed to be subclassed.\nNote: there is some controversy about the use of __names (see below).\n\u0026ndash; https://peps.python.org/pep-0008/#method-names-and-instance-variables\nDesigning for Inheritance Always decide whether a class’s methods and instance variables (collectively: “attributes”) should be public or non-public. If in doubt, choose non-public; it’s easier to make it public later than to make a public attribute non-public.\nPublic attributes are those that you expect unrelated clients of your class to use, with your commitment to avoid backwards incompatible changes. Non-public attributes are those that are not intended to be used by third parties; you make no guarantees that non-public attributes won’t change or even be removed.\nWe don’t use the term “private” here, since no attribute is really private in Python (without a generally unnecessary amount of work).\nAnother category of attributes are those that are part of the “subclass API” (often called “protected” in other languages). Some classes are designed to be inherited from, either to extend or modify aspects of the class’s behavior. When designing such a class, take care to make explicit decisions about which attributes are public, which are part of the subclass API, and which are truly only to be used by your base class.\nWith this in mind, here are the Pythonic guidelines:\nPublic attributes should have no leading underscores.\nIf your public attribute name collides with a reserved keyword, append a single trailing underscore to your attribute name. This is preferable to an abbreviation or corrupted spelling. (However, notwithstanding this rule, ‘cls’ is the preferred spelling for any variable or argument which is known to be a class, especially the first argument to a class method.)\nNote 1: See the argument name recommendation above for class methods.\nFor simple public data attributes, it is best to expose just the attribute name, without complicated accessor/mutator methods. Keep in mind that Python provides an easy path to future enhancement, should you find that a simple data attribute needs to grow functional behavior. In that case, use properties to hide functional implementation behind simple data attribute access syntax.\nNote 1: Try to keep the functional behavior side-effect free, although side-effects such as caching are generally fine.\nNote 2: Avoid using properties for computationally expensive operations; the attribute notation makes the caller believe that access is (relatively) cheap.\nIf your class is intended to be subclassed, and you have attributes that you do not want subclasses to use, consider naming them with double leading underscores and no trailing underscores. This invokes Python’s name mangling algorithm, where the name of the class is mangled into the attribute name. This helps avoid attribute name collisions should subclasses inadvertently contain attributes with the same name.\nNote 1: Note that only the simple class name is used in the mangled name, so if a subclass chooses both the same class name and attribute name, you can still get name collisions.\nNote 2: Name mangling can make certain uses, such as debugging and __getattr__(), less convenient. However the name mangling algorithm is well documented and easy to perform manually.\nNote 3: Not everyone likes name mangling. Try to balance the need to avoid accidental name clashes with potential use by advanced callers.\n\u0026ndash; https://peps.python.org/pep-0008/#designing-for-inheritance\n","permalink":"https://skalt.github.io/til/2024/07/05/","tags":["python"]},{"content":"That if you specify an Entry-points key in python .dist-info/METADATA, python will create command-line wrappers for your scripts.\nSee https://packaging.python.org/en/latest/specifications/entry-points/\n","permalink":"https://skalt.github.io/til/2024/08/04/","tags":["python","entry points"]},{"content":"That virtualenvs may contain two files that alter the sys.path outside of the $PYTHONPATH variable:\n.venv/pyvenv.cfg (see https://docs.python.org/3/library/sys_path_init.html#virtual-environments) .venv/python3.*/site-packages/*.pth (see https://docs.python.org/3/library/sys_path_init.html#pth-files) ","permalink":"https://skalt.github.io/til/2024/08/11/","tags":["python","pythonpath","sys.path","virtualenv"]},{"content":"That python dicts have an upsert method: https://docs.python.org/3/library/stdtypes.html#dict.setdefault\n","permalink":"https://skalt.github.io/til/2024/08/12/","tags":["python"]},{"content":"That go build ./path/to/main.go disregards other files in the same directory/package. go build ./path/to works fine.\n","permalink":"https://skalt.github.io/til/2024/08/19/","tags":["go"]},{"content":"This is embarrassingly late, but TIL that BOEM stands for the Bureau of Ocean Energy Management (https://www.boem.gov/)\n","permalink":"https://skalt.github.io/til/2024/08/23/","tags":["boem","wind","acronym"]},{"content":"That tsc --generateTrace can generate browser-devtools-compatible data for flamegraph analysis. See https://github.com/microsoft/TypeScript/wiki/Performance-Tracing\n","permalink":"https://skalt.github.io/til/2024/09/21/","tags":["typescript","perf"]},{"content":"That you an render code blocks in Go doc comments by indenting the lines of code:\n// Add two numbers. // this // is a // code block func Add(a, b int) int { return a + b } See https://tip.golang.org/doc/comment#code\n","permalink":"https://skalt.github.io/til/2024/09/24/","tags":["go","doc","code block"]},{"content":"That on windows, creating a virtualenv:\nsymlinks executables into $VIRTUAL_ENV/Scripts rather than $VIRTUAL_ENV/bin only creates a python.exe symlink, not a python3.exe symlink. See https://docs.python.org/3/library/venv.html#creating-virtual-environments\nLess exciting, but I also (re-)learned that setting a PYTHONPATH on windows requires using ; rather than : as the path-separator.\n","permalink":"https://skalt.github.io/til/2024/09/28/","tags":["python","windows","virtualenv"]},{"content":"That https://without.boats is named after a Michel Foucault quote:\n“In civilizations without boats, dreams dry up, espionage takes the place of adventure and the police take the place of pirates.”\n\u0026ndash; Michel Foucault \u0026ndash; https://www.goodreads.com/quotes/1082065-in-civilizations-without-boats-dreams-dry-up-espionage-takes-the\n","permalink":"https://skalt.github.io/til/2024/10/14/","tags":["quotes"]},{"content":"What an anycast IP is:\nAnycast is a network addressing and routing methodology in which a single IP address is shared by devices (generally servers) in multiple locations. Routers direct packets addressed to this destination to the location nearest the sender, using their normal decision-making algorithms, typically the lowest number of BGP network hops. Anycast routing is widely used by content delivery networks such as web and name servers, to bring their content closer to end users.\n\u0026ndash; https://en.wikipedia.org/wiki/Anycast\n","permalink":"https://skalt.github.io/til/2024/10/15/","tags":["anycast","networking"]},{"content":" which -a python # shows all matches on $PATH type python # checks if a builtin/alias/fn/exe\n\u0026ndash; https://wizardzines.com/comics/path-tips/\n","permalink":"https://skalt.github.io/til/2024/10/16/","tags":["sh","path"]},{"content":"That\nAn empty go.mod in a directory will cause that directory and all of its subdirectories to be excluded from the top-level Go module.\n\u0026ndash; https://go.dev/wiki/Modules#can-an-additional-gomod-exclude-unnecessary-content-do-modules-have-the-equivalent-of-a-gitignore-file\n","permalink":"https://skalt.github.io/til/2024/10/23/","tags":["go"]},{"content":"That OpenAPI 3.x.x definitions can also specify XML encodings: see https://spec.openapis.org/oas/v3.0.0#xml-object\n","permalink":"https://skalt.github.io/til/2024/11/13/","tags":["openapi","xml"]},{"content":"That the GPU I have in the Ubuntu workstation in my office isn\u0026rsquo;t compatible with ROCm, AMD\u0026rsquo;s GPU compatibility layer, or Vulkan. I was trying to run the binary for tabby locally. First, I looked up my graphics card:\n; lshw -c video # *-display # description: VGA compatible controller # product: Turks PRO [Radeon HD 7570] # vendor: Advanced Micro Devices, Inc. [AMD/ATI] # physical id: ... # bus info: pci@0000:01:00.0 # logical name: /dev/fb0 # version: 00 # width: 64 bits # clock: 33MHz # capabilities: vga_controller bus_master cap_list rom fb # configuration: depth=32 driver=radeon latency=0 resolution=2048,1080 # resources: irq:42 memory:e0000000-efffffff memory:f0020000-f003ffff ioport:e000(size=256) memory:c0000-dffff I followed a few false starts, during which I learned:\nCUDA is more or less NVIDIA-only using an incompatible video driver can stall Ubuntu boots :/ These are obvious in hindsight, but here are some of the commands I learned figuring out how I shot myself in the foot:\ngrep \u0026#39;GRUB_CMDLINE_LINUX\u0026#39; /etc/default/grub sudo vi /etc/default/grub # edit kernel flags cat /proc/cmdline # display kernel flags in **current** session update-grub # actually apply edited settings inxi -G # display graphics hardware sudo apt install inxi sudo apt install vulkan-tools vulkaninfo # display vulkan config. I finally found the smoking gun in a 2020 wiki post on old GPUs. Turns out the 7570 came out in 2012 \u0026ndash; while Vulkan was only standardized in 2016.\nThis is a bummer, but there\u0026rsquo;s a nonzero chance one of my other salvaged boxes have newer chips.\n","permalink":"https://skalt.github.io/til/2024/11/24/","tags":["amd","ml","gpus","linux"]},{"content":"That (1) go tries to bake VCS info into go binaries and (2) go still doesn\u0026rsquo;t understand git worktrees :/ and (3) the easiest way to get go builds to work in a git worktree or bare git repo is to\ngo env -w GOFLAGS=-buildvcs=false I\u0026rsquo;m not sure how global these flags are.\n","permalink":"https://skalt.github.io/til/2024/11/25/","tags":["go","GOFLAGS"]},{"content":"That the \u0026lt;del\u0026gt;/\u0026lt;ins\u0026gt; elements can be styled to create nice preformatted diffs: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins\n","permalink":"https://skalt.github.io/til/2024/12/09/","tags":["html"]},{"content":"That all the grief with css borders shifting the layout can be avoided by using outline instead:\nOutline is a line outside of the element\u0026rsquo;s border. Unlike other areas of the box, outlines don\u0026rsquo;t take up space, so they don\u0026rsquo;t affect the layout of the document in any way.\n\u0026ndash; https://developer.mozilla.org/en-US/docs/Web/CSS/outline#description\n","permalink":"https://skalt.github.io/til/2024/12/28/","tags":["css"]},{"content":"That you can configure git to use an alternative git directory using git config core.hooksPath as of git 2.9.\n","permalink":"https://skalt.github.io/til/2025/01/06/","tags":["git","git-hooks"]},{"content":"That a 0-hour contract is a UK labor setup where the employer doesn\u0026rsquo;t guaruntee any work hours to the employee, but binds them with a contract. https://en.wikipedia.org/wiki/Zero-hour_contract\nThat you can configure git to append a Signed-off-by: ... trailer using git config format.signOff true.\nThat you can configure git to use your SSH key to sign commits and tags with\ngit config gpg.format ssh git config commit.gpgSign true git config tag.gpgSign true See\nhttps://git-scm.com/docs/git-config#Documentation/git-config.txt-gpgformat https://blog.dbrgn.ch/2021/11/16/git-ssh-signatures/ https://git-scm.com/docs/git-config#Documentation/git-config.txt-commitgpgSign https://git-scm.com/docs/git-config#Documentation/git-config.txt-taggpgSign ","permalink":"https://skalt.github.io/til/2025/01/07/","tags":["law","git"]},{"content":"That zsh completions in /usr/share/zsh/vendor-completions must start with a _ in order to work, e.g. /usr/share/zsh/vendor-completions/_rg. Not sure why, though.\nWhile you can use the same SSH key for both authentication and signing, NIST recommends you shouldn\u0026rsquo;t: https://gist.github.com/ChristopherA/3d6a2f39c4b623a1a287b3fb7e0aa05b\ngit config commit.gpgSign true git config tag.gpgSign true git config gpg.format ssh git config user.signingKey \u0026#39;ssh-ed25519 AAAA...xyz\u0026#39; ","permalink":"https://skalt.github.io/til/2025/01/08/","tags":["zsh","git","ssh"]},{"content":"Of the security-insights.yaml specification.\nThe Japanese term \u0026ldquo;mojibake\u0026rdquo;, meaning \u0026ldquo;character transformation\u0026rdquo; or \u0026ldquo;the garbled text resulting from using the wrong character encoding\u0026rdquo;.\n","permalink":"https://skalt.github.io/til/2025/01/09/","tags":[]},{"content":"About setting up a fingerprint sensor:\nList fingerprint reader (docs):\nGUID=$( fwupdmgr get-devices | grep -A 6 -E \u0026#34;fingerprint\u0026#34; | grep -i \u0026#34;GUID\u0026#34; | awk -F \u0026#39;: \u0026#39; \u0026#39;{print $2}\u0026#39; | awk \u0026#39;{print $1}\u0026#39; ); clear \u0026amp;\u0026amp; echo \u0026#34;fwupdmgr get-devices $GUID\u0026#34; \u0026amp;\u0026amp; fwupdmgr get-devices $GUID # make sure the PAM fingerprint module is enabled in the pam TUI: sudo pam-auth-update Also useful:\nhttps://framework.kustomer.help/ubuntu-fingerprint-troubleshooting-r1_DA0TMn make sure fingerprint auth enabled for target user ","permalink":"https://skalt.github.io/til/2025/01/18/","tags":["pam"]},{"content":"That HTTP response code 501 is the semantically-correct way to communicate that a server does not support some functionality: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501.\n","permalink":"https://skalt.github.io/til/2025/01/22/","tags":["http"]},{"content":"That String.split doesn\u0026rsquo;t need parentheses:\n\u0026#34;a b\u0026#34;.split` ` // [\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;] See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\n","permalink":"https://skalt.github.io/til/2025/01/26/","tags":["js"]},{"content":"That you can write golang examples that get run using go test:\nfunc ExampleHello() { fmt.Println(\u0026#34;hello\u0026#34;) // Output: hello } The naming convention to declare examples for the package, a function F, a type T and method M on type T are:\nfunc Example() { ... } func ExampleF() { ... } func ExampleT() { ... } func ExampleT_M() { ... } \u0026ndash; https://pkg.go.dev/testing#hdr-Examples\nI feel like this might be able to be combined with doc comments.\n","permalink":"https://skalt.github.io/til/2025/01/30/","tags":["go","test"]},{"content":"That the w3c specifies media fragment identifiers:\nIt can be a media fragment in the form of #t=..., which makes the video or audio start playing from that time.\n\u0026ndash; https://developer.mozilla.org/en-US/docs/Web/URI/Fragment\nHowever, YouTube does not respect this.\nSee also: https://www.w3.org/TR/media-frags/\n","permalink":"https://skalt.github.io/til/2025/02/02/","tags":["link"]},{"content":"That to verify git SSH commit signatures locally, you need to\ngit config gpg.ssh.allowedSignersFile $PATH_TO_ALLOWED_SIGNERS_FILE The signers file will be in the form\nuser@email.com namespace=\u0026#34;git\u0026#34; ssh-ed25519 AAA...jhq user@email.com Once that\u0026rsquo;s set up. you can run\ngit log --show-signature To verify signatures locally. Alternately, you can run\ngit log --format=\u0026#34;signed:%G? fingerprint:%GF key:%GK\u0026#34; See https://git-scm.com/docs/git-log#Documentation/git-log.txt-emGGem for more signature-related log format directives.\n","permalink":"https://skalt.github.io/til/2025/02/07/","tags":["git","ssh"]},{"content":"That defer statements are block-scoped:\npackage main import \u0026#34;fmt\u0026#34; func main() { defer fmt.Println(\u0026#34;end func\u0026#34;) // runs at end of function fmt.Println(\u0026#34;start func\u0026#34;) { defer fmt.Println(\u0026#34;end block\u0026#34;) // runs at end of block fmt.Println(\u0026#34;start block\u0026#34;) } } // Output: // start func // statt block // end block // end func ","permalink":"https://skalt.github.io/til/2025/02/12/","tags":["go"]},{"content":"That VSCode has a \u0026ldquo;profiles\u0026rdquo; mechanism that allows bulk management of settings: https://code.visualstudio.com/docs/editor/profiles. These will make a fine addition to my dotfiles!\n","permalink":"https://skalt.github.io/til/2025/02/14/","tags":["vscode"]},{"content":"How to set build-time variables in go:\ngo build -ldflags \u0026#34;-X importpath.name=value\u0026#34; See https://pkg.go.dev/cmd/link\n","permalink":"https://skalt.github.io/til/2025/02/19/","tags":["go"]},{"content":"Why docker compose is called \u0026ldquo;compose\u0026rdquo;: you can pass many compose.yaml files that get merged automatically.\ndocker compose -f first.yaml -f second.yaml See https://docs.docker.com/compose/how-tos/multiple-compose-files/merge/\n","permalink":"https://skalt.github.io/til/2025/03/10/","tags":["docker","docker-compose","compose"]},{"content":"That prettier can wrap markdown lines: https://prettier.io/docs/options#prose-wrap\n","permalink":"https://skalt.github.io/til/2025/03/14/","tags":["prettier"]}]