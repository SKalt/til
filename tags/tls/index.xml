<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>tls on Today I Learned</title><link>https://skalt.github.io/til/tags/tls/</link><description>Recent content in tls on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/tls/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/11/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/11/</guid><description>that SAN = Subject Alternate Name. A SAN certificate is a TLS certificate that certifies multiple domain names.
see https://support.dnsimple.com/articles/what-is-ssl-san/
that AWS Certificate Manager and other free-TLS-certificate services can&amp;rsquo;t validate private domain names since ACME (Automated Certificate Management Environment) relies on public DNS or WHOIS records.
See also https://docs.aws.amazon.com/acm/latest/userguide/domain-ownership-validation.html.</description></item><item><title/><link>https://skalt.github.io/til/2023/02/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/22/</guid><description>How to make a self-signed TLS certificate:
#!/usr/bin/env bash # stolen from https://stackoverflow.com/questions/10175812/how-to-generate-a-self-signed-ssl-certificate-using-openssl openssl \ req -x509 \ -newkey rsa:4096 \ -keyout key.pem \ -out cert.pem \ -sha256 -days 365 -nodes -subj &amp;#39;/CN=localhost&amp;#39;</description></item></channel></rss>