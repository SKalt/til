<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>terraform on Today I Learned</title><link>https://skalt.github.io/til/tags/terraform/</link><description>Recent content in terraform on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/01/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/26/</guid><description>That you can extract sensitive output values from terraform, you can terraform output $output_name
&amp;ndash; see https://learn.hashicorp.com/tutorials/terraform/outputs#redact-sensitive-outputs
Also, sqlite provides a PRAGMA user_version=&amp;lt;number&amp;gt; to let applications store and retrieve a versioning number. See https://sqlite.org/pragma.html#pragma_user_version</description></item><item><title/><link>https://skalt.github.io/til/2022/03/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/17/</guid><description>About the terraform count meta-argument:
you can pass a count = n to any resource-block to create n copies of the resource you can differentiate each of the resources using ${count.index}</description></item><item><title/><link>https://skalt.github.io/til/2022/04/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/04/</guid><description>to run terraform output $output_name to print a named output</description></item><item><title/><link>https://skalt.github.io/til/2022/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/03/</guid><description>aws policy documents can change the order of items within permissions arrays, but that&amp;rsquo;s safe to ignore:
Order is lost for data aws_iam_policy_document Policy elements that are syntactically lists but semantically sets should have their order ignored Perpetual diffs / Objects have changed outside of Terraform tracking ticket Also, that &amp;amp; types take 8 bytes = 64 bits on 64-bit systems
use std::mem; pub struct Foo { bar: String, // 24 baz: usize, // 8 } pub struct Quux&amp;lt;&amp;#39;a&amp;gt; { foo: &amp;amp;&amp;#39;a Foo, bar: usize, } fn main() { println!</description></item><item><title/><link>https://skalt.github.io/til/2022/07/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/08/</guid><description>That there&amp;rsquo;s an official 1Password terraform provider: https://registry.terraform.io/providers/1Password/onepassword/latest/docs</description></item><item><title/><link>https://skalt.github.io/til/2022/10/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/11/</guid><description>That terraform plan -detailed-exitcode exists: 0 means no diff, 1 means error, 2 means a diff exists.
Also, that you can print the source code of a bash function like so:
print_fn_src() { declare -f &amp;#34;$1&amp;#34;; }</description></item></channel></rss>