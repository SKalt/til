<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Rowid on Today I Learned</title><link>https://skalt.github.io/til/tags/rowid/</link><description>Recent content in Rowid on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/rowid/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/01/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/13/</guid><description>&lt;p>In sqlite, all rows have a 64-bit ROWID (with some exceptions). Putting those aside, if you have a single-column integer primary key and use the magic words &lt;code>PRIMARY KEY INTEGER&lt;/code> then the pkey becomes an alias for rowid, greatly speeding up lookups. I&amp;rsquo;m not sure how this affects insertions, though.&lt;/p>
&lt;p>&lt;a href="https://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key">https://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key&lt;/a>&lt;/p></description></item></channel></rss>