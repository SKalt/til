<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>rust on Today I Learned</title><link>https://skalt.github.io/til/tags/rust/</link><description>Recent content in rust on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/13/</guid><description>That a rust if-statement can have a return type
let x: u32 = 123; let stmt_result = if x % 2 == 0 { Ok(&amp;#34;even steven&amp;#34;) } else { Err(&amp;#34;odd steven&amp;#34;) }; assert_eq!(x, Err(&amp;#34;odd steven&amp;#34;));</description></item><item><title/><link>https://skalt.github.io/til/2022/12/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/10/</guid><description>That you can include doc-comments in macros:
macro_rules! documented { ( $(#[$outer:meta])* $name:ident ) =&amp;gt; { $(#[$outer])* fn $name(&amp;amp;self) {} }; } documented!( /// documented my_function ); my_function(); // hovering &amp;#34;function&amp;#34; now shows that the doc-comment is &amp;#34;documented&amp;#34; h/t https://stackoverflow.com/a/33999625/6571327</description></item><item><title/><link>https://skalt.github.io/til/2023/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/02/08/</guid><description>That in Rust, assert! runs in both debug and release builds. For debug-only assertions, use debug_assert!. See https://doc.rust-lang.org/stable/std/macro.debug_assert.html.
That in Python, you can call isinstance(thing, (tuple, OfMany, DifferentClasses)) to check if a variable is an instance of many possible classes. See https://docs.python.org/3/library/functions.html?highlight=isinstance#isinstance.</description></item><item><title/><link>https://skalt.github.io/til/2023/03/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/03/04/</guid><description>The string &amp;ldquo;0.1.12&amp;rdquo; is a version requirement. Although it looks like a specific version of the time crate, it actually specifies a range of versions and allows SemVer compatible updates.
&amp;ndash; https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html
Instead, in order to lock to a specific version of a crate, you need to write = 0.1.2.</description></item><item><title/><link>https://skalt.github.io/til/2023/05/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/24/</guid><description>That you can destructure struct values:
struct Point { x: i32, y: i32, } fn main() { let p = Point { x: 0, y: 7 }; let Point { x: a, y: b } = p; assert_eq!(0, a); assert_eq!(7, b); } see https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-structs</description></item></channel></rss>