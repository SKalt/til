<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Perf on Today I Learned</title><link>https://skalt.github.io/til/tags/perf/</link><description>Recent content in Perf on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/perf/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2023/06/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/06/19/</guid><description>That Option&amp;lt;T&amp;gt; costs ~1x the alignment value of T. I also learned Vec&amp;lt;T&amp;gt;&amp;rsquo;s size and alignment don&amp;rsquo;t reflect the size and alignment of T since the Vec is tracking an owned buffer on the heap which isn&amp;rsquo;t counted in the Vec&amp;rsquo;s own size.
struct Alone8(u8); // size= 1, align=1 struct Opt8(Option&amp;lt;u8&amp;gt;); // size= 2, align=1 struct Vec8(Vec&amp;lt;u8&amp;gt;); // size=24; align=8 struct Alone64(u64); // size= 8, align=8 struct Opt64(Option&amp;lt;u64&amp;gt;); // size=16, align=8 struct Vec64(Vec&amp;lt;u64&amp;gt;); // size=24; align=8 That Firefox bundles process and task managers for performance monitoring, available at about:processes and about:tasks, respectively https://support.</description></item></channel></rss>