<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Cli on Today I Learned</title><link>https://skalt.github.io/til/tags/cli/</link><description>Recent content in Cli on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/cli/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/04/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/04/</guid><description>to run terraform output $output_name to print a named output</description></item><item><title/><link>https://skalt.github.io/til/2022/10/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/11/</guid><description>That terraform plan -detailed-exitcode exists: 0 means no diff, 1 means error, 2 means a diff exists.
Also, that you can print the source code of a bash function like so:
print_fn_src() { declare -f &amp;#34;$1&amp;#34;; }</description></item><item><title/><link>https://skalt.github.io/til/2022/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/18/</guid><description>That BSD arch command found on Macs also supports a -${arch} flag for running universal binaries.</description></item><item><title/><link>https://skalt.github.io/til/2022/10/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/24/</guid><description>That you can list all addresses in terraform state by running
terraform state list Docs at https://developer.hashicorp.com/terraform/cli/commands/state/list
Also, that compgen -v is a function, at least on Mac zsh. Apparently in zsh compgen -v calls something like
for var_name in &amp;#34;${(k)parameters[@]}&amp;#34;; do printf &amp;#39;%s\n&amp;#39; &amp;#34;$var_name&amp;#34; done which is the first time I&amp;rsquo;ve seen that kind of shell syntax. It generates a bad substitution message in bash 3.2, so I can only assume it&amp;rsquo;s zsh-specific.</description></item><item><title/><link>https://skalt.github.io/til/2023/01/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/30/</guid><description>That psql et al. support colors:
export PG_COLOR=auto # only colorize output to ttys learned from https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html See also:
https://www.postgresql.org/docs/current/color-when.html https://www.postgresql.org/docs/current/color-which.html</description></item><item><title/><link>https://skalt.github.io/til/2024/03/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/26/</guid><description>That you can specify an alternate .terraformrc file using the environment variable TF_CLI_CONFIG_FILE=$ABSOLUTE_PATH. This can help with local provider development. See https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file</description></item></channel></rss>