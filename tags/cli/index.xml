<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Cli on Today I Learned</title><link>https://skalt.github.io/til/tags/cli/</link><description>Recent content in Cli on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/cli/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/04/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/04/</guid><description>&lt;p&gt;to run &lt;code&gt;terraform output $output_name&lt;/code&gt; to print a named output&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/11/</guid><description>&lt;p&gt;That &lt;code&gt;terraform plan -detailed-exitcode&lt;/code&gt; exists: 0 means no diff, 1 means error, 2 means a diff exists.&lt;/p&gt;
&lt;p&gt;Also, that you can print the source code of a bash function like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;print_fn_src&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;declare&lt;/span&gt; -f &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/18/</guid><description>&lt;p&gt;That BSD &lt;code&gt;arch&lt;/code&gt; command found on Macs also supports a &lt;code&gt;-${arch}&lt;/code&gt; flag for running universal binaries.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/24/</guid><description>&lt;p&gt;That you can list all addresses in terraform state by running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform state list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Docs at &lt;a href="https://developer.hashicorp.com/terraform/cli/commands/state/list"&gt;https://developer.hashicorp.com/terraform/cli/commands/state/list&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, that &lt;code&gt;compgen -v&lt;/code&gt; is a function, at least on Mac zsh.
Apparently in zsh &lt;code&gt;compgen -v&lt;/code&gt; calls something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; var_name in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="p"&gt;(k)parameters[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$var_name&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which is the first time I&amp;rsquo;ve seen that kind of shell syntax.
It generates a &lt;code&gt;bad substitution&lt;/code&gt; message in bash 3.2, so I can only assume it&amp;rsquo;s zsh-specific.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/01/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/30/</guid><description>&lt;p&gt;That &lt;code&gt;psql&lt;/code&gt; et al. support colors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PG_COLOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;auto &lt;span class="c1"&gt;# only colorize output to ttys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;learned from &lt;a href="https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html"&gt;https://fluca1978.github.io/2023/01/23/PostgreSQLColors.html&lt;/a&gt;
See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/docs/current/color-when.html"&gt;https://www.postgresql.org/docs/current/color-when.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/docs/current/color-which.html"&gt;https://www.postgresql.org/docs/current/color-which.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/26/</guid><description>&lt;p&gt;That you can specify an alternate &lt;code&gt;.terraformrc&lt;/code&gt; file using the environment variable &lt;code&gt;TF_CLI_CONFIG_FILE=$ABSOLUTE_PATH&lt;/code&gt;.
This can help with local provider development.
See &lt;a href="https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file"&gt;https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>