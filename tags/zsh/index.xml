<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Zsh on Today I Learned</title><link>https://skalt.github.io/til/tags/zsh/</link><description>Recent content in Zsh on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/zsh/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/08/</guid><description>&lt;p>In &lt;code>zsh&lt;/code>, &lt;code>ls *(n)&lt;/code> will &amp;ldquo;human-sort&amp;rdquo; mostly-numeric filenames.&lt;/p>
&lt;p>&lt;a href="https://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers">https://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://twitter.com/nedbat/status/1491032300800421892">https://twitter.com/nedbat/status/1491032300800421892&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/07/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/29/</guid><description>&lt;p>that in bash and zsh, you can put a newline in a variable like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">newline&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">$&amp;#39;\n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">newline&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>learned from: &lt;a href="https://stackoverflow.com/a/4456399/6571327">https://stackoverflow.com/a/4456399/6571327&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/10/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/24/</guid><description>&lt;p>That you can list all addresses in terraform state by running&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">terraform state list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Docs at &lt;a href="https://developer.hashicorp.com/terraform/cli/commands/state/list">https://developer.hashicorp.com/terraform/cli/commands/state/list&lt;/a>&lt;/p>
&lt;hr>
&lt;p>Also, that &lt;code>compgen -v&lt;/code> is a function, at least on Mac zsh.
Apparently in zsh &lt;code>compgen -v&lt;/code> calls something like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> var_name in &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">(k)parameters[@]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">printf&lt;/span> &lt;span class="s1">&amp;#39;%s\n&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$var_name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>which is the first time I&amp;rsquo;ve seen that kind of shell syntax.
It generates a &lt;code>bad substitution&lt;/code> message in bash 3.2, so I can only assume it&amp;rsquo;s zsh-specific.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/03/</guid><description>&lt;p>That zsh lazily+automatically loads scripts found in directories in &lt;code>$FPATH&lt;/code>: &lt;a href="https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/">https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2025/01/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2025/01/08/</guid><description>&lt;p>That zsh completions in &lt;code>/usr/share/zsh/vendor-completions&lt;/code> must start with a &lt;code>_&lt;/code> in order to work, e.g. &lt;code>/usr/share/zsh/vendor-completions/_rg&lt;/code>. Not sure why, though.&lt;/p></description></item></channel></rss>