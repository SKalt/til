<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>js on Today I Learned</title><link>https://skalt.github.io/til/tags/js/</link><description>Recent content in js on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/js/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2021/07/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/24/</guid><description>How to stream large responses using the Javascript Fetch API:
const response = await fetch(url); const reader = response.body.getReader(); while (true) { const { value, done } = await reader.read(); if (done) break; console.log(&amp;#39;Received&amp;#39;, value); } console.log(&amp;#39;Response fully received&amp;#39;); Also: the circumstances under which ~/.*profile files are run: only if you log in.</description></item><item><title/><link>https://skalt.github.io/til/2022/03/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/08/</guid><description>random: turns out HTML comments are valid line-comments in JS: https://smitop.com/post/js-html-comments/</description></item><item><title/><link>https://skalt.github.io/til/2022/04/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/06/</guid><description>That python f-strings can do
date and time formatting: f&amp;quot;{today:%Y-%m-%d}&amp;quot; have a variable-debugging format: f&amp;quot;{x = }, {y = }&amp;quot; can use __repr__ rather than __str__: f&amp;quot;{user!r}&amp;quot; can be nested: f&amp;quot;output: {value:{width}.{precision}}&amp;quot; https://martinheinz.dev/blog/70 Of the window.prompt() method: https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt</description></item><item><title/><link>https://skalt.github.io/til/2022/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/09/</guid><description>that sudo can be configured with the visudo command and that sudo can produce audit logs. See https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/
that there&amp;rsquo;s an Element.closest(selector) method, which means you can run this function to set the url to the closest link to an element:
((el) =&amp;gt; { let id = el.closest(&amp;#34;[id]&amp;#34;)?.id; if (!id) return; else location.hash = id; })($0); that you can use
SELECT /*...*/ FROM one_table JOIN other_table USING (common_column) as shorthand for one_table.</description></item><item><title/><link>https://skalt.github.io/til/2022/06/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/02/</guid><description>How to create a JS BigInt value:
A BigInt value, also sometimes just called a BigInt, is a bigint primitive, created by appending n to the end of an integer literal, or by calling the BigInt() constructor (but without the new operator) and giving it an integer value or string value. &amp;ndash; https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt</description></item><item><title/><link>https://skalt.github.io/til/2022/06/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/14/</guid><description>That Array.sort separates floats and ints:
x = [8, 7.4, 14, 13, 12, 11] // [ 8, 7.4, 14, 13, 12, 11 ] x.sort() // [ 11, 12, 13, 14, 7.4, 8 ] x.sort().reverse() // [ 8, 7.4, 14, 13, 12, 11 ]</description></item><item><title/><link>https://skalt.github.io/til/2022/09/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/20/</guid><description>A hack to detect if an element is visible/not:
const isVisible = (el) =&amp;gt; (el.offsetWidth || el.offsetHeight) &amp;gt; 0; see https://stackoverflow.com/questions/1343237/how-to-check-elements-visibility-via-javascript</description></item><item><title/><link>https://skalt.github.io/til/2023/08/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/08/09/</guid><description>That you can cancel/reset timeouts in JS using clearTimeout</description></item><item><title/><link>https://skalt.github.io/til/2023/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/18/</guid><description>RFCs are labeled with different statuses:
Internet Standard (e.g. HTTP/1.1) Proposed Standard (e.g. HTTP/3, HTTP/2) Best Current Practice Experimental Informational Historic [&amp;hellip;]
RFCs usually begin as Internet-Drafts (I-Ds) written by an individual or a small group. In the IETF, these are then usually adopted by a working group, and improved and revised.
&amp;ndash; https://www.ietf.org/standards/rfcs/
Class fields are public by default, but private class members can be created by using a hash # prefix.</description></item></channel></rss>