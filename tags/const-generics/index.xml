<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Const Generics on Today I Learned</title><link>https://skalt.github.io/til/tags/const-generics/</link><description>Recent content in Const Generics on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/const-generics/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2024/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/13/</guid><description>That you can write
fn foo&amp;lt;const N: usize&amp;gt;(arr: &amp;amp;[u8; N]) { todo!() } to specialize a function for different array sizes, etc. You can use the following types in const generics:
u8, u16, u32, u64, u128, usize i8, i16, i32, i64, i128, isize char bool See https://doc.rust-lang.org/reference/items/generics.html#const-generics See also https://blog.cocl2.com/posts/const-currying-rs/</description></item></channel></rss>