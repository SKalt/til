<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Etymology on Today I Learned</title><link>https://skalt.github.io/til/tags/etymology/</link><description>Recent content in Etymology on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/etymology/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2023/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/09/</guid><description>&lt;p&gt;About the precedent for deriving &lt;code&gt;serde&lt;/code&gt; from serialize/deserialize:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;em&gt;codec&lt;/em&gt; is a device or computer program that encodes or decodes a data stream or signal.
Codec is a portmanteau of coder/decoder.
In electronic communications, an &lt;em&gt;endec&lt;/em&gt; is a device that acts as both an encoder and a decoder on a signal or data stream, and hence is a type of codec.
Endec is a portmanteau of encoder/decoder.
&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/Codec"&gt;https://en.wikipedia.org/wiki/Codec&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2023/12/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/12/24/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Bayer and McCreight never explained what, if anything, the B stands for: Boeing, balanced, between, broad, bushy, and Bayer have been suggested.
McCreight has said that &amp;ldquo;the more you think about what the B in B-trees means, the better you understand B-trees.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/B-tree#History"&gt;https://en.wikipedia.org/wiki/B-tree#History&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/03/</guid><description>&lt;blockquote&gt;
&lt;p&gt;bit bucket n.&lt;/p&gt;
&lt;p&gt;(very common) 1. The universal data sink (originally, the mythical receptacle used to catch bits when they fall off the end of a register during a shift instruction).
Discarded, lost, or destroyed data is said to have &amp;ldquo;gone to the bit bucket&amp;rdquo;.
On Unix, often used for &lt;code&gt;/dev/null&lt;/code&gt;.
Sometimes amplified as &amp;ldquo;the Great Bit Bucket in the Sky&amp;rdquo;.&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;The place where all lost mail and news messages eventually go. [&amp;hellip;]&lt;/li&gt;
&lt;li&gt;The ideal location for all unwanted mail responses.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Another variant of this legend has it that, as a consequence of the &amp;ldquo;parity preservation law&amp;rdquo;, the number of 1 bits that go to the bit bucket must equal the number of 0 bits.
Any imbalance results in bits filling up the bit bucket.
A qualified computer technician can empty a full bit bucket as part of scheduled maintenance.&lt;/p&gt;</description></item></channel></rss>