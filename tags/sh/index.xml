<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Sh on Today I Learned</title><link>https://skalt.github.io/til/tags/sh/</link><description>Recent content in Sh on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/tags/sh/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2021/10/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/12/</guid><description>&lt;p>about the shell &lt;code>until&lt;/code> keyword, which is equivalent to &lt;code>while !&lt;/code>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/04/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/04/</guid><description>&lt;p>to run &lt;code>terraform output $output_name&lt;/code> to print a named output&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/04/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/11/</guid><description>&lt;p>You can use &lt;code>journalctl -u ${service_name}.service --since ${time:-today}&lt;/code> to view the logs of a systemd service: &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs">https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/04/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/20/</guid><description>&lt;p>&lt;code>tar -ztvf file.tar.gz&lt;/code> will list the files in tar.gz&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/04/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/29/</guid><description>&lt;p>how to check the last &lt;code>apt update&lt;/code> time:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">last_update&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>stat --format&lt;span class="o">=&lt;/span>%Y /var/cache/apt/pkgcache.bin&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://askubuntu.com/a/410259/505362">https://askubuntu.com/a/410259/505362&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/09/</guid><description>&lt;ul>
&lt;li>
&lt;p>that &lt;code>sudo&lt;/code> can be configured with the &lt;code>visudo&lt;/code> command &lt;em>and&lt;/em> that sudo can produce audit logs.
See &lt;a href="https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/">https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>that there&amp;rsquo;s an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/closest">&lt;code>Element.closest(selector)&lt;/code>&lt;/a> method, which means you can run this function to set the url to the closest link to an element:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="p">((&lt;/span>&lt;span class="nx">el&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">el&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">closest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;[id]&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})(&lt;/span>&lt;span class="nx">$0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>that you can use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/*...*/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">one_table&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">other_table&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">USING&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">common_column&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>as shorthand for &lt;code>one_table.common_column = other_table.common_column&lt;/code>.
See &lt;a href="https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM">https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title/><link>https://skalt.github.io/til/2022/05/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/10/</guid><description>&lt;p>That you can call &lt;code>time(1)&lt;/code> to time how long a shell command takes, like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="p">;&lt;/span> &lt;span class="nb">time&lt;/span> terraform fmt -write&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> -recursive .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># terraform fmt -write=true -recursive . 0.10s user 0.23s system 24% cpu 1.377 total&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2022/05/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/16/</guid><description>&lt;p>that &lt;code>gzip(1)&lt;/code>, by default, includes file &lt;code>mtime&lt;/code>s. The flag to prevent gzip from zipping non-deterministically is &lt;code>gzip --no-name&lt;/code> or &lt;code>gzip -n&lt;/code>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/05/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/31/</guid><description>&lt;p>That &lt;code>sql&lt;/code> has assertions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ASSERTION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">Constraint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CHECK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">search&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">condition&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">constraint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>see &lt;a href="https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement">https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement&lt;/a>.&lt;/p>
&lt;p>h/t &lt;a href="https://www.scattered-thoughts.net/log/0024/">https://www.scattered-thoughts.net/log/0024/&lt;/a> for bringing that to my attention.&lt;/p>
&lt;p>Also, from the weekend: in postgres, at least, you can call &lt;code>TABLE :table_name;&lt;/code> directly to &lt;code>SELECT * FROM :table_name;&lt;/code>&lt;/p>
&lt;p>Also: how to look up a domain name from an ip:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">reverse_ip_lookup&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ip_address&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dig -x &lt;span class="nv">$ip_address&lt;/span> +noall +answer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also: how to audit AWS VPC flow logs from CloudWatch Log Insights: use the example queries in the right sidebar.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/06/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/01/</guid><description>&lt;p>That &lt;code>pg_dumpall&lt;/code> exists.
That you need to use &lt;code>pg_dumpall&lt;/code> to dump tablespaces, roles, and subscriptions.
That &lt;code>pg_dumpall&lt;/code> will dump the &lt;code>postgres&lt;/code> role by default, causing resultant dump to fail to restore.
Fortunately, I&amp;rsquo;m able to &lt;code>grep -ve '^CREATE ROLE postgres&lt;/code>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/07/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/29/</guid><description>&lt;p>that in bash and zsh, you can put a newline in a variable like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">newline&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">$&amp;#39;\n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">newline&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>learned from: &lt;a href="https://stackoverflow.com/a/4456399/6571327">https://stackoverflow.com/a/4456399/6571327&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/08/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/11/</guid><description>&lt;p>That you can call &lt;code>docker compose kill&lt;/code> to kill all docker-compose containers
That there&amp;rsquo;s a &lt;code>timeout&lt;/code> shell command in gnu coreutils: &lt;a href="https://man7.org/linux/man-pages/man1/timeout.1.html">https://man7.org/linux/man-pages/man1/timeout.1.html&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/08/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/24/</guid><description>&lt;p>that you can &lt;code>lsblk&lt;/code> to list the block devices that the OS knows about without sudo.&lt;/p>
&lt;p>that you can &lt;code>sudo growpart&lt;/code> to increase a partition size without restarting the machine.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2022/10/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/11/</guid><description>&lt;p>That &lt;code>terraform plan -detailed-exitcode&lt;/code> exists: 0 means no diff, 1 means error, 2 means a diff exists.&lt;/p>
&lt;p>Also, that you can print the source code of a bash function like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">print_fn_src&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="nb">declare&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2022/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/18/</guid><description>&lt;p>That BSD &lt;code>arch&lt;/code> command found on Macs also supports a &lt;code>-${arch}&lt;/code> flag for running universal binaries.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2023/01/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/01/28/</guid><description>&lt;p>That you need ato &lt;code>git add&lt;/code> a &lt;code>flake.nix&lt;/code> for the flake&amp;rsquo;s contents to start to work with &lt;code>nix develop&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>This is needed because Nix flakes respects gitignores. If you don&amp;rsquo;t add things to the git staging area, git doesn&amp;rsquo;t know about the files at all, and Nix flakes can&amp;rsquo;t know if it should ignore them.
&amp;ndash; &lt;a href="https://xeiaso.net/blog/nix-flakes-go-programs">https://xeiaso.net/blog/nix-flakes-go-programs&lt;/a>&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;p>that &amp;ldquo;truecolor&amp;rdquo; support in shells is detected with the &lt;code>$COLORTERM&lt;/code> env var&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2023/05/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/05/30/</guid><description>&lt;p>That there&amp;rsquo;s a Linux command to do sql-like &lt;code>JOIN&lt;/code>s of lines in files, possibly based on a field in each line: &lt;a href="https://linux.die.net/man/1/join">&lt;code>join(1)&lt;/code>&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2023/10/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2023/10/31/</guid><description>&lt;p>That POSIX shell has configuration option, &lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_25_03">&lt;code>set -a&lt;/code> or &lt;code>set -o allexport&lt;/code>&lt;/a> that exports all assigned variables.
This simplifies using &lt;code>.env&lt;/code> files in &lt;code>.envrc&lt;/code> files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># evaluate a .env file, if it exists&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f .env &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> -a &lt;span class="c1"># assigning a variable exports the variable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># shellcheck disable=SC1091&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">source&lt;/span> .env
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> +a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>That JS has a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw">&lt;code>String.raw&lt;/code>&lt;/a> &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates">template literal tag function&lt;/a> that unescapes escape sequences in a backtick-string:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">raw&lt;/span>&lt;span class="sb">`\t\r\n`&lt;/span> &lt;span class="c1">// =&amp;gt; &amp;#34;\\t\\r\\n&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2024/10/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/16/</guid><description>&lt;blockquote>
&lt;p>which -a python # shows all matches on $PATH
type python # checks if a builtin/alias/fn/exe&lt;/p>
&lt;p>&amp;ndash; &lt;a href="https://wizardzines.com/comics/path-tips/">https://wizardzines.com/comics/path-tips/&lt;/a>&lt;/p>&lt;/blockquote></description></item></channel></rss>