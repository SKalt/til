<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2024s on Today I Learned</title><link>https://skalt.github.io/til/2024/</link><description>Recent content in 2024s on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/2024/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2024/01/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/03/</guid><description>&lt;blockquote&gt;
&lt;p&gt;bit bucket n.&lt;/p&gt;
&lt;p&gt;(very common) 1. The universal data sink (originally, the mythical receptacle used to catch bits when they fall off the end of a register during a shift instruction).
Discarded, lost, or destroyed data is said to have &amp;ldquo;gone to the bit bucket&amp;rdquo;.
On Unix, often used for &lt;code&gt;/dev/null&lt;/code&gt;.
Sometimes amplified as &amp;ldquo;the Great Bit Bucket in the Sky&amp;rdquo;.&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;The place where all lost mail and news messages eventually go. [&amp;hellip;]&lt;/li&gt;
&lt;li&gt;The ideal location for all unwanted mail responses.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Another variant of this legend has it that, as a consequence of the &amp;ldquo;parity preservation law&amp;rdquo;, the number of 1 bits that go to the bit bucket must equal the number of 0 bits.
Any imbalance results in bits filling up the bit bucket.
A qualified computer technician can empty a full bit bucket as part of scheduled maintenance.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/28/</guid><description>&lt;p&gt;That 401 Unauthorized responses are supposed to include a &lt;code&gt;www-authenticate&lt;/code&gt; header with a value indicating how to obtain a valid token.
See &lt;a href="https://datatracker.ietf.org/doc/html/rfc6750#section-3"&gt;https://datatracker.ietf.org/doc/html/rfc6750#section-3&lt;/a&gt; for more details.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/29/</guid><description>&lt;h2 id="typographic-units"&gt;Typographic Units&lt;/h2&gt;
&lt;h3 id="absolute-distance"&gt;Absolute distance&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th style="text-align: center"&gt;CSS Unit&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Picas&lt;/td&gt;
&lt;td style="text-align: center"&gt;&lt;code&gt;pc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1/6 inch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Points&lt;/td&gt;
&lt;td style="text-align: center"&gt;&lt;code&gt;pt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1/72 inches&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units"&gt;https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="font-relative-units"&gt;Font-relative units&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;em&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In metal type, the point size (and hence the em, from em quadrat) was equal to the line height of the metal body from which the letter rises.
[&amp;hellip;]
In some older texts, but not all, the em is defined, or said to have been defined, as the width of the capital &amp;lsquo;M&amp;rsquo; in the current typeface and point size.
[&amp;hellip;]
In [CSS] the em unit is the height of the font in nominal points or inches.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/01/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/31/</guid><description>&lt;p&gt;That SQL implementations with recursive CTEs are Turing-complete!
It makes sense: recursion and conditionals are all that is required for Turing completeness.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://learnsql.com/blog/sql-subquery-cte-difference/"&gt;https://learnsql.com/blog/sql-subquery-cte-difference/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/05/</guid><description>&lt;p&gt;That a &lt;code&gt;*.tiff&lt;/code&gt; file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;was specified in 1986 by a company later consumed by Adobe&lt;/li&gt;
&lt;li&gt;was originally intended for scanner interop&lt;/li&gt;
&lt;li&gt;starts with an 8-byte header that includes a 2-byte magic number, a 2-byte endianness flag, and a 4-byte pointer to the first Image File Directory entry&lt;/li&gt;
&lt;li&gt;the max tiff size is 2^32 bytes due to the u32 pointer size&lt;/li&gt;
&lt;li&gt;Each IFD starts with a u16 count of entries, then a sequence of 12-byte ields, then another 4-byte offset of the next IFD entry (0 = none)&lt;/li&gt;
&lt;li&gt;each IFD entry (= &amp;ldquo;field&amp;rdquo;) has a 2-byte tag, 2 bytes of field type, 4-byte count, and 4-byte offset of the value(s) of the field.&lt;/li&gt;
&lt;li&gt;values may occur pretty much anywhere in the file, even before the IFD&lt;/li&gt;
&lt;li&gt;each &amp;ldquo;subfile&amp;rdquo; may have one of several encodings (e.g. black/white, grayscale, rgb, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://docs.fileformat.com/image/tiff/"&gt;https://docs.fileformat.com/image/tiff/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/08/</guid><description>&lt;blockquote&gt;
&lt;p&gt;In signal processing, the Nyquist rate, named after Harry Nyquist, is a value (in units of samples per second or hertz, Hz) equal to twice the highest frequency (bandwidth) of a given function or signal.
When the function is digitized at a higher sample rate (see &amp;ldquo;Critical frequency&amp;rdquo;), the resulting discrete-time sequence is said to be free of the distortion known as aliasing.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/Nyquist_rate"&gt;https://en.wikipedia.org/wiki/Nyquist_rate&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="https://en.wikipedia.org/wiki/Signal_processing"&gt;signal processing&lt;/a&gt; and related disciplines, &lt;strong&gt;aliasing&lt;/strong&gt; is the overlapping of frequency components resulting from a &lt;a href="https://en.wikipedia.org/wiki/Sample_rate"&gt;sample rate&lt;/a&gt; below the &lt;a href="https://en.wikipedia.org/wiki/Nyquist_rate"&gt;Nyquist rate&lt;/a&gt;.
This overlap results in &lt;a href="https://en.wikipedia.org/wiki/Distortion"&gt;distortion&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Artifact_(error)"&gt;artifacts&lt;/a&gt; when the &lt;a href="https://en.wikipedia.org/wiki/Signal_reconstruction"&gt;signal is reconstructed&lt;/a&gt; from samples which causes the reconstructed signal to differ from the original continuous signal.
Aliasing that occurs in signals sampled in time, for instance in &lt;a href="https://en.wikipedia.org/wiki/Digital_audio"&gt;digital audio&lt;/a&gt; or the &lt;a href="https://en.wikipedia.org/wiki/Stroboscopic_effect"&gt;stroboscopic effect&lt;/a&gt;, is referred to as &lt;strong&gt;temporal aliasing&lt;/strong&gt;.
Aliasing in spatially sampled signals (e.g., &lt;a href="https://en.wikipedia.org/wiki/Moir%C3%A9_pattern"&gt;moir√© patterns&lt;/a&gt; in &lt;a href="https://en.wikipedia.org/wiki/Digital_image"&gt;digital images&lt;/a&gt;) is referred to as &lt;strong&gt;spatial aliasing&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/12/</guid><description>&lt;p&gt;That rust has built-in numeric types named like &lt;code&gt;NonZero*&lt;/code&gt; that reserve the bit-pattern of 0 as a niche: see &lt;a href="https://doc.rust-lang.org/core/num/index.html"&gt;https://doc.rust-lang.org/core/num/index.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is useful since that niche will absorb the cost of wrapping a &lt;code&gt;NonZero&lt;/code&gt; int with &lt;code&gt;Option&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;::&lt;span class="n"&gt;num&lt;/span&gt;::&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// has alignment 2, size 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;: &lt;span class="kt"&gt;u16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34; NonZeroU8: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34; Option&amp;lt;NonZeroU8&amp;gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34; Struct&amp;lt;NonZeroU8&amp;gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Option&amp;lt;Struct&amp;lt;NonZeroU8&amp;gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;: &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Struct&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NonZeroU8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2021&amp;amp;gist=7f5ee657d54e102aa7755c32bbdb94c9"&gt;playground link&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/14/</guid><description>&lt;p&gt;A more concise way to implement light/dark modes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;light&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which saves a few more bytes than my usual&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--fg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;media&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dark&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--fg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;--bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also learned that CSS has special syntax for systmem-provided colors, notably:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Canvas&lt;/code&gt;: the default background color&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CanvasText&lt;/code&gt;: the default text color&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/02/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/19/</guid><description>&lt;p&gt;That CSS can adjust any font&amp;rsquo;s aspect value using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust"&gt;&lt;code&gt;font-size-adjust&lt;/code&gt;&lt;/a&gt; &amp;ndash; the ratio between the cap height and the x-height, NOT the aspect ratio.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/07/</guid><description>&lt;p&gt;That &lt;code&gt;go mod tidy&lt;/code&gt; needs to be followed by &lt;code&gt;go mod vendor&lt;/code&gt; to keep &lt;code&gt;./vendor/modules.txt&lt;/code&gt; up-to-date.
That &lt;code&gt;go mod vendor&lt;/code&gt; only pulls in files that are referenced by your current project.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://go.dev/ref/mod#vendoring"&gt;https://go.dev/ref/mod#vendoring&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/08/</guid><description>&lt;p&gt;That OpenTelemetry HTTP reciever endpoints tend to have port 4318&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/10/</guid><description>&lt;p&gt;That you can add &lt;code&gt;#![warn(missing_docs)]&lt;/code&gt; at the top of a &lt;code&gt;lib.rs&lt;/code&gt; file to lint for undocumented public methods.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/13/</guid><description>&lt;p&gt;Common Platform Enumeration, a syntax for identifying &amp;ldquo;IT stuff&amp;rdquo;:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;cpe
:&amp;lt;cpe_version&amp;gt;
:&amp;lt;part&amp;gt;
:&amp;lt;vendor&amp;gt;
:&amp;lt;product&amp;gt;
:&amp;lt;version&amp;gt;
:&amp;lt;update&amp;gt;
:&amp;lt;edition&amp;gt;
:&amp;lt;language&amp;gt;
:&amp;lt;sw_edition&amp;gt;
:&amp;lt;target_sw&amp;gt;
:&amp;lt;target_hw&amp;gt;
:&amp;lt;other&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notably, &lt;code&gt;part&lt;/code&gt; can only be &lt;code&gt;a|h|o&lt;/code&gt; = &lt;code&gt;app | hardware | OS&lt;/code&gt;, not &amp;ldquo;documentation&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://en.wikipedia.org/wiki/Common_Platform_Enumeration"&gt;https://en.wikipedia.org/wiki/Common_Platform_Enumeration&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/18/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Alerts are an extension of Markdown used to emphasize critical information.
On GitHub, they are displayed with distinctive colors and icons to indicate the importance of the content.&lt;/p&gt;
&lt;p&gt;An example of all five types:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-md" data-lang="md"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!NOTE]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ge"&gt;&lt;/span&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Highlights information that users should take into account, even when skimming.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ge"&gt;&lt;/span&gt;&lt;span class="k"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!TIP]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ge"&gt;&lt;/span&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Optional information to help a user be more successful.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]&lt;br&gt;
Crucial information necessary for users to succeed.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/21/</guid><description>&lt;p&gt;that &lt;code&gt;depends_on: [ service ]&lt;/code&gt; waits for &lt;code&gt;service&lt;/code&gt; to be &lt;strong&gt;started&lt;/strong&gt;, not for &lt;code&gt;service&lt;/code&gt; to be healthy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On startup, Compose does not wait until a container is &amp;ldquo;ready&amp;rdquo;, only until it&amp;rsquo;s running.&lt;/p&gt;
&lt;p&gt;The solution for detecting the ready state of a service is to use the condition attribute with one of the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;service_started&lt;/li&gt;
&lt;li&gt;service_healthy. This specifies that a dependency is expected to be ‚Äúhealthy‚Äù, which is defined with healthcheck, before starting a dependent service.&lt;/li&gt;
&lt;li&gt;service_completed_successfully. This specifies that a dependency is expected to run to successful completion before starting a dependent service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://docs.docker.com/compose/startup-order/"&gt;https://docs.docker.com/compose/startup-order/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/25/</guid><description>&lt;p&gt;The authoritative list of &lt;!-- raw HTML omitted --&gt;TLD&lt;!-- raw HTML omitted --&gt;s can be found at &lt;a href="https://data.iana.org/TLD/tlds-alpha-by-domain.txt"&gt;https://data.iana.org/TLD/tlds-alpha-by-domain.txt&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/03/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/26/</guid><description>&lt;p&gt;That you can specify an alternate &lt;code&gt;.terraformrc&lt;/code&gt; file using the environment variable &lt;code&gt;TF_CLI_CONFIG_FILE=$ABSOLUTE_PATH&lt;/code&gt;.
This can help with local provider development.
See &lt;a href="https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file"&gt;https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/03/</guid><description>&lt;p&gt;That BuildKit supports the using OpenTelemetry to trace builds with context from the &lt;code&gt;$TRACEPARENT&lt;/code&gt; and &lt;code&gt;$TRACESTATE&lt;/code&gt; environment variables (directly equivalent to their w3c header counterparts): &lt;a href="https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41"&gt;https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/07/</guid><description>&lt;p&gt;That any function named &lt;code&gt;func init(){ ... }&lt;/code&gt; runs on load of a module.
See &lt;a href="https://go.dev/ref/spec#Package_initialization"&gt;https://go.dev/ref/spec#Package_initialization&lt;/a&gt;.
See also &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-init-in-go"&gt;https://www.digitalocean.com/community/tutorials/understanding-init-in-go&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/08/</guid><description>&lt;p&gt;That &lt;code&gt;select&lt;/code&gt; can only be used to race communications operations (e.g. &lt;code&gt;&amp;lt;- myChan&lt;/code&gt;).
See &lt;a href="https://go.dev/ref/spec#Select_statements"&gt;https://go.dev/ref/spec#Select_statements&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/13/</guid><description>&lt;p&gt;That you can write&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;: &lt;span class="kt"&gt;usize&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;u8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;todo!&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to specialize a function for different array sizes, etc.
You can use the following types in const generics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;u8, u16, u32, u64, u128, usize&lt;/li&gt;
&lt;li&gt;i8, i16, i32, i64, i128, isize&lt;/li&gt;
&lt;li&gt;char&lt;/li&gt;
&lt;li&gt;bool&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://doc.rust-lang.org/reference/items/generics.html#const-generics"&gt;https://doc.rust-lang.org/reference/items/generics.html#const-generics&lt;/a&gt;
See also &lt;a href="https://blog.cocl2.com/posts/const-currying-rs/"&gt;https://blog.cocl2.com/posts/const-currying-rs/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/17/</guid><description>&lt;p&gt;That &lt;code&gt;shasum(1)&lt;/code&gt; is implemented in perl: &lt;a href="https://linux.die.net/man/1/shasum"&gt;https://linux.die.net/man/1/shasum&lt;/a&gt;, though
&lt;code&gt;shaXXXsum&lt;/code&gt; et al. seem to be implemented in C: &lt;a href="https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103"&gt;https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/18/</guid><description>&lt;p&gt;That &amp;ldquo;SASL&amp;rdquo; stands for &amp;ldquo;Simple Authentication and Security Layer&amp;rdquo;, which may/not be a misnomer: it&amp;rsquo;s a set of challenges and responses that can be embedded within a protocol.
Notably, one challenge is &amp;ldquo;OAUTHBEARER&amp;rdquo;, a standard Oauth 2.0 bearer token challenge.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer"&gt;https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer&lt;/a&gt;
See &lt;a href="https://www.rfc-editor.org/rfc/rfc4422"&gt;https://www.rfc-editor.org/rfc/rfc4422&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/20/</guid><description>&lt;p&gt;That git will place a file with the (absolute?) path to the actual git dir
if initialized with &lt;a href="https://git-scm.com/docs/git-init#Documentation/git-init.txt---separate-git-dirltgit-dirgt"&gt;&lt;code&gt;git init --separate-git-dir&lt;/code&gt;&lt;/a&gt;.
This is intended as an FS-agnostic symlink.&lt;/p&gt;
&lt;p&gt;The lesson here is to never assume &lt;code&gt;repo/.git&lt;/code&gt; exists and is a directory; use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git rev-parse --absolute-git-dir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-rev-parse#Documentation/git-rev-parse.txt---absolute-git-dir"&gt;docs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/22/</guid><description>&lt;p&gt;That Go has &lt;a href="https://go.dev/ref/spec#Label_scopes"&gt;labels&lt;/a&gt; and can &lt;a href="https://go.dev/ref/spec#Goto_statements"&gt;&lt;code&gt;goto label&lt;/code&gt;&lt;/a&gt;.
I&amp;rsquo;m not entirely sure what the usefulness of these is outside of &lt;code&gt;switch&lt;/code&gt; statements, but it&amp;rsquo;s still cool!&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/04/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/27/</guid><description>&lt;p&gt;That you can add a &lt;code&gt;[workspace.dependencies]&lt;/code&gt; table in your top-level &lt;code&gt;Cargo.toml&lt;/code&gt; specifying paths to internal crates:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# ${PROJECT_DIR}/Cargo.toml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;workspace&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;members&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;path/to/my_crate&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;workspace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;my_crate&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;path/to/my_crate&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# ${PROJECT_DIR}/path/to/other_crate/Cargo.toml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;my_crate&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;workspace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table"&gt;https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table&lt;/a&gt;.
See also &lt;a href="https://doc.rust-lang.org/cargo/reference/workspaces.html"&gt;https://doc.rust-lang.org/cargo/reference/workspaces.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;workspace = true&lt;/code&gt; can also help share external dependencies within multiple internal crates; see &lt;a href="https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace"&gt;https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, that u32 and u64 don&amp;rsquo;t implement &lt;code&gt;Into&amp;lt;usize&amp;gt;&lt;/code&gt;! I guess rust supports 16-bit pointer sizes.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/03/</guid><description>&lt;p&gt;That zsh lazily+automatically loads scripts found in directories in &lt;code&gt;$FPATH&lt;/code&gt;: &lt;a href="https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/"&gt;https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/05/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/04/</guid><description>&lt;p&gt;That a &lt;code&gt;go.work&lt;/code&gt; file can point to local &amp;ldquo;main modules&amp;rdquo; used for minimum-version selection.
&lt;code&gt;go&lt;/code&gt; will maintain a separate &lt;code&gt;go.work.sum&lt;/code&gt; file with the checksums of the workspace&amp;rsquo;s dependencies.
&lt;code&gt;go work {init,use,edit}&lt;/code&gt; manages the work-files.
&lt;code&gt;$GOWORK&lt;/code&gt; pointing to a file named like &lt;code&gt;*.work&lt;/code&gt; can switch between multiple workspace files.
See &lt;a href="https://go.dev/ref/mod#workspaces;"&gt;https://go.dev/ref/mod#workspaces;&lt;/a&gt; the syntax of &lt;code&gt;*.work&lt;/code&gt; files is roughly equivalent to the syntax in &lt;code&gt;go.mod&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That none of the following options ensure unused debug info is not included in rust wasm output:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/12/</guid><description>&lt;p&gt;That hosting websites in S3 &lt;em&gt;will&lt;/em&gt; redirect &lt;code&gt;/&lt;/code&gt; to &lt;code&gt;/index.html&lt;/code&gt; if you configure &lt;code&gt;index.html&lt;/code&gt; as in index document: &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html"&gt;https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/13/</guid><description>&lt;p&gt;That MAC can stand for &amp;ldquo;Message Authentication Code&amp;rdquo; in a security context.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/17/</guid><description>&lt;p&gt;That you can use the &lt;code&gt;.gitmodules&lt;/code&gt; document in the parent repo to configure a
submodule to track a branch with the same name as the parent repo&amp;rsquo;s current branch:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;submodule.&lt;!-- raw HTML omitted --&gt;.branch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[&amp;hellip;] A special value of &lt;code&gt;.&lt;/code&gt; is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch"&gt;https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/06/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/23/</guid><description>&lt;p&gt;That a cargo package can have only one library: see &lt;a href="https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library"&gt;https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/07/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/07/05/</guid><description>&lt;p&gt;That Python mangles class attributes named like &lt;code&gt;__name&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python mangles these names with the class name: if class &lt;code&gt;Foo&lt;/code&gt; has an attribute named &lt;code&gt;__a&lt;/code&gt;, it cannot be accessed by &lt;code&gt;Foo.__a&lt;/code&gt;.
(An insistent user could still gain access by calling &lt;code&gt;Foo._Foo__a&lt;/code&gt;.)
Generally, double leading underscores should be used only to avoid name conflicts with attributes in classes designed to be subclassed.&lt;/p&gt;
&lt;p&gt;Note: there is some controversy about the use of &lt;code&gt;__names&lt;/code&gt; (see below).&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/04/</guid><description>&lt;p&gt;That if you specify an &lt;code&gt;Entry-points&lt;/code&gt; key in python &lt;code&gt;.dist-info/METADATA&lt;/code&gt;, python will create command-line wrappers for your scripts.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://packaging.python.org/en/latest/specifications/entry-points/"&gt;https://packaging.python.org/en/latest/specifications/entry-points/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/11/</guid><description>&lt;p&gt;That virtualenvs may contain two files that alter the &lt;code&gt;sys.path&lt;/code&gt; outside of the &lt;code&gt;$PYTHONPATH&lt;/code&gt; variable:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;.venv/pyvenv.cfg&lt;/code&gt; (see &lt;a href="https://docs.python.org/3/library/sys_path_init.html#virtual-environments"&gt;https://docs.python.org/3/library/sys_path_init.html#virtual-environments&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.venv/python3.*/site-packages/*.pth&lt;/code&gt; (see &lt;a href="https://docs.python.org/3/library/sys_path_init.html#pth-files"&gt;https://docs.python.org/3/library/sys_path_init.html#pth-files&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/12/</guid><description>&lt;p&gt;That python dicts have an upsert method: &lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault"&gt;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/19/</guid><description>&lt;p&gt;That &lt;code&gt;go build ./path/to/main.go&lt;/code&gt; disregards other files in the same directory/package.
&lt;code&gt;go build ./path/to&lt;/code&gt; works fine.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/08/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/23/</guid><description>&lt;p&gt;This is embarrassingly late, but TIL that BOEM stands for the Bureau of Ocean Energy Management (&lt;a href="https://www.boem.gov/"&gt;https://www.boem.gov/&lt;/a&gt;)&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/09/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/21/</guid><description>&lt;p&gt;That &lt;code&gt;tsc --generateTrace&lt;/code&gt; can generate browser-devtools-compatible data for flamegraph analysis.
See &lt;a href="https://github.com/microsoft/TypeScript/wiki/Performance-Tracing"&gt;https://github.com/microsoft/TypeScript/wiki/Performance-Tracing&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/09/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/24/</guid><description>&lt;p&gt;That you an render code blocks in Go doc comments by indenting the lines of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// Add two numbers.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// this&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// is a&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;// code block&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://tip.golang.org/doc/comment#code"&gt;https://tip.golang.org/doc/comment#code&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/09/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/28/</guid><description>&lt;p&gt;That on windows, creating a virtualenv:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;symlinks executables into &lt;code&gt;$VIRTUAL_ENV/Scripts&lt;/code&gt; rather than &lt;code&gt;$VIRTUAL_ENV/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;only creates a &lt;code&gt;python.exe&lt;/code&gt; symlink, not a &lt;code&gt;python3.exe&lt;/code&gt; symlink.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See &lt;a href="https://docs.python.org/3/library/venv.html#creating-virtual-environments"&gt;https://docs.python.org/3/library/venv.html#creating-virtual-environments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Less exciting, but I also (re-)learned that setting a &lt;code&gt;PYTHONPATH&lt;/code&gt; on windows requires using &lt;code&gt;;&lt;/code&gt; rather than &lt;code&gt;:&lt;/code&gt; as the path-separator.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/14/</guid><description>&lt;p&gt;That &lt;a href="https://without.boats"&gt;https://without.boats&lt;/a&gt; is named after a Michel Foucault quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúIn civilizations without boats, dreams dry up, espionage takes the place of adventure and the police take the place of pirates.‚Äù&lt;/p&gt;
&lt;p&gt;&amp;ndash; Michel Foucault
&amp;ndash; &lt;a href="https://www.goodreads.com/quotes/1082065-in-civilizations-without-boats-dreams-dry-up-espionage-takes-the"&gt;https://www.goodreads.com/quotes/1082065-in-civilizations-without-boats-dreams-dry-up-espionage-takes-the&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/15/</guid><description>&lt;p&gt;What an anycast IP is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anycast is a network addressing and routing methodology in which a single IP address is shared by devices (generally servers) in multiple locations.
Routers direct packets addressed to this destination to the location nearest the sender, using their normal decision-making algorithms, typically the lowest number of BGP network hops.
Anycast routing is widely used by content delivery networks such as web and name servers, to bring their content closer to end users.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/16/</guid><description>&lt;blockquote&gt;
&lt;p&gt;which -a python # shows all matches on $PATH
type python # checks if a builtin/alias/fn/exe&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://wizardzines.com/comics/path-tips/"&gt;https://wizardzines.com/comics/path-tips/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/10/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/10/23/</guid><description>&lt;p&gt;That&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An empty go.mod in a directory will cause that directory and all of its subdirectories to be excluded from the top-level Go module.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://go.dev/wiki/Modules#can-an-additional-gomod-exclude-unnecessary-content-do-modules-have-the-equivalent-of-a-gitignore-file"&gt;https://go.dev/wiki/Modules#can-an-additional-gomod-exclude-unnecessary-content-do-modules-have-the-equivalent-of-a-gitignore-file&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/11/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/11/13/</guid><description>&lt;p&gt;That OpenAPI 3.x.x definitions can also specify XML encodings: see &lt;a href="https://spec.openapis.org/oas/v3.0.0#xml-object"&gt;https://spec.openapis.org/oas/v3.0.0#xml-object&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/11/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/11/24/</guid><description>&lt;p&gt;That the GPU I have in the Ubuntu workstation in my office isn&amp;rsquo;t compatible with ROCm, AMD&amp;rsquo;s GPU compatibility layer, or Vulkan.
I was trying to run the binary for &lt;a href="https://tabby.tabbyml.com/blog/2024/01/24/running-tabby-locally-with-rocm/"&gt;tabby&lt;/a&gt; locally.
First, I looked up my graphics card:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;;&lt;/span&gt; lshw -c video
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# *-display&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# description: VGA compatible controller&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# product: Turks PRO [Radeon HD 7570]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# vendor: Advanced Micro Devices, Inc. [AMD/ATI]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# physical id: ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# bus info: pci@0000:01:00.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# logical name: /dev/fb0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# version: 00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# width: 64 bits&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# clock: 33MHz&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# capabilities: vga_controller bus_master cap_list rom fb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# configuration: depth=32 driver=radeon latency=0 resolution=2048,1080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resources: irq:42 memory:e0000000-efffffff memory:f0020000-f003ffff ioport:e000(size=256) memory:c0000-dffff&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I followed a few false starts, during which I learned:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/11/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/11/25/</guid><description>&lt;p&gt;That (1) go tries to bake VCS info into go binaries and (2) go still doesn&amp;rsquo;t understand git worktrees :/ and (3) the easiest way to get go builds to work in a git worktree or bare git repo is to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;go env -w &lt;span class="nv"&gt;GOFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-buildvcs&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;m not sure how global these flags are.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/12/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/12/09/</guid><description>&lt;p&gt;That the &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt; elements can be styled to create nice preformatted diffs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins"&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2024/12/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/12/28/</guid><description>&lt;p&gt;That all the grief with css borders shifting the layout can be avoided by using &lt;code&gt;outline&lt;/code&gt; instead:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Outline is a line outside of the element&amp;rsquo;s border. Unlike other areas of the box, outlines don&amp;rsquo;t take up space, so they don&amp;rsquo;t affect the layout of the document in any way.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/outline#description"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/outline#description&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item></channel></rss>