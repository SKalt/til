<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2024s on Today I Learned</title><link>https://skalt.github.io/til/2024/</link><description>Recent content in 2024s on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/2024/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2024/01/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/03/</guid><description>&lt;blockquote>
&lt;p>bit bucket n.&lt;/p>
&lt;p>(very common) 1. The universal data sink (originally, the mythical receptacle used to catch bits when they fall off the end of a register during a shift instruction).
Discarded, lost, or destroyed data is said to have &amp;ldquo;gone to the bit bucket&amp;rdquo;.
On Unix, often used for &lt;code>/dev/null&lt;/code>.
Sometimes amplified as &amp;ldquo;the Great Bit Bucket in the Sky&amp;rdquo;.&lt;/p>
&lt;ol start="2">
&lt;li>The place where all lost mail and news messages eventually go. [&amp;hellip;]&lt;/li>
&lt;li>The ideal location for all unwanted mail responses.&lt;/li>
&lt;/ol>
&lt;p>Another variant of this legend has it that, as a consequence of the &amp;ldquo;parity preservation law&amp;rdquo;, the number of 1 bits that go to the bit bucket must equal the number of 0 bits.
Any imbalance results in bits filling up the bit bucket.
A qualified computer technician can empty a full bit bucket as part of scheduled maintenance.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/01/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/28/</guid><description>&lt;p>That 401 Unauthorized responses are supposed to include a &lt;code>www-authenticate&lt;/code> header with a value indicating how to obtain a valid token.
See &lt;a href="https://datatracker.ietf.org/doc/html/rfc6750#section-3">https://datatracker.ietf.org/doc/html/rfc6750#section-3&lt;/a> for more details.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/01/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/29/</guid><description>&lt;h2 id="typographic-units">Typographic Units&lt;/h2>
&lt;h3 id="absolute-distance">Absolute distance&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Name&lt;/th>
&lt;th style="text-align: center">CSS Unit&lt;/th>
&lt;th style="text-align: left">length&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">Picas&lt;/td>
&lt;td style="text-align: center">&lt;code>pc&lt;/code>&lt;/td>
&lt;td style="text-align: left">1/6 inch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Points&lt;/td>
&lt;td style="text-align: center">&lt;code>pt&lt;/code>&lt;/td>
&lt;td style="text-align: left">1/72 inches&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units">https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#absolute_length_units&lt;/a>&lt;/p>
&lt;h3 id="font-relative-units">Font-relative units&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>em&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>In metal type, the point size (and hence the em, from em quadrat) was equal to the line height of the metal body from which the letter rises.
[&amp;hellip;]
In some older texts, but not all, the em is defined, or said to have been defined, as the width of the capital &amp;lsquo;M&amp;rsquo; in the current typeface and point size.
[&amp;hellip;]
In [CSS] the em unit is the height of the font in nominal points or inches.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/01/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/01/31/</guid><description>&lt;p>That SQL implementations with recursive CTEs are Turing-complete!
It makes sense: recursion and conditionals are all that is required for Turing completeness.&lt;/p>
&lt;p>See &lt;a href="https://learnsql.com/blog/sql-subquery-cte-difference/">https://learnsql.com/blog/sql-subquery-cte-difference/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/02/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/05/</guid><description>&lt;p>That a &lt;code>*.tiff&lt;/code> file:&lt;/p>
&lt;ul>
&lt;li>was specified in 1986 by a company later consumed by Adobe&lt;/li>
&lt;li>was originally intended for scanner interop&lt;/li>
&lt;li>starts with an 8-byte header that includes a 2-byte magic number, a 2-byte endianness flag, and a 4-byte pointer to the first Image File Directory entry&lt;/li>
&lt;li>the max tiff size is 2^32 bytes due to the u32 pointer size&lt;/li>
&lt;li>Each IFD starts with a u16 count of entries, then a sequence of 12-byte ields, then another 4-byte offset of the next IFD entry (0 = none)&lt;/li>
&lt;li>each IFD entry (= &amp;ldquo;field&amp;rdquo;) has a 2-byte tag, 2 bytes of field type, 4-byte count, and 4-byte offset of the value(s) of the field.&lt;/li>
&lt;li>values may occur pretty much anywhere in the file, even before the IFD&lt;/li>
&lt;li>each &amp;ldquo;subfile&amp;rdquo; may have one of several encodings (e.g. black/white, grayscale, rgb, etc)&lt;/li>
&lt;/ul>
&lt;p>&amp;ndash; &lt;a href="https://docs.fileformat.com/image/tiff/">https://docs.fileformat.com/image/tiff/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/08/</guid><description>&lt;blockquote>
&lt;p>In signal processing, the Nyquist rate, named after Harry Nyquist, is a value (in units of samples per second or hertz, Hz) equal to twice the highest frequency (bandwidth) of a given function or signal.
When the function is digitized at a higher sample rate (see &amp;ldquo;Critical frequency&amp;rdquo;), the resulting discrete-time sequence is said to be free of the distortion known as aliasing.&lt;/p>
&lt;p>&amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/Nyquist_rate">https://en.wikipedia.org/wiki/Nyquist_rate&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>In &lt;a href="https://en.wikipedia.org/wiki/Signal_processing">signal processing&lt;/a> and related disciplines, &lt;strong>aliasing&lt;/strong> is the overlapping of frequency components resulting from a &lt;a href="https://en.wikipedia.org/wiki/Sample_rate">sample rate&lt;/a> below the &lt;a href="https://en.wikipedia.org/wiki/Nyquist_rate">Nyquist rate&lt;/a>.
This overlap results in &lt;a href="https://en.wikipedia.org/wiki/Distortion">distortion&lt;/a> or &lt;a href="https://en.wikipedia.org/wiki/Artifact_(error)">artifacts&lt;/a> when the &lt;a href="https://en.wikipedia.org/wiki/Signal_reconstruction">signal is reconstructed&lt;/a> from samples which causes the reconstructed signal to differ from the original continuous signal.
Aliasing that occurs in signals sampled in time, for instance in &lt;a href="https://en.wikipedia.org/wiki/Digital_audio">digital audio&lt;/a> or the &lt;a href="https://en.wikipedia.org/wiki/Stroboscopic_effect">stroboscopic effect&lt;/a>, is referred to as &lt;strong>temporal aliasing&lt;/strong>.
Aliasing in spatially sampled signals (e.g., &lt;a href="https://en.wikipedia.org/wiki/Moir%C3%A9_pattern">moirÃ© patterns&lt;/a> in &lt;a href="https://en.wikipedia.org/wiki/Digital_image">digital images&lt;/a>) is referred to as &lt;strong>spatial aliasing&lt;/strong>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/02/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/12/</guid><description>&lt;p>That rust has built-in numeric types named like &lt;code>NonZero*&lt;/code> that reserve the bit-pattern of 0 as a niche: see &lt;a href="https://doc.rust-lang.org/core/num/index.html">https://doc.rust-lang.org/core/num/index.html&lt;/a>.&lt;/p>
&lt;p>This is useful since that niche will absorb the cost of wrapping a &lt;code>NonZero&lt;/code> int with &lt;code>Option&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rs" data-lang="rs">&lt;span class="line">&lt;span class="cl">&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">core&lt;/span>::&lt;span class="n">num&lt;/span>::&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">mem&lt;/span>::&lt;span class="n">size_of&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Struct&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// has alignment 2, size 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>: &lt;span class="kt">u16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>: &lt;span class="nc">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; NonZeroU8: &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size_of&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; Option&amp;lt;NonZeroU8&amp;gt;: &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size_of&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; Struct&amp;lt;NonZeroU8&amp;gt;: &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size_of&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Struct&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Option&amp;lt;Struct&amp;lt;NonZeroU8&amp;gt;: &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size_of&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Struct&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>#&lt;span class="w"> &lt;/span>&lt;span class="n">NonZeroU8&lt;/span>: &lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>#&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>: &lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>#&lt;span class="w"> &lt;/span>&lt;span class="n">Struct&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>: &lt;span class="mi">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>#&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Struct&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NonZeroU8&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>: &lt;span class="mi">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2021&amp;amp;gist=7f5ee657d54e102aa7755c32bbdb94c9">playground link&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/14/</guid><description>&lt;p>A more concise way to implement light/dark modes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">:&lt;/span>&lt;span class="nd">root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">color-scheme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">light&lt;/span> &lt;span class="n">dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>which saves a few more bytes than my usual&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">:&lt;/span>&lt;span class="nd">root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">--fg&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">--bg&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">media&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nt">prefers-color-scheme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">dark&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">:&lt;/span>&lt;span class="nd">root&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">--fg&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">--bg&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences">https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences&lt;/a>&lt;/p>
&lt;p>I also learned that CSS has special syntax for systmem-provided colors, notably:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Canvas&lt;/code>: the default background color&lt;/li>
&lt;li>&lt;code>CanvasText&lt;/code>: the default text color&lt;/li>
&lt;/ul>
&lt;p>&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax">https://developer.mozilla.org/en-US/docs/Web/CSS/system-color#syntax&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/02/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/02/19/</guid><description>&lt;p>That CSS can adjust any font&amp;rsquo;s aspect value using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust">&lt;code>font-size-adjust&lt;/code>&lt;/a> &amp;ndash; the ratio between the cap height and the x-height, NOT the aspect ratio.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/07/</guid><description>&lt;p>That &lt;code>go mod tidy&lt;/code> needs to be followed by &lt;code>go mod vendor&lt;/code> to keep &lt;code>./vendor/modules.txt&lt;/code> up-to-date.
That &lt;code>go mod vendor&lt;/code> only pulls in files that are referenced by your current project.&lt;/p>
&lt;p>See &lt;a href="https://go.dev/ref/mod#vendoring">https://go.dev/ref/mod#vendoring&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/08/</guid><description>&lt;p>That OpenTelemetry HTTP reciever endpoints tend to have port 4318&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/10/</guid><description>&lt;p>That you can add &lt;code>#![warn(missing_docs)]&lt;/code> at the top of a &lt;code>lib.rs&lt;/code> file to lint for undocumented public methods.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/13/</guid><description>&lt;p>Common Platform Enumeration, a syntax for identifying &amp;ldquo;IT stuff&amp;rdquo;:&lt;/p>
&lt;pre tabindex="0">&lt;code>cpe
:&amp;lt;cpe_version&amp;gt;
:&amp;lt;part&amp;gt;
:&amp;lt;vendor&amp;gt;
:&amp;lt;product&amp;gt;
:&amp;lt;version&amp;gt;
:&amp;lt;update&amp;gt;
:&amp;lt;edition&amp;gt;
:&amp;lt;language&amp;gt;
:&amp;lt;sw_edition&amp;gt;
:&amp;lt;target_sw&amp;gt;
:&amp;lt;target_hw&amp;gt;
:&amp;lt;other&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Notably, &lt;code>part&lt;/code> can only be &lt;code>a|h|o&lt;/code> = &lt;code>app | hardware | OS&lt;/code>, not &amp;ldquo;documentation&amp;rdquo;.&lt;/p>
&lt;p>See &lt;a href="https://en.wikipedia.org/wiki/Common_Platform_Enumeration">https://en.wikipedia.org/wiki/Common_Platform_Enumeration&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/18/</guid><description>&lt;blockquote>
&lt;p>Alerts are an extension of Markdown used to emphasize critical information.
On GitHub, they are displayed with distinctive colors and icons to indicate the importance of the content.&lt;/p>
&lt;p>An example of all five types:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-md" data-lang="md">&lt;span class="line">&lt;span class="cl">&lt;span class="k">&amp;gt; &lt;/span>&lt;span class="ge">[!NOTE]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ge">&lt;/span>&lt;span class="k">&amp;gt; &lt;/span>&lt;span class="ge">Highlights information that users should take into account, even when skimming.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ge">&lt;/span>&lt;span class="k">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">&amp;gt; &lt;/span>&lt;span class="ge">[!TIP]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ge">&lt;/span>&lt;span class="k">&amp;gt; &lt;/span>&lt;span class="ge">Optional information to help a user be more successful.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>[!IMPORTANT]&lt;br>
Crucial information necessary for users to succeed.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/21/</guid><description>&lt;p>that &lt;code>depends_on: [ service ]&lt;/code> waits for &lt;code>service&lt;/code> to be &lt;strong>started&lt;/strong>, not for &lt;code>service&lt;/code> to be healthy.&lt;/p>
&lt;blockquote>
&lt;p>On startup, Compose does not wait until a container is &amp;ldquo;ready&amp;rdquo;, only until it&amp;rsquo;s running.&lt;/p>
&lt;p>The solution for detecting the ready state of a service is to use the condition attribute with one of the following options:&lt;/p>
&lt;ul>
&lt;li>service_started&lt;/li>
&lt;li>service_healthy. This specifies that a dependency is expected to be âhealthyâ, which is defined with healthcheck, before starting a dependent service.&lt;/li>
&lt;li>service_completed_successfully. This specifies that a dependency is expected to run to successful completion before starting a dependent service.&lt;/li>
&lt;/ul>
&lt;p>&amp;ndash; &lt;a href="https://docs.docker.com/compose/startup-order/">https://docs.docker.com/compose/startup-order/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/25/</guid><description>&lt;p>The authoritative list of &lt;!-- raw HTML omitted -->TLD&lt;!-- raw HTML omitted -->s can be found at &lt;a href="https://data.iana.org/TLD/tlds-alpha-by-domain.txt">https://data.iana.org/TLD/tlds-alpha-by-domain.txt&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/03/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/03/26/</guid><description>&lt;p>That you can specify an alternate &lt;code>.terraformrc&lt;/code> file using the environment variable &lt;code>TF_CLI_CONFIG_FILE=$ABSOLUTE_PATH&lt;/code>.
This can help with local provider development.
See &lt;a href="https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file">https://developer.hashicorp.com/terraform/cli/config/environment-variables#tf_cli_config_file&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/03/</guid><description>&lt;p>That BuildKit supports the using OpenTelemetry to trace builds with context from the &lt;code>$TRACEPARENT&lt;/code> and &lt;code>$TRACESTATE&lt;/code> environment variables (directly equivalent to their w3c header counterparts): &lt;a href="https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41">https://github.com/moby/buildkit/blob/dc23e43dc15c14dcf1871f8cc97a6e96c8f94a2e/util/tracing/env/traceenv.go#L20-L41&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/07/</guid><description>&lt;p>That any function named &lt;code>func init(){ ... }&lt;/code> runs on load of a module.
See &lt;a href="https://go.dev/ref/spec#Package_initialization">https://go.dev/ref/spec#Package_initialization&lt;/a>.
See also &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-init-in-go">https://www.digitalocean.com/community/tutorials/understanding-init-in-go&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/08/</guid><description>&lt;p>That &lt;code>select&lt;/code> can only be used to race communications operations (e.g. &lt;code>&amp;lt;- myChan&lt;/code>).
See &lt;a href="https://go.dev/ref/spec#Select_statements">https://go.dev/ref/spec#Select_statements&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/13/</guid><description>&lt;p>That you can write&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rs" data-lang="rs">&lt;span class="line">&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">N&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">todo!&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to specialize a function for different array sizes, etc.
You can use the following types in const generics:&lt;/p>
&lt;ul>
&lt;li>u8, u16, u32, u64, u128, usize&lt;/li>
&lt;li>i8, i16, i32, i64, i128, isize&lt;/li>
&lt;li>char&lt;/li>
&lt;li>bool&lt;/li>
&lt;/ul>
&lt;p>See &lt;a href="https://doc.rust-lang.org/reference/items/generics.html#const-generics">https://doc.rust-lang.org/reference/items/generics.html#const-generics&lt;/a>
See also &lt;a href="https://blog.cocl2.com/posts/const-currying-rs/">https://blog.cocl2.com/posts/const-currying-rs/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/17/</guid><description>&lt;p>That &lt;code>shasum(1)&lt;/code> is implemented in perl: &lt;a href="https://linux.die.net/man/1/shasum">https://linux.die.net/man/1/shasum&lt;/a>, though
&lt;code>shaXXXsum&lt;/code> et al. seem to be implemented in C: &lt;a href="https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103">https://github.com/coreutils/coreutils/blob/a9b78541fa7c06567c5b82fb4e89d85a1dc0c611/src/digest.c#L103&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/18/</guid><description>&lt;p>That &amp;ldquo;SASL&amp;rdquo; stands for &amp;ldquo;Simple Authentication and Security Layer&amp;rdquo;, which may/not be a misnomer: it&amp;rsquo;s a set of challenges and responses that can be embedded within a protocol.
Notably, one challenge is &amp;ldquo;OAUTHBEARER&amp;rdquo;, a standard Oauth 2.0 bearer token challenge.&lt;/p>
&lt;p>See &lt;a href="https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer">https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer&lt;/a>
See &lt;a href="https://www.rfc-editor.org/rfc/rfc4422">https://www.rfc-editor.org/rfc/rfc4422&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/20/</guid><description>&lt;p>That git will place a file with the (absolute?) path to the actual git dir
if initialized with &lt;a href="https://git-scm.com/docs/git-init#Documentation/git-init.txt---separate-git-dirltgit-dirgt">&lt;code>git init --separate-git-dir&lt;/code>&lt;/a>.
This is intended as an FS-agnostic symlink.&lt;/p>
&lt;p>The lesson here is to never assume &lt;code>repo/.git&lt;/code> exists and is a directory; use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git rev-parse --absolute-git-dir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://git-scm.com/docs/git-rev-parse#Documentation/git-rev-parse.txt---absolute-git-dir">docs&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/22/</guid><description>&lt;p>That Go has &lt;a href="https://go.dev/ref/spec#Label_scopes">labels&lt;/a> and can &lt;a href="https://go.dev/ref/spec#Goto_statements">&lt;code>goto label&lt;/code>&lt;/a>.
I&amp;rsquo;m not entirely sure what the usefulness of these is outside of &lt;code>switch&lt;/code> statements, but it&amp;rsquo;s still cool!&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/04/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/04/27/</guid><description>&lt;p>That you can add a &lt;code>[workspace.dependencies]&lt;/code> table in your top-level &lt;code>Cargo.toml&lt;/code> specifying paths to internal crates:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># ${PROJECT_DIR}/Cargo.toml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">workspace&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">members&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;path/to/my_crate&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">workspace&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">my_crate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">path&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;path/to/my_crate&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># ${PROJECT_DIR}/path/to/other_crate/Cargo.toml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">my_crate&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">workspace&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table">https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table&lt;/a>.
See also &lt;a href="https://doc.rust-lang.org/cargo/reference/workspaces.html">https://doc.rust-lang.org/cargo/reference/workspaces.html&lt;/a>.&lt;/p>
&lt;p>&lt;code>workspace = true&lt;/code> can also help share external dependencies within multiple internal crates; see &lt;a href="https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace">https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>Also, that u32 and u64 don&amp;rsquo;t implement &lt;code>Into&amp;lt;usize&amp;gt;&lt;/code>! I guess rust supports 16-bit pointer sizes.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/03/</guid><description>&lt;p>That zsh lazily+automatically loads scripts found in directories in &lt;code>$FPATH&lt;/code>: &lt;a href="https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/">https://www.linuxconsultant.org/zsh-autoload-a-guide-to-dynamic-loading-in-zsh/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/05/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/05/04/</guid><description>&lt;p>That a &lt;code>go.work&lt;/code> file can point to local &amp;ldquo;main modules&amp;rdquo; used for minimum-version selection.
&lt;code>go&lt;/code> will maintain a separate &lt;code>go.work.sum&lt;/code> file with the checksums of the workspace&amp;rsquo;s dependencies.
&lt;code>go work {init,use,edit}&lt;/code> manages the work-files.
&lt;code>$GOWORK&lt;/code> pointing to a file named like &lt;code>*.work&lt;/code> can switch between multiple workspace files.
See &lt;a href="https://go.dev/ref/mod#workspaces;">https://go.dev/ref/mod#workspaces;&lt;/a> the syntax of &lt;code>*.work&lt;/code> files is roughly equivalent to the syntax in &lt;code>go.mod&lt;/code>.&lt;/p>
&lt;hr>
&lt;p>That none of the following options ensure unused debug info is not included in rust wasm output:&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/06/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/12/</guid><description>&lt;p>That hosting websites in S3 &lt;em>will&lt;/em> redirect &lt;code>/&lt;/code> to &lt;code>/index.html&lt;/code> if you configure &lt;code>index.html&lt;/code> as in index document: &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html">https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/06/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/13/</guid><description>&lt;p>That MAC can stand for &amp;ldquo;Message Authentication Code&amp;rdquo; in a security context.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/06/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/17/</guid><description>&lt;p>That you can use the &lt;code>.gitmodules&lt;/code> document in the parent repo to configure a
submodule to track a branch with the same name as the parent repo&amp;rsquo;s current branch:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>submodule.&lt;!-- raw HTML omitted -->.branch&lt;/strong>&lt;/p>
&lt;p>[&amp;hellip;] A special value of &lt;code>.&lt;/code> is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository.&lt;/p>
&lt;p>&amp;ndash; &lt;a href="https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch">https://git-scm.com/docs/gitmodules#Documentation/gitmodules.txt-submoduleltnamegtbranch&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title/><link>https://skalt.github.io/til/2024/06/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/06/23/</guid><description>&lt;p>That a cargo package can have only one library: see &lt;a href="https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library">https://doc.rust-lang.org/cargo/reference/cargo-targets.html#library&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/07/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/07/05/</guid><description>&lt;p>That Python mangles class attributes named like &lt;code>__name&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Python mangles these names with the class name: if class &lt;code>Foo&lt;/code> has an attribute named &lt;code>__a&lt;/code>, it cannot be accessed by &lt;code>Foo.__a&lt;/code>.
(An insistent user could still gain access by calling &lt;code>Foo._Foo__a&lt;/code>.)
Generally, double leading underscores should be used only to avoid name conflicts with attributes in classes designed to be subclassed.&lt;/p>
&lt;p>Note: there is some controversy about the use of &lt;code>__names&lt;/code> (see below).&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/08/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/04/</guid><description>&lt;p>That if you specify an &lt;code>Entry-points&lt;/code> key in python &lt;code>.dist-info/METADATA&lt;/code>, python will create command-line wrappers for your scripts.&lt;/p>
&lt;p>See &lt;a href="https://packaging.python.org/en/latest/specifications/entry-points/">https://packaging.python.org/en/latest/specifications/entry-points/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/08/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/11/</guid><description>&lt;p>That virtualenvs may contain two files that alter the &lt;code>sys.path&lt;/code> outside of the &lt;code>$PYTHONPATH&lt;/code> variable:&lt;/p>
&lt;ol>
&lt;li>&lt;code>.venv/pyvenv.cfg&lt;/code> (see &lt;a href="https://docs.python.org/3/library/sys_path_init.html#virtual-environments">https://docs.python.org/3/library/sys_path_init.html#virtual-environments&lt;/a>)&lt;/li>
&lt;li>&lt;code>.venv/python3.*/site-packages/*.pth&lt;/code> (see &lt;a href="https://docs.python.org/3/library/sys_path_init.html#pth-files">https://docs.python.org/3/library/sys_path_init.html#pth-files&lt;/a>)&lt;/li>
&lt;/ol></description></item><item><title/><link>https://skalt.github.io/til/2024/08/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/12/</guid><description>&lt;p>That python dicts have an upsert method: &lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault">https://docs.python.org/3/library/stdtypes.html#dict.setdefault&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/08/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/19/</guid><description>&lt;p>That &lt;code>go build ./path/to/main.go&lt;/code> disregards other files in the same directory/package.
&lt;code>go build ./path/to&lt;/code> works fine.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/08/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/08/23/</guid><description>&lt;p>This is embarrassingly late, but TIL that BOEM stands for the Bureau of Ocean Energy Management (&lt;a href="https://www.boem.gov/">https://www.boem.gov/&lt;/a>)&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/09/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/21/</guid><description>&lt;p>That &lt;code>tsc --generateTrace&lt;/code> can generate browser-devtools-compatible data for flamegraph analysis.
See &lt;a href="https://github.com/microsoft/TypeScript/wiki/Performance-Tracing">https://github.com/microsoft/TypeScript/wiki/Performance-Tracing&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/09/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/24/</guid><description>&lt;p>That you an render code blocks in Go doc comments by indenting the lines of code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Add two numbers.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// this
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// is a
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// code block
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://tip.golang.org/doc/comment#code">https://tip.golang.org/doc/comment#code&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2024/09/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2024/09/28/</guid><description>&lt;p>That on windows, creating a virtualenv:&lt;/p>
&lt;ol>
&lt;li>symlinks executables into &lt;code>$VIRTUAL_ENV/Scripts&lt;/code> rather than &lt;code>$VIRTUAL_ENV/bin&lt;/code>&lt;/li>
&lt;li>only creates a &lt;code>python.exe&lt;/code> symlink, not a &lt;code>python3.exe&lt;/code> symlink.&lt;/li>
&lt;/ol>
&lt;p>See &lt;a href="https://docs.python.org/3/library/venv.html#creating-virtual-environments">https://docs.python.org/3/library/venv.html#creating-virtual-environments&lt;/a>&lt;/p>
&lt;p>Less exciting, but I also (re-)learned that setting a &lt;code>PYTHONPATH&lt;/code> on windows requires using &lt;code>;&lt;/code> rather than &lt;code>:&lt;/code> as the path-separator.&lt;/p></description></item></channel></rss>