<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2021s on Today I Learned</title><link>https://skalt.github.io/til/2021/</link><description>Recent content in 2021s on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/2021/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2021/07/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/12/</guid><description>&lt;p>TIL that terminals attached to interactive docker containers don&amp;rsquo;t necesarily respect ANSI escape codes.
I&amp;rsquo;m still not 100% sure what causes the terminal to respect ANSI escape codes or not, but &lt;code>test -t 1&lt;/code> didn&amp;rsquo;t seem to correctly discriminate.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/07/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/13/</guid><description>&lt;p>That &lt;code>pickle.loads(pickle.dumps(obj))&lt;/code> is faster than &lt;code>copy.deepcopy(obj)&lt;/code>
Learned from &lt;a href="https://twitter.com/simonw/status/1413635105755570177">Simon Willison&amp;rsquo;s twitter&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/07/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/14/</guid><description>&lt;p>that &lt;!-- raw HTML omitted -->Cmd&lt;!-- raw HTML omitted -->+&lt;!-- raw HTML omitted -->D&lt;!-- raw HTML omitted --> selects the next occurence of the currently-highlighted text in VS Code!
Thanks to Mark Brewer for teaching me this!&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/07/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/22/</guid><description>&lt;p>about &lt;code>const enum&lt;/code>s in typescript, which get compiled to their values rather than getting represented as a mapping object.
See &lt;a href="https://www.typescriptlang.org/docs/handbook/enums.html#const-enums">https://www.typescriptlang.org/docs/handbook/enums.html#const-enums&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/07/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/24/</guid><description>&lt;p>&lt;a href="https://web.dev/fetch-upload-streaming/#previously-on-the-exciting-adventures-of-fetch-streams">How to stream large responses using the Javascript &lt;code>Fetch&lt;/code> API:&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">reader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getReader&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">done&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">done&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Received&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Response fully received&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also: &lt;a href="https://linuxhandbook.com/login-shell/">the circumstances under which ~/.*profile files are run: only if you log in.&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/07/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/25/</guid><description>&lt;p>You can create new google docs/spreadsheets/presentations, office365 docs/sheets/presentations, and github repos/gists/codespaces by accessing specific URLs in the browser:&lt;/p>
&lt;h2 id="g-suite">G Suite&lt;/h2>
&lt;ul>
&lt;li>docs: &lt;a href="https://doc.new">https://doc.new&lt;/a>, &lt;a href="https://docs.new">https://docs.new&lt;/a>&lt;/li>
&lt;li>sheets: &lt;a href="https://sheet.new">https://sheet.new&lt;/a>, &lt;a href="https://sheets.new">https://sheets.new&lt;/a>&lt;/li>
&lt;li>slides: &lt;a href="http://slide.new">http://slide.new&lt;/a>, &lt;a href="http://slides.new">http://slides.new&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="office-365">Office 365&lt;/h2>
&lt;ul>
&lt;li>docs: &lt;a href="https://word.new">https://word.new&lt;/a>&lt;/li>
&lt;li>sheets: &lt;a href="https://excel.new">https://excel.new&lt;/a>&lt;/li>
&lt;li>slides: &lt;a href="https://ppt.new">https://ppt.new&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="github">github&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://repo.new">https://repo.new&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.new">https://gist.new&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codespace.new">https://codespace.new&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>source: &lt;a href="https://twitter.com/rothgar/status/1419339782258184192">https://twitter.com/rothgar/status/1419339782258184192&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/07/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/07/31/</guid><description>&lt;p>&lt;a href="https://git-scm.com/docs/git-grep">That you can use &lt;code>git grep&lt;/code>&lt;/a> to search for a string in a git repo.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/08/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/08/05/</guid><description>&lt;p>that running python with the &lt;a href="https://docs.python.org/3/using/cmdline.html#cmdoption-o">&lt;code>-O&lt;/code> flag disables &lt;code>assert&lt;/code> statements&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/08/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/08/12/</guid><description>&lt;p>about a new source of standard-ish python functionality: &lt;a href="https://github.com/mahmoud/boltons">https://github.com/mahmoud/boltons&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/09/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/05/</guid><description>&lt;p>about &lt;a href="https://pkg.go.dev/cmd/go#hdr-Build_constraints">go build constraints&lt;/a>. Add&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//go:build (booleanExprUsingTagNames)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to the top of the conditionally-included file. The boolean expression can be composed of tags (passed via &lt;code>go build -tag &amp;lt;tag&amp;gt;...&lt;/code>) or expressions referencing the host or target os and arch.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/09/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/06/</guid><description>&lt;p>about &lt;code>PATH_MAX&lt;/code>: the part of the POSIX standard which determines the maximum number of bytes allowed in an absolute path. In Linux, &lt;code>PATH_MAX&lt;/code> is 4096 &lt;a href="https://stackoverflow.com/a/9449307/6571327">[src]&lt;/a>, but it&amp;rsquo;s possible to construct longer paths if you don&amp;rsquo;t care about some (most) utilities that use the current working directory to fail due to buffer overflow.&lt;/p>
&lt;p>Also, I learned that &lt;a href="https://en.wikipedia.org/wiki/Comparison_of_file_systems#Limits">most filesystems restrict file names to 255 bytes&lt;/a>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/09/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/15/</guid><description>&lt;p>That you &lt;em>can&lt;/em>, technically, write inline comments in bash. Specifically, you have to put the comments in a subshell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> abc &lt;span class="sb">`&lt;/span>&lt;span class="c1">#put your comment here` \&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def &lt;span class="sb">`&lt;/span>&lt;span class="c1">#another chance for a comment` \&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xyz etc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>^ from &lt;a href="https://stackoverflow.com/a/23872003/6571327">https://stackoverflow.com/a/23872003/6571327&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/09/21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/21/</guid><description>&lt;p>That the &lt;!-- raw HTML omitted -->IANA&lt;!-- raw HTML omitted --> suggests 49152–65535 (215 + 214 to 216 − 1) for dynamic or private ports.
source: &lt;a href="https://en.wikipedia.org/wiki/Ephemeral_port#Range">https://en.wikipedia.org/wiki/Ephemeral_port#Range&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/09/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/09/24/</guid><description>&lt;p>that you can find the version of debian used by your current ubuntu version by running &lt;code>cat /etc/debian_version&lt;/code>. Even better, you can &lt;code>source /etc/os-release&lt;/code> and get &lt;code>$ID&lt;/code> and &lt;code>$VERSION_ID&lt;/code> variables.
Here&amp;rsquo;s what&amp;rsquo;s in the os-release for Ubuntu 20.04:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Ubuntu&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">VERSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;20.04.3 LTS (Focal Fossa)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ID&lt;/span>&lt;span class="o">=&lt;/span>ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ID_LIKE&lt;/span>&lt;span class="o">=&lt;/span>debian
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PRETTY_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Ubuntu 20.04.3 LTS&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">VERSION_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;20.04&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">HOME_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://www.ubuntu.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">SUPPORT_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://help.ubuntu.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">BUG_REPORT_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://bugs.launchpad.net/ubuntu/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PRIVACY_POLICY_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">VERSION_CODENAME&lt;/span>&lt;span class="o">=&lt;/span>focal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">UBUNTU_CODENAME&lt;/span>&lt;span class="o">=&lt;/span>focal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sources: &lt;a href="https://askubuntu.com/a/445496/505362">https://askubuntu.com/a/445496/505362&lt;/a> and the source code at &lt;a href="https://dot.net/v1/dotnet-installer.sh">https://dot.net/v1/dotnet-installer.sh&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/01/</guid><description>&lt;p>That there&amp;rsquo;s a postgres keyword &lt;code>DEALLOCATE&lt;/code> to remove prepared statements from memory: &lt;a href="https://www.postgresql.org/docs/current/sql-deallocate.html">https://www.postgresql.org/docs/current/sql-deallocate.html&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/02/</guid><description>&lt;p>that you can hold &lt;!-- raw HTML omitted -->shift+alt&lt;!-- raw HTML omitted --> (linux) or &lt;!-- raw HTML omitted -->shift+opt&lt;!-- raw HTML omitted --> (mac) and click to select box of rows and columns in VS Code.
See &lt;a href="https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_column-box-selection">https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_column-box-selection&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/04/</guid><description>&lt;p>that different versions of &lt;code>sort(1)&lt;/code> have different sorting presets.
For example, on ubuntu 20.04 vs debian buster, &lt;code>sort&lt;/code> will swap the order of how it sorts &lt;code>_&lt;/code>s.
These differences can be resolved by passing &lt;code>--unique --dictionary-order --stable&lt;/code>.&lt;/p>
&lt;p>Bonus: &lt;code>-h/--human-numeric-sort&lt;/code> can sort SI suffixes.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/07/</guid><description>&lt;p>That GNU awk has a networking stack: &lt;a href="https://www.gnu.org/software/gawk/manual/gawkinet/gawkinet.html">https://www.gnu.org/software/gawk/manual/gawkinet/gawkinet.html&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/09/</guid><description>&lt;p>That &lt;code>cgo&lt;/code> will automagically ship a &lt;code>C.sizeof_YourStruct&lt;/code> for every C struct that you can reference as &lt;code>C.YourStruct&lt;/code>.
This is useful for pointer arithmetic via &lt;code>unsafe.Pointer(uintptr(something) + uintptr(intIndex * C.sizeof_YourStruct))&lt;/code>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/12/</guid><description>&lt;p>about the shell &lt;code>until&lt;/code> keyword, which is equivalent to &lt;code>while !&lt;/code>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/13/</guid><description>&lt;p>about &lt;a href="https://linux.die.net/man/1/reset">&lt;code>reset&lt;/code>&lt;/a>, which resets your terminal after a series of undesired ANSI escape codes.
I also learned about &lt;a href="https://linux.die.net/man/1/echo">&lt;code>echo -e &amp;quot;\e&amp;quot;&lt;/code>&lt;/a> meaning &amp;ldquo;interpret backslash escape codes&amp;rdquo; (&lt;code>-e&lt;/code>) and &lt;code>&amp;quot;\e&amp;quot; == &amp;quot;\033&amp;quot;&lt;/code>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/19/</guid><description>&lt;p>that you can write multiple lines to a file using a &lt;code>cat &amp;gt; path/to/file&lt;/code> with argument, like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /tmp/file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">subsequent typed input
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">is still stdin, which is being &lt;span class="nb">read&lt;/span> by &lt;span class="sb">`&lt;/span>cat&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">and so will be written to the file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">^C &lt;span class="c1"># cancels `cat` writing to the file&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2021/10/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/22/</guid><description>&lt;p>That there are special CSS classes for theme colors in MSFT PowerPoint: &lt;a href="https://www.brightcarbon.com/blog/responsive-svgs-and-smart-icons-in-powerpoint/">https://www.brightcarbon.com/blog/responsive-svgs-and-smart-icons-in-powerpoint/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/27/</guid><description>&lt;p>About the svg &lt;code>view&lt;/code> element: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view">https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&lt;/a>
It can be used to create views referable like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">svg&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;total&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">view&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;view-1&amp;#34;&lt;/span> &lt;span class="na">viewBox&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;...&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">circle&lt;/span> &lt;span class="na">cx&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span> &lt;span class="na">cy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">svg&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#view-1&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title/><link>https://skalt.github.io/til/2021/10/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/28/</guid><description>&lt;p>That you can detect the terminal you&amp;rsquo;re running in (including vscode) by checking the value of &lt;code>&amp;quot;${TERM_PROGRAM:-}&amp;quot;&lt;/code>.
The VS Code integrated termial always has a &lt;code>$TERM_PROGRAM&lt;/code> of &lt;code>vscode&lt;/code>.&lt;/p>
&lt;p>Source: &lt;a href="https://stackoverflow.com/a/59231654/6571327">https://stackoverflow.com/a/59231654/6571327&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/10/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/10/30/</guid><description>&lt;p>about &lt;code>terminfo&lt;/code>, the terminal information database: it can be queried to find all kinds of fun facts about your current terminal.
For instance,&lt;/p>
&lt;ul>
&lt;li>&lt;code>tput cols&lt;/code> =&amp;gt; number of columns in the current terminal&lt;/li>
&lt;li>&lt;code>tput colors&lt;/code> =&amp;gt; number of colors the terminal supports&lt;/li>
&lt;li>&lt;code>tput setaf&lt;/code> =&amp;gt; generate ansi codes to set the foregrount color in the terminal&lt;/li>
&lt;/ul>
&lt;p>Also, &lt;code>infocmp screen&lt;/code> dumps a bunch of other related information drawn from &lt;code>terminfo&lt;/code>.&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/11/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/03/</guid><description>&lt;p>That&lt;/p>
&lt;ol>
&lt;li>
&lt;blockquote>
&lt;p>There are two accepted formats for these strings: plain keyword/value strings and URIs.
URIs generally follow RFC 3986, except that multi-host connection strings are allowed.&lt;/p>
&lt;p>&amp;ndash; &lt;a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING">https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING&lt;/a>&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>you can pass a &lt;code>application_name&lt;/code> parameter to a connection string &amp;ndash; &lt;a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-APPLICATION-NAME">https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-APPLICATION-NAME&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title/><link>https://skalt.github.io/til/2021/11/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/05/</guid><description>&lt;p>That &lt;code>sudo&lt;/code> has a webpage and an unfortunate mascot: &lt;a href="https://www.sudo.ws/">https://www.sudo.ws/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/11/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/23/</guid><description>&lt;p>&lt;code>locate&lt;/code> searches all filenames for a keyword using a database which you can update &lt;code>updatedb&lt;/code>.
&lt;code>whereis&lt;/code> searches for binaries using the same mechanism.&lt;/p>
&lt;p>&lt;a href="https://www.madebygps.com/an-intro-to-finding-things-in-linux/">https://www.madebygps.com/an-intro-to-finding-things-in-linux/&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/11/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/11/29/</guid><description>&lt;p>that there&amp;rsquo;s a &lt;code>pg_sleep(seconds)&lt;/code> function: see &lt;a href="https://til.hashrocket.com/posts/8a6f68519d-sleeping-in-postgresql">https://til.hashrocket.com/posts/8a6f68519d-sleeping-in-postgresql&lt;/a>&lt;/p></description></item><item><title/><link>https://skalt.github.io/til/2021/12/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2021/12/01/</guid><description>&lt;p>that you can write any file in your git history using &lt;code>git show &amp;lt;ref&amp;gt;:&amp;lt;path&amp;gt;&lt;/code>.&lt;/p>
&lt;p>See &lt;a href="https://juplo.de/cat-any-file-in-any-commit-with-git/">https://juplo.de/cat-any-file-in-any-commit-with-git/&lt;/a>&lt;/p></description></item></channel></rss>