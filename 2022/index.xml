<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2022s on Today I Learned</title><link>https://skalt.github.io/til/2022/</link><description>Recent content in 2022s on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY-NC-SA 4.0</copyright><atom:link href="https://skalt.github.io/til/2022/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://skalt.github.io/til/2022/01/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/04/</guid><description>&lt;p&gt;about the css &lt;code&gt;:target&lt;/code&gt; selector (matches the element with the id specified by the url document-fragment)
and the svg &lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt; element, which specifies a &lt;code&gt;viewBox&lt;/code&gt; and can have an id.&lt;/p&gt;
&lt;p&gt;see &lt;a href="https://css-tricks.com/svg-fragment-identifiers-work/"&gt;https://css-tricks.com/svg-fragment-identifiers-work/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/09/</guid><description>&lt;p&gt;1: That you can set statement timeouts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;DATABASE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mydatabase&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;statement_timeout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;60s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Source: &lt;a href="https://blog.crunchydata.com/blog/five-tips-for-a-healthier-postgres-database-in-the-new-year"&gt;https://blog.crunchydata.com/blog/five-tips-for-a-healthier-postgres-database-in-the-new-year&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2: that you can query your cache and index hit metrics (&lt;a href="https://blog.crunchydata.com/blog/cleaning-up-your-postgres-database"&gt;src&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;3: writes to indexed columns don&amp;rsquo;t necessarily update indices:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If an indexed column has to have new values inserted, or existing values updated or deleted, the corresponding index does get updated as well. Ironically, that might make queries take more time to evaluate. If write operations are frequently run against a particular column then you may need to more carefully evaluate creating an index here.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/10/</guid><description>&lt;p&gt;Of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption"&gt;html table &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; element&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/11/</guid><description>&lt;p&gt;that you can pass default values to css variable references, e.g. &lt;code&gt;var(--button-color, pink)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the SVG fragment identifier addresses a time segment (e.g., MyDrawing.svg#t=10),then the initial view into the SVG document is established as if no fragment identifier was provided. The rendering of the SVG Document shall be as if the setCurrentTime method on the SVG Document element had been called with the begin time value from the fragment identifier. Additionally, if an end time value is provided in the fragment identifier, the effect is equivalent to calling the pauseAnimations method on the SVG Document when the document time reaches the end time of the fragment identifier.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/13/</guid><description>&lt;p&gt;In sqlite, all rows have a 64-bit ROWID (with some exceptions). Putting those aside, if you have a single-column integer primary key and use the magic words &lt;code&gt;PRIMARY KEY INTEGER&lt;/code&gt; then the pkey becomes an alias for rowid, greatly speeding up lookups. I&amp;rsquo;m not sure how this affects insertions, though.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key"&gt;https://sqlite.org/lang_createtable.html#rowids_and_the_integer_primary_key&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/26/</guid><description>&lt;p&gt;That you can extract sensitive output values from terraform, you can &lt;code&gt;terraform output $output_name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;ndash; see &lt;a href="https://learn.hashicorp.com/tutorials/terraform/outputs#redact-sensitive-outputs"&gt;https://learn.hashicorp.com/tutorials/terraform/outputs#redact-sensitive-outputs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, &lt;code&gt;sqlite&lt;/code&gt; provides a &lt;code&gt;PRAGMA user_version=&amp;lt;number&amp;gt;&lt;/code&gt; to let applications store
and retrieve a versioning number.
See &lt;a href="https://sqlite.org/pragma.html#pragma_user_version"&gt;https://sqlite.org/pragma.html#pragma_user_version&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/01/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/01/31/</guid><description>&lt;p&gt;that the &lt;code&gt;fmt&lt;/code&gt; utility exists. It seems to fold or center text according to a target width.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/08/</guid><description>&lt;p&gt;In &lt;code&gt;zsh&lt;/code&gt;, &lt;code&gt;ls *(n)&lt;/code&gt; will &amp;ldquo;human-sort&amp;rdquo; mostly-numeric filenames.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers"&gt;https://zsh.sourceforge.io/Doc/Release/Expansion.html#Glob-Qualifiers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/nedbat/status/1491032300800421892"&gt;https://twitter.com/nedbat/status/1491032300800421892&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/14/</guid><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;that adding a &lt;code&gt;!&lt;/code&gt; suffix tells &lt;code&gt;tsc&lt;/code&gt; that the expression to the left doesn&amp;rsquo;t evaluate to &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mariusschulz.com/blog/assertion-functions-in-typescript#using-the-non-null-assertion-operator"&gt;https://mariusschulz.com/blog/assertion-functions-in-typescript#using-the-non-null-assertion-operator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;that going to &lt;code&gt;about:profile&lt;/code&gt; in firefox lets you create separate firefox profiles.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/18/</guid><description>&lt;p&gt;you can import from a parent-module using &lt;code&gt;from ... import &lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/25/</guid><description>&lt;p&gt;that you can use variables in make targets, e.g.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-make" data-lang="make"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;path/${TO}/file&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;/${&lt;span class="n"&gt;TO&lt;/span&gt;}/&lt;span class="n"&gt;other&lt;/span&gt;/&lt;span class="n"&gt;file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/02/28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/02/28/</guid><description>&lt;p&gt;If you want to get a list of &lt;code&gt;aws:principalTags/*&lt;/code&gt; values that can be used in your IAM conditions, search CloudTrail events for &lt;code&gt;Event Name: AssumeRoleWithSaml&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/06/</guid><description>&lt;p&gt;About &lt;code&gt;git-sparse-checkout&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linuxhint.com/what-is-git-sparse-checkout/"&gt;https://linuxhint.com/what-is-git-sparse-checkout/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-sparse-checkout"&gt;https://git-scm.com/docs/git-sparse-checkout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The general script for doing a sparse checkout is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;span class="nv"&gt;git_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;git_url&lt;/span&gt;&lt;span class="p"&gt;:?required&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;target_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_dir&lt;/span&gt;&lt;span class="p"&gt;:?required&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;is_git_dir&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; git rev-parse&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;init&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; mkdir -p &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; ! is_git_dir&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git init &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git remote add -f origin &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$git_url&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git config core.sparseCheckout &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git sparse-checkout init &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git sparse-checkout &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; git pull origin master
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see also: &lt;a href="https://about.gitlab.com/blog/2020/03/13/partial-clone-for-massive-repositories/"&gt;https://about.gitlab.com/blog/2020/03/13/partial-clone-for-massive-repositories/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/08/</guid><description>&lt;p&gt;random: turns out HTML comments are valid line-comments in JS: &lt;a href="https://smitop.com/post/js-html-comments/"&gt;https://smitop.com/post/js-html-comments/&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/17/</guid><description>&lt;p&gt;About the terraform &lt;code&gt;count&lt;/code&gt; meta-argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can pass a &lt;code&gt;count = n&lt;/code&gt; to any resource-block to create n copies of the resource&lt;/li&gt;
&lt;li&gt;you can differentiate each of the resources using &lt;code&gt;${count.index}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/18/</guid><description>&lt;p&gt;How to check if a debian package is installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;deb_pkg_is_installed&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; sudo dpkg --get-selections &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/19/</guid><description>&lt;p&gt;How to pass a multi-character field separator to &lt;code&gt;awk&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk -F &lt;span class="s1"&gt;&amp;#39;[ :]+&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $1, $3}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# character set: [ :]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# repetition: +&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/03/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/03/22/</guid><description>&lt;p&gt;You can replace the &lt;code&gt;nth&lt;/code&gt; instance of a pattern on a line with sed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;a\tb\tc\n&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/\t/\t~/2&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a b ~c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/04/</guid><description>&lt;p&gt;to run &lt;code&gt;terraform output $output_name&lt;/code&gt; to print a named output&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/06/</guid><description>&lt;p&gt;That python f-strings can do&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;date and time formatting: &lt;code&gt;f&amp;quot;{today:%Y-%m-%d}&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;have a variable-debugging format: &lt;code&gt;f&amp;quot;{x = }, {y = }&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can use &lt;code&gt;__repr__&lt;/code&gt; rather than &lt;code&gt;__str__&lt;/code&gt;: &lt;code&gt;f&amp;quot;{user!r}&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can be nested: &lt;code&gt;f&amp;quot;output: {value:{width}.{precision}}&amp;quot;&lt;/code&gt;
&lt;a href="https://martinheinz.dev/blog/70"&gt;https://martinheinz.dev/blog/70&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of the &lt;code&gt;window.prompt()&lt;/code&gt; method:
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt"&gt;https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/08/</guid><description>&lt;p&gt;What hardlinks are: direct references to inodes. A hardlink can&amp;rsquo;t reference filesystem objects that don&amp;rsquo;t have inodes, such as directories or ports, and aren&amp;rsquo;t portable across different hardware devices even with the same filesystem layout (I think).&lt;/p&gt;
&lt;p&gt;Also, the opposite of &lt;code&gt;mount(8)&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;unmount&lt;/code&gt;, it&amp;rsquo;s &lt;code&gt;umount&lt;/code&gt; &amp;gt;:(&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gzip -vt $path_to_file&lt;/code&gt; checks the validity of a gzip archive: see
&lt;a href="https://unix.stackexchange.com/questions/359303/check-validity-of-gz-file"&gt;https://unix.stackexchange.com/questions/359303/check-validity-of-gz-file&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/11/</guid><description>&lt;p&gt;You can use &lt;code&gt;journalctl -u ${service_name}.service --since ${time:-today}&lt;/code&gt; to view the logs of a systemd service: &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs"&gt;https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/13/</guid><description>&lt;p&gt;That a rust if-statement can have a return type&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rust" data-lang="rust"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;: &lt;span class="kt"&gt;u32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stmt_result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;even steven&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;odd steven&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="fm"&gt;assert_eq!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;odd steven&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/20/</guid><description>&lt;p&gt;&lt;code&gt;tar -ztvf file.tar.gz&lt;/code&gt; will list the files in tar.gz&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/22/</guid><description>&lt;p&gt;that there&amp;rsquo;s a scheduled send option in slack. It&amp;rsquo;s the first option in the dropdown next to the send button.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/29/</guid><description>&lt;p&gt;how to check the last &lt;code&gt;apt update&lt;/code&gt; time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;last_update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;stat --format&lt;span class="o"&gt;=&lt;/span&gt;%Y /var/cache/apt/pkgcache.bin&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://askubuntu.com/a/410259/505362"&gt;https://askubuntu.com/a/410259/505362&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/04/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/04/30/</guid><description>&lt;p&gt;That there&amp;rsquo;s an IETF spec for CSVs/TSVs, and it uses doubled double-quotes as quote-escapes, as SQL does
&lt;a href="https://datatracker.ietf.org/doc/html/rfc4180#section-2"&gt;https://datatracker.ietf.org/doc/html/rfc4180#section-2&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/03/</guid><description>&lt;p&gt;aws policy documents can change the order of items within permissions arrays, but that&amp;rsquo;s safe to ignore:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hashicorp/terraform-provider-aws/issues/11801"&gt;Order is lost for data &lt;code&gt;aws_iam_policy_document&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jen20/awspolicyequivalence/issues/10"&gt;Policy elements that are syntactically lists but semantically sets should have their order ignored&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hashicorp/terraform-provider-aws/issues/23288"&gt;Perpetual diffs / Objects have changed outside of Terraform &lt;/a&gt; tracking ticket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, that &lt;code&gt;&amp;amp;&lt;/code&gt; types take 8 bytes = 64 bits on 64-bit systems&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rust" data-lang="rust"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;mem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 24
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;: &lt;span class="kt"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Quux&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="na"&gt;&amp;#39;a&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;: &lt;span class="kt"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Foo: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 32
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&amp;amp;Foo: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 8 -- a pointer?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Quux: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Quux&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 16 -- a pointer + a usize!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&amp;amp;Quux: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mem&lt;/span&gt;::&lt;span class="n"&gt;size_of&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Quux&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 8 -- another pointer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/04/</guid><description>&lt;p&gt;Not to use &lt;code&gt;BETWEEN&lt;/code&gt; for timestamps
Not to use &lt;code&gt;char(n)&lt;/code&gt;, or &lt;code&gt;varchar(n)&lt;/code&gt;, since they&amp;rsquo;re not natively fixed-width and will defy expectations.
See &lt;a href="https://wiki.postgresql.org/wiki/Don't_Do_This"&gt;https://wiki.postgresql.org/wiki/Don't_Do_This&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, I learned that you can&amp;rsquo;t run &lt;code&gt;chsh(1)&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt;; &lt;code&gt;chsh&lt;/code&gt; needs to run as the user who&amp;rsquo;s changing their shell.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/05/</guid><description>&lt;p&gt;To prefer async context managers or &lt;code&gt;asyncio.run()&lt;/code&gt; instead of creating+managing event loops natively.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/09/</guid><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;that &lt;code&gt;sudo&lt;/code&gt; can be configured with the &lt;code&gt;visudo&lt;/code&gt; command &lt;em&gt;and&lt;/em&gt; that sudo can produce audit logs.
See &lt;a href="https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/"&gt;https://www.sudo.ws/posts/2022/05/sudo-for-blue-teams-how-to-control-and-log-better/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;that there&amp;rsquo;s an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/closest"&gt;&lt;code&gt;Element.closest(selector)&lt;/code&gt;&lt;/a&gt; method, which means you can run this function to set the url to the closest link to an element:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;[id]&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;$0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;that you can use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*...*/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one_table&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;other_table&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;USING&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;common_column&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as shorthand for &lt;code&gt;one_table.common_column = other_table.common_column&lt;/code&gt;.
See &lt;a href="https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM"&gt;https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/10/</guid><description>&lt;p&gt;That you can call &lt;code&gt;time(1)&lt;/code&gt; to time how long a shell command takes, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; terraform fmt -write&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; -recursive .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# terraform fmt -write=true -recursive . 0.10s user 0.23s system 24% cpu 1.377 total&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/16/</guid><description>&lt;p&gt;that &lt;code&gt;gzip(1)&lt;/code&gt;, by default, includes file &lt;code&gt;mtime&lt;/code&gt;s. The flag to prevent gzip from zipping non-deterministically is &lt;code&gt;gzip --no-name&lt;/code&gt; or &lt;code&gt;gzip -n&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/18/</guid><description>&lt;p&gt;The term &amp;ldquo;brochureware&amp;rdquo;: &amp;ldquo;simply listing products and services on a [static] Web site&amp;rdquo;.
&lt;a href="https://en.wikipedia.org/wiki/Brochureware"&gt;https://en.wikipedia.org/wiki/Brochureware&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/23/</guid><description>&lt;p&gt;aarch64 is a 64-bit version of armv7 (which seems to be 32-bit). Thus, aarch64 = arm64 ~= armv8&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AArch64 is the 64-bit state introduced in the Armv8-A architecture (&lt;a href="https://en.wikipedia.org/wiki/ARM_architecture#ARMv8-A)"&gt;https://en.wikipedia.org/wiki/ARM_architecture#ARMv8-A)&lt;/a&gt;. The 32-bit state which is backwards compatible with Armv7-A and previous 32-bit Arm architectures is referred to as AArch32. Therefore the GNU triplet for the 64-bit ISA is aarch64. The Linux kernel community chose to call their port of the kernel to this architecture arm64 rather than aarch64, so that&amp;rsquo;s where some of the arm64 usage comes from.
&amp;ndash; &lt;a href="https://stackoverflow.com/a/47274698/6571327"&gt;https://stackoverflow.com/a/47274698/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/30/</guid><description>&lt;p&gt;How to write hugo templates.
Hugo seems to require &lt;!-- raw HTML omitted --&gt;RTFM&lt;!-- raw HTML omitted --&gt; to get a grasp on the functions and variables available in its DSL.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/05/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/05/31/</guid><description>&lt;p&gt;That &lt;code&gt;sql&lt;/code&gt; has assertions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ASSERTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;Constraint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;CHECK&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;search&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;constraint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see &lt;a href="https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement"&gt;https://crate.io/docs/sql-99/en/latest/chapters/20.html#create-assertion-statement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;h/t &lt;a href="https://www.scattered-thoughts.net/log/0024/"&gt;https://www.scattered-thoughts.net/log/0024/&lt;/a&gt; for bringing that to my attention.&lt;/p&gt;
&lt;p&gt;Also, from the weekend: in postgres, at least, you can call &lt;code&gt;TABLE :table_name;&lt;/code&gt; directly to &lt;code&gt;SELECT * FROM :table_name;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also: how to look up a domain name from an ip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;reverse_ip_lookup&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;ip_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; dig -x &lt;span class="nv"&gt;$ip_address&lt;/span&gt; +noall +answer
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also: how to audit AWS VPC flow logs from CloudWatch Log Insights: use the example queries in the right sidebar.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/01/</guid><description>&lt;p&gt;That &lt;code&gt;pg_dumpall&lt;/code&gt; exists.
That you need to use &lt;code&gt;pg_dumpall&lt;/code&gt; to dump tablespaces, roles, and subscriptions.
That &lt;code&gt;pg_dumpall&lt;/code&gt; will dump the &lt;code&gt;postgres&lt;/code&gt; role by default, causing resultant dump to fail to restore.
Fortunately, I&amp;rsquo;m able to &lt;code&gt;grep -ve '^CREATE ROLE postgres&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/02/</guid><description>&lt;p&gt;How to create a JS &lt;code&gt;BigInt&lt;/code&gt; value:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A BigInt value, also sometimes just called a BigInt, is a bigint primitive, created by appending n to the end of an integer literal, or by calling the BigInt() constructor (but without the new operator) and giving it an integer value or string value.
&amp;ndash; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/06/</guid><description>&lt;p&gt;that chickens are native to tropical jungles in south-east Asia.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://www.theguardian.com/science/2022/jun/06/chickens-were-first-tempted-down-from-trees-by-rice-research-suggests"&gt;https://www.theguardian.com/science/2022/jun/06/chickens-were-first-tempted-down-from-trees-by-rice-research-suggests&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/07/</guid><description>&lt;p&gt;That 1Password has a separate SSH key type! &lt;a href="https://developer.1password.com/docs/ssh/manage-keys/"&gt;https://developer.1password.com/docs/ssh/manage-keys/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, that &lt;code&gt;make&lt;/code&gt; has a &lt;code&gt;MAKEFLAGS&lt;/code&gt; variable that can be used in recursive calls to &lt;code&gt;make&lt;/code&gt;: see
&lt;a href="https://earthly.dev/blog/make-flags/"&gt;https://earthly.dev/blog/make-flags/&lt;/a&gt;. This also means you can set &lt;code&gt;-r&lt;/code&gt;, which eliminates default rules and file actions.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/08/</guid><description>&lt;p&gt;that you can write &lt;code&gt;raise SomeException() from prev_exception&lt;/code&gt;: see
&lt;a href="https://docs.python.org/3/reference/simple_stmts.html#raise"&gt;https://docs.python.org/3/reference/simple_stmts.html#raise&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/14/</guid><description>&lt;p&gt;That &lt;code&gt;Array.sort&lt;/code&gt; separates floats and ints:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;7.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// [ 8, 7.4, 14, 13, 12, 11 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// [ 11, 12, 13, 14, 7.4, 8 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// [ 8, 7.4, 14, 13, 12, 11 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/06/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/06/24/</guid><description>&lt;p&gt;That on GitHub, you can add footers like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-md" data-lang="md"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;statement[^1]
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;[^1]: footnote
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/"&gt;https://github.blog/changelog/2021-09-30-footnotes-now-supported-in-markdown-fields/&lt;/a&gt; or &lt;a href="https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes"&gt;https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/01/</guid><description>&lt;p&gt;That in Chrome/chromium you can view the actually-rendered font by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;inspecting an element&lt;/li&gt;
&lt;li&gt;view computed properties&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;source: &lt;a href="https://stackoverflow.com/a/31254584/6571327"&gt;https://stackoverflow.com/a/31254584/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/02/</guid><description>&lt;p&gt;That you can unescape newlines with &lt;code&gt;printf &amp;quot;%b&amp;quot; 'escaped\nstring'&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;escaped&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a\nb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;%b&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$escaped&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/04/</guid><description>&lt;p&gt;How to subset fonts:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;# in a virtualenv
pip install fonttools brotli zopfli
pyftsubset --help
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fonttools.readthedocs.io/en/latest/subset/index.html#initial-glyph-set-specification"&gt;https://fonttools.readthedocs.io/en/latest/subset/index.html#initial-glyph-set-specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markoskon.com/creating-font-subsets/#available-tools"&gt;https://markoskon.com/creating-font-subsets/#available-tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clagnut.com/blog/2418/"&gt;https://clagnut.com/blog/2418/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wakamaifondue.com/beta/"&gt;https://wakamaifondue.com/beta/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, optical-sized variable fonts look great.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/06/</guid><description>&lt;p&gt;that DNS listens on port 53&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/08/</guid><description>&lt;p&gt;That there&amp;rsquo;s an official 1Password terraform provider: &lt;a href="https://registry.terraform.io/providers/1Password/onepassword/latest/docs"&gt;https://registry.terraform.io/providers/1Password/onepassword/latest/docs&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/11/</guid><description>&lt;p&gt;CMD+K clears the screen same as &lt;code&gt;clear&lt;/code&gt; does!&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/27/</guid><description>&lt;p&gt;That there&amp;rsquo;s a &lt;code&gt;npm outdated&lt;/code&gt; command that finds packages which are not at their most recent versions!
Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;npm outdated --global
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Package Current Wanted Latest Location&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# n 7.5.0 7.5.0 9.0.0 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# npm 6.14.15 6.14.17 8.15.0 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# pnpm 6.15.2 6.33.1 7.6.0 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# yarn 1.22.11 1.22.19 1.22.19 global&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/29/</guid><description>&lt;p&gt;that in bash and zsh, you can put a newline in a variable like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;newline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;newline&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;learned from: &lt;a href="https://stackoverflow.com/a/4456399/6571327"&gt;https://stackoverflow.com/a/4456399/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/30/</guid><description>&lt;p&gt;Of the existence of &lt;a href="https://en.wikipedia.org/wiki/MultiDimensional_eXpressions"&gt;MDX (MultiDimensional eXpressions)&lt;/a&gt;, a query language for OLAP cubes. I came across it while researching &lt;code&gt;clickhouse&lt;/code&gt; db.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/07/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/07/31/</guid><description>&lt;p&gt;About creating json values using sqlite3&amp;rsquo;s built-in json value support.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- {&amp;#34;foo&amp;#34;:{&amp;#34;bar&amp;#34;:&amp;#34;baz&amp;#34;}}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- {&amp;#34;foo&amp;#34;:[&amp;#34;bar&amp;#34;,&amp;#34;baz&amp;#34;]}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;-- works with nested queries too
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- {&amp;#34;foo&amp;#34;:[&amp;#34;bar&amp;#34;,&amp;#34;baz&amp;#34;]}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;INTEGER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;VALUES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json_group_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- [&amp;#34;A&amp;#34;,&amp;#34;D&amp;#34;,&amp;#34;C&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;-- [&amp;#34;C&amp;#34;,&amp;#34;B&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;-- [&amp;#34;B&amp;#34;,&amp;#34;A&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Caveat: you sometimes have to wrap nested values from nested queries in &lt;code&gt;json()&lt;/code&gt;, else they&amp;rsquo;ll be escaped as json string literals. See &lt;a href="https://stackoverflow.com/questions/55421128/how-do-i-get-nested-json-data-out-of-sqlite-with-a-multi-level-group-by"&gt;https://stackoverflow.com/questions/55421128/how-do-i-get-nested-json-data-out-of-sqlite-with-a-multi-level-group-by&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/06/</guid><description>&lt;p&gt;How to consistently establish relative symlinks within a git repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="c1"&gt;# the directory in which you want to create the symlink&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ln -s ../relative/path/to/source.file ./symlink.name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/a/15465514/6571327"&gt;https://stackoverflow.com/a/15465514/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/11/</guid><description>&lt;p&gt;That you can call &lt;code&gt;docker compose kill&lt;/code&gt; to kill all docker-compose containers
That there&amp;rsquo;s a &lt;code&gt;timeout&lt;/code&gt; shell command in gnu coreutils: &lt;a href="https://man7.org/linux/man-pages/man1/timeout.1.html"&gt;https://man7.org/linux/man-pages/man1/timeout.1.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/15/</guid><description>&lt;p&gt;That if you run &lt;code&gt;kubectl logs -n my_namespace $pod_name&lt;/code&gt;, you need to pass a container name afterwards.
I always forget that pod != container.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/22/</guid><description>&lt;p&gt;About &lt;code&gt;IfExists&lt;/code&gt; AWS IAM conditions: if a condition key might not exist (the resource doesn&amp;rsquo;t have it built-in, or a tag isn&amp;rsquo;t set), you can append &lt;code&gt;IfExists&lt;/code&gt; to the condition test.
For example &lt;code&gt;StringEquals -&amp;gt; StringEqualsIfExists&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_IfExists"&gt;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_IfExists&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/24/</guid><description>&lt;p&gt;that you can &lt;code&gt;lsblk&lt;/code&gt; to list the block devices that the OS knows about without sudo.&lt;/p&gt;
&lt;p&gt;that you can &lt;code&gt;sudo growpart&lt;/code&gt; to increase a partition size without restarting the machine.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/25/</guid><description>&lt;p&gt;That the 14kb limit for fast pages comes from TCP sending 10 initial 1500b packets to guess the amount of bandwidth the client can handle.
h/t &lt;a href="https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/"&gt;https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve heard of the 14-15kb limit before, but this was the clearest explanation I&amp;rsquo;d heard so far of why the limit exists.
Also, the author alleges that the limit applies to http/2 and http/3+QUIC.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/29/</guid><description>&lt;p&gt;That you can list the listening ports on a UNIX machine using &lt;code&gt;sudo lsof -i -P -n | grep LISTEN&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/30/</guid><description>&lt;p&gt;That the max duration for any AWS assumed role session is 12h.&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;--duration-seconds (integer)
The duration, in seconds, of the role session. The value specified can range from 900 seconds (15 minutes) up to the maximum session duration set for the role. **The maximum session duration setting can have a value from 1 hour to 12 hours.** If you specify a value higher than this setting or the administrator setting (whichever is lower), the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails.
Role chaining limits your Amazon Web Services CLI or Amazon Web Services API role session to a maximum of one hour. When you use the AssumeRole API operation to assume a role, you can specify the duration of your role session with the DurationSeconds parameter. You can specify a parameter value of up to 43200 seconds (12 hours), depending on the maximum session duration setting for your role. However, if you assume a role using role chaining and provide a DurationSeconds parameter value greater than one hour, the operation fails. To learn how to view the maximum value for your role, see View the Maximum Session Duration Setting for a Role in the IAM User Guide .
By default, the value is set to 3600 seconds.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;see &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html#options"&gt;https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html#options&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/08/31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/08/31/</guid><description>&lt;p&gt;That linux has a capability system:
&lt;a href="https://man7.org/linux/man-pages/man7/capabilities.7.html"&gt;https://man7.org/linux/man-pages/man7/capabilities.7.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I heard about this in &lt;a href="https://lobste.rs/s/ejwibq/dear_linux_privileged_ports_must_die"&gt;a discussion of privileged ports on linux&lt;/a&gt;, specifically about &lt;code&gt;PRIV_NET_PRIVADDR&lt;/code&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/02/</guid><description>&lt;p&gt;that &amp;ldquo;cf.&amp;rdquo; stands for &lt;a href="https://en.wikipedia.org/wiki/Cf."&gt;&amp;ldquo;conferatur&amp;rdquo;, or &amp;ldquo;to compare&amp;rdquo;&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/19/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Incentive stock options (ISOs)&lt;/strong&gt;: typically taxed only on sale of shares.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Non-qualifying stock options (NSOs)&lt;/strong&gt;: typically taxed both on exercise and on sale of shares.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Restricted stock units (RSUs)&lt;/strong&gt;: type of equity grant where you own shares automatically if certain conditions are met (like vesting). More likely to be issued by larger/older companies. Taxed on vesting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stock options&lt;/strong&gt;: A type of equity compensation that gives you the &lt;strong&gt;option&lt;/strong&gt; to buy (&amp;ldquo;exercise&amp;rdquo;) shares at the &amp;ldquo;strike price&amp;rdquo; listed on your equity grant. Startups tend to issue stock options.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/20/</guid><description>&lt;p&gt;A hack to detect if an element is visible/not:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isVisible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetWidth&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see &lt;a href="https://stackoverflow.com/questions/1343237/how-to-check-elements-visibility-via-javascript"&gt;https://stackoverflow.com/questions/1343237/how-to-check-elements-visibility-via-javascript&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/09/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/09/30/</guid><description>&lt;p&gt;that OCSP stands for Online Certificate Status Protocol. See &lt;a href="https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol"&gt;https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/03/</guid><description>&lt;p&gt;That you can write &lt;code&gt;&amp;gt;&amp;amp; 1&lt;/code&gt; and it still redirects to stdout!
example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;f&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ok&amp;#34;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;f 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ok
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/07/</guid><description>&lt;p&gt;STUN:
Session Traversal Utilities for NAT.
A standardized set of methods, including a network protocol, for traversal of network address translator (NAT) gateways.
see &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;https://en.wikipedia.org/wiki/STUN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DERP: Designated Encrypted Relay for Packets.
See &lt;a href="https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp"&gt;https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/10/</guid><description>&lt;p&gt;How to avoid opening live-share sessions in the web vscode version that I hate: &lt;a href="https://learn.microsoft.com/en-us/visualstudio/liveshare/quickstart/browser-join#joining-from-the-desktop"&gt;https://learn.microsoft.com/en-us/visualstudio/liveshare/quickstart/browser-join#joining-from-the-desktop&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/11/</guid><description>&lt;p&gt;That &lt;code&gt;terraform plan -detailed-exitcode&lt;/code&gt; exists: 0 means no diff, 1 means error, 2 means a diff exists.&lt;/p&gt;
&lt;p&gt;Also, that you can print the source code of a bash function like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;print_fn_src&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;declare&lt;/span&gt; -f &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/13/</guid><description>&lt;p&gt;That &amp;ldquo;CWE&amp;rdquo; is a MITRE abbreviation for &amp;ldquo;common weakness enumeration&amp;rdquo;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/18/</guid><description>&lt;p&gt;That BSD &lt;code&gt;arch&lt;/code&gt; command found on Macs also supports a &lt;code&gt;-${arch}&lt;/code&gt; flag for running universal binaries.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/19/</guid><description>&lt;p&gt;that you can easily send asyncio tasks to threads:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-py" data-lang="py"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;asyncio.threads&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;to_thread&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to_thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;baz&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/23/</guid><description>&lt;p&gt;That ARIA stands for Accessible Rich Internet Applications!
See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That in linux &lt;code&gt;ls(1)&lt;/code&gt; uses the environment variable &lt;code&gt;LS_COLORS&lt;/code&gt; to determine the colors in which the filenames are to be displayed.
Also, that linux specifies a &lt;code&gt;dir_colors(5)&lt;/code&gt; configuration file format for &lt;code&gt;dircolors(1)&lt;/code&gt;, which exports &lt;code&gt;LS_COLORS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://man7.org/linux/man-pages/man5/dir_colors.5.html"&gt;https://man7.org/linux/man-pages/man5/dir_colors.5.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That nix is complicated, which is exactly what my prior research told me.&lt;/p&gt;
&lt;p&gt;On one hand, it is &lt;strong&gt;AWESOME&lt;/strong&gt; to cd into a project and watch &lt;a href=""&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt; automatically spawn a development shell with all the fixings.
On the other, the nix ecosystem is bewildering.
I read through a few articles:&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/10/24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/10/24/</guid><description>&lt;p&gt;That you can list all addresses in terraform state by running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform state list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Docs at &lt;a href="https://developer.hashicorp.com/terraform/cli/commands/state/list"&gt;https://developer.hashicorp.com/terraform/cli/commands/state/list&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, that &lt;code&gt;compgen -v&lt;/code&gt; is a function, at least on Mac zsh.
Apparently in zsh &lt;code&gt;compgen -v&lt;/code&gt; calls something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; var_name in &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="p"&gt;(k)parameters[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$var_name&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which is the first time I&amp;rsquo;ve seen that kind of shell syntax.
It generates a &lt;code&gt;bad substitution&lt;/code&gt; message in bash 3.2, so I can only assume it&amp;rsquo;s zsh-specific.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/01/</guid><description>&lt;p&gt;That you can have too many SSH keys :)&lt;/p&gt;
&lt;p&gt;When I got&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Received disconnect from 256.256.256.256 port 22:2: too many authentication failures
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I found the following: &lt;a href="https://www.tecmint.com/fix-ssh-too-many-authentication-failures-error/"&gt;https://www.tecmint.com/fix-ssh-too-many-authentication-failures-error/&lt;/a&gt;
which advocated adding&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Host *
IdentitiesOnly yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to reduce the number of tried keys&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/07/</guid><description>&lt;p&gt;that AWS ALB target groups support HTTPS healthcheck targets: &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html"&gt;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That FQDN stands for Fully Qualified Domain Name. For example &lt;code&gt;sub.domain.tld.&lt;/code&gt; is a FQDN.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/08/</guid><description>&lt;p&gt;That the &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_tag"&gt;&lt;code&gt;aws_ec2_tag&lt;/code&gt;&lt;/a&gt;
resource can be used to add tags to AWS RAM-shared VPCs and subnets:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This resource should only be used in cases where EC2 resources are created outside Terraform (e.g., AMIs), being shared via Resource Access Manager (RAM), or implicitly created by other means (e.g., Transit Gateway VPN Attachments).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Also, that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the source of a module is a version control repository or archive file (generically, a &amp;ldquo;package&amp;rdquo;), the module itself may be in a sub-directory relative to the root of the package.
A special double-slash syntax is interpreted by Terraform to indicate that the remaining path after that point is a sub-directory within the package. For example:
&lt;code&gt;git::https://example.com/network.git//modules/vpc?ref=v1.2.0&lt;/code&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/10/</guid><description>&lt;p&gt;That Bitbucket pipelines has pipeline-specific SSH keys available at the path &lt;code&gt;$BITBUCKET_SSH_KEY_FILE&lt;/code&gt;.
See &lt;a href="https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/"&gt;https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Also, &lt;code&gt;git rev-parse --show-git-dir&lt;/code&gt; yields a relative path to the &lt;code&gt;.git&lt;/code&gt; dir for that repo.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/11/</guid><description>&lt;p&gt;that SAN = Subject Alternate Name. A SAN certificate is a TLS certificate that certifies multiple domain names.&lt;/p&gt;
&lt;p&gt;see &lt;a href="https://support.dnsimple.com/articles/what-is-ssl-san/"&gt;https://support.dnsimple.com/articles/what-is-ssl-san/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;that AWS Certificate Manager and other free-TLS-certificate services can&amp;rsquo;t validate private domain names since &lt;a href="https://www.ssl.com/guide/ssl-tls-certificate-issuance-and-revocation-with-acme/"&gt;ACME (Automated Certificate Management Environment)&lt;/a&gt; relies on public DNS or WHOIS records.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://docs.aws.amazon.com/acm/latest/userguide/domain-ownership-validation.html"&gt;https://docs.aws.amazon.com/acm/latest/userguide/domain-ownership-validation.html&lt;/a&gt;.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/14/</guid><description>&lt;p&gt;That &lt;code&gt;pg_catalog.pg_shdepend&lt;/code&gt; exists, and &amp;ldquo;records the dependency relationships between database objects and shared objects, such as roles.&amp;rdquo;
See &lt;a href="https://www.postgresql.org/docs/current/catalog-pg-shdepend.html"&gt;https://www.postgresql.org/docs/current/catalog-pg-shdepend.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/11/30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/11/30/</guid><description>&lt;p&gt;that you can option+click to change your cursor&amp;rsquo;s location in iterm2 and mac&amp;rsquo;s terminal.app!
H/t Vlad Grenkov for this one :)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As of Terraform 1.3, you can write&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;real_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See &lt;a href="https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules"&gt;https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/05/</guid><description>&lt;p&gt;That NFC in the context of security keys stands for Near Field Communication: a (usually bluetooth) connection that lets your security key authenticate with a nearby device.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That &lt;code&gt;git-worktree(1)&lt;/code&gt; is pretty handy! During the process of a refactor, I was able to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git worktree add --checkout &lt;span class="nv"&gt;$local_path&lt;/span&gt; &lt;span class="nv"&gt;$old_branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Explore some deleted/significantly altered files, then inspect the diff between the current and old state of the files!&lt;/p&gt;
&lt;p&gt;See also:
&lt;a href="https://jmtd.net/log/worktrees/"&gt;https://jmtd.net/log/worktrees/&lt;/a&gt;
&lt;a href="https://git-scm.com/docs/git-worktree"&gt;https://git-scm.com/docs/git-worktree&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/10/</guid><description>&lt;p&gt;That you can include doc-comments in macros:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-rs" data-lang="rs"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;macro_rules&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;documented&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;$(#[$outer:meta]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;$name&lt;/span&gt;:&lt;span class="nc"&gt;ident&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;$(#[$outer]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="cp"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="fm"&gt;documented!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sd"&gt;/// documented
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="sd"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my_function&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="n"&gt;my_function&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// hovering &amp;#34;function&amp;#34; now shows that the doc-comment is &amp;#34;documented&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;h/t &lt;a href="https://stackoverflow.com/a/33999625/6571327"&gt;https://stackoverflow.com/a/33999625/6571327&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/14/</guid><description>&lt;p&gt;that it&amp;rsquo;s possible to create indices on materialized views in postgres: &lt;a href="https://www.postgresql.org/docs/current/rules-materializedviews.html#RULES-MATERIALIZEDVIEWS"&gt;https://www.postgresql.org/docs/current/rules-materializedviews.html#RULES-MATERIALIZEDVIEWS&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/18/</guid><description>&lt;p&gt;That you can group fields in an html form with a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; tag, and that it accepts a top-level child &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; tag. Together,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-html" data-lang="html"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Legend&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;produces&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt; ┌────legend─────┐
│ │
│ │
│ ... │
│ │
│ │
└───────────────┘
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;which is simultaneously cool and hard to style.&lt;/p&gt;</description></item><item><title/><link>https://skalt.github.io/til/2022/12/26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://skalt.github.io/til/2022/12/26/</guid><description>&lt;p&gt;That you need to set a &lt;code&gt;value=&amp;quot;number&amp;quot;&lt;/code&gt; attribute AND a &lt;code&gt;max=&amp;quot;number&amp;quot;&lt;/code&gt; attribute on a html &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; element in order to display fractional progress.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>